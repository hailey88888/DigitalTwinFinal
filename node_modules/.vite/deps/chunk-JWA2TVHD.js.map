{
  "version": 3,
  "sources": ["../../@mui/x-charts/esm/ChartsClipPath/ChartsClipPath.js", "../../@mui/x-charts/esm/ChartsGrid/ChartsGrid.js", "../../@mui/x-charts/esm/ChartsGrid/chartsGridClasses.js", "../../@mui/x-charts/esm/ChartsOnAxisClickHandler/ChartsOnAxisClickHandler.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDrawingArea } from '../hooks/useDrawingArea';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * API:\n *\n * - [ChartsClipPath API](https://mui.com/x/api/charts/charts-clip-path/)\n */\nfunction ChartsClipPath(props) {\n  const {\n    id,\n    offset: offsetProps\n  } = props;\n  const {\n    left,\n    top,\n    width,\n    height\n  } = useDrawingArea();\n  const offset = _extends({\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }, offsetProps);\n  return /*#__PURE__*/_jsx(\"clipPath\", {\n    id: id,\n    children: /*#__PURE__*/_jsx(\"rect\", {\n      x: left - offset.left,\n      y: top - offset.top,\n      width: width + offset.left + offset.right,\n      height: height + offset.top + offset.bottom\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ChartsClipPath.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  id: PropTypes.string.isRequired,\n  offset: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  })\n} : void 0;\nexport { ChartsClipPath };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"vertical\", \"horizontal\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { useTicks } from '../hooks/useTicks';\nimport { getChartsGridUtilityClass, chartsGridClasses } from './chartsGridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridRoot = styled('g', {\n  name: 'MuiChartsGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${chartsGridClasses.verticalLine}`]: styles.verticalLine\n  }, {\n    [`&.${chartsGridClasses.horizontalLine}`]: styles.horizontalLine\n  }, styles.root]\n})({});\nconst GridLine = styled('line', {\n  name: 'MuiChartsGrid',\n  slot: 'Line',\n  overridesResolver: (props, styles) => styles.line\n})(({\n  theme\n}) => ({\n  stroke: (theme.vars || theme).palette.divider,\n  shapeRendering: 'crispEdges',\n  strokeWidth: 1\n}));\nconst useUtilityClasses = ({\n  classes\n}) => {\n  const slots = {\n    root: ['root'],\n    verticalLine: ['line', 'verticalLine'],\n    horizontalLine: ['line', 'horizontalLine']\n  };\n  return composeClasses(slots, getChartsGridUtilityClass, classes);\n};\n/**\n * Demos:\n *\n * - [Axis](https://mui.com/x/react-charts/axis/)\n *\n * API:\n *\n * - [ChartsGrid API](https://mui.com/x/api/charts/charts-axis/)\n */\nfunction ChartsGrid(props) {\n  const themeProps = useThemeProps({\n    props,\n    name: 'MuiChartsGrid'\n  });\n  const {\n      vertical,\n      horizontal\n    } = themeProps,\n    other = _objectWithoutPropertiesLoose(themeProps, _excluded);\n  const {\n    xAxis,\n    xAxisIds,\n    yAxis,\n    yAxisIds\n  } = React.useContext(CartesianContext);\n  const classes = useUtilityClasses(themeProps);\n  const horizontalAxisId = yAxisIds[0];\n  const verticalAxisId = xAxisIds[0];\n  const {\n    scale: xScale,\n    tickNumber: xTickNumber,\n    tickInterval: xTickInterval\n  } = xAxis[verticalAxisId];\n  const {\n    scale: yScale,\n    tickNumber: yTickNumber,\n    tickInterval: yTickInterval\n  } = yAxis[horizontalAxisId];\n  const xTicks = useTicks({\n    scale: xScale,\n    tickNumber: xTickNumber,\n    tickInterval: xTickInterval\n  });\n  const yTicks = useTicks({\n    scale: yScale,\n    tickNumber: yTickNumber,\n    tickInterval: yTickInterval\n  });\n  return /*#__PURE__*/_jsxs(GridRoot, _extends({}, other, {\n    className: classes.root,\n    children: [vertical && xTicks.map(({\n      formattedValue,\n      offset\n    }) => /*#__PURE__*/_jsx(GridLine, {\n      y1: yScale.range()[0],\n      y2: yScale.range()[1],\n      x1: offset,\n      x2: offset,\n      className: classes.verticalLine\n    }, `vertical-${formattedValue}`)), horizontal && yTicks.map(({\n      formattedValue,\n      offset\n    }) => /*#__PURE__*/_jsx(GridLine, {\n      y1: offset,\n      y2: offset,\n      x1: xScale.range()[0],\n      x2: xScale.range()[1],\n      className: classes.horizontalLine\n    }, `horizontal-${formattedValue}`))]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? ChartsGrid.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * Displays horizontal grid.\n   */\n  horizontal: PropTypes.bool,\n  /**\n   * Displays vertical grid.\n   */\n  vertical: PropTypes.bool\n} : void 0;\nexport { ChartsGrid };", "import generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nexport function getChartsGridUtilityClass(slot) {\n  return generateUtilityClass('MuiChartsGrid', slot);\n}\nexport const chartsGridClasses = generateUtilityClasses('MuiChartsGrid', ['root', 'line', 'horizontalLine', 'verticalLine']);", "import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { SvgContext } from '../context/DrawingProvider';\nimport { InteractionContext } from '../context/InteractionProvider';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { SeriesContext } from '../context/SeriesContextProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ChartsOnAxisClickHandler(props) {\n  const {\n    onAxisClick\n  } = props;\n  const svgRef = React.useContext(SvgContext);\n  const series = React.useContext(SeriesContext);\n  const {\n    axis\n  } = React.useContext(InteractionContext);\n  const {\n    xAxisIds,\n    xAxis,\n    yAxisIds,\n    yAxis\n  } = React.useContext(CartesianContext);\n  React.useEffect(() => {\n    const element = svgRef.current;\n    if (element === null || !onAxisClick) {\n      return () => {};\n    }\n    const handleMouseClick = event => {\n      event.preventDefault();\n      const isXaxis = (axis.x && axis.x.index) !== undefined;\n      const USED_AXIS_ID = isXaxis ? xAxisIds[0] : yAxisIds[0];\n      const dataIndex = isXaxis ? axis.x && axis.x.index : axis.y && axis.y.index;\n      if (dataIndex == null) {\n        return;\n      }\n      const seriesValues = {};\n      Object.keys(series).filter(seriesType => ['bar', 'line'].includes(seriesType)).forEach(seriesType => {\n        series[seriesType]?.seriesOrder.forEach(seriesId => {\n          const seriesItem = series[seriesType].series[seriesId];\n          const axisKey = isXaxis ? seriesItem.xAxisKey : seriesItem.yAxisKey;\n          if (axisKey === undefined || axisKey === USED_AXIS_ID) {\n            seriesValues[seriesId] = seriesItem.data[dataIndex];\n          }\n        });\n      });\n      const axisValue = (isXaxis ? xAxis : yAxis)[USED_AXIS_ID].data?.[dataIndex];\n      onAxisClick(event, {\n        dataIndex,\n        axisValue,\n        seriesValues\n      });\n    };\n    element.addEventListener('click', handleMouseClick);\n    return () => {\n      element.removeEventListener('click', handleMouseClick);\n    };\n  }, [axis.x, axis.y, onAxisClick, series, svgRef, xAxis, xAxisIds, yAxis, yAxisIds]);\n\n  // eslint-disable-next-line react/jsx-no-useless-fragment\n  return /*#__PURE__*/_jsx(React.Fragment, {});\n}\nprocess.env.NODE_ENV !== \"production\" ? ChartsOnAxisClickHandler.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The function called for onClick events.\n   * The second argument contains information about all line/bar elements at the current mouse position.\n   * @param {MouseEvent} event The mouse event recorded on the `<svg/>` element.\n   * @param {null | AxisData} data The data about the clicked axis and items associated with it.\n   */\n  onAxisClick: PropTypes.func\n} : void 0;\nexport { ChartsOnAxisClickHandler };"],
  "mappings": "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",
  "names": ["_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_jsxs", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_a", "_jsx", "PropTypes"]
}
