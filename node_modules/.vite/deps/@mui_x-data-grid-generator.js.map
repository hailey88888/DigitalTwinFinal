{
  "version": 3,
  "sources": ["../../@mui/icons-material/Info.js", "../../@mui/icons-material/ReportProblem.js", "../../@mui/icons-material/Autorenew.js", "../../@mui/icons-material/Done.js", "../../chance/chance.js", "../../@mui/x-data-grid-generator/renderer/renderAvatar.js", "../../@mui/x-data-grid-generator/renderer/renderCountry.js", "../../@mui/x-data-grid-generator/renderer/renderEmail.js", "../../@mui/x-data-grid-generator/renderer/renderLink.js", "../../@mui/x-data-grid-generator/renderer/renderIncoterm.js", "../../@mui/x-data-grid-generator/renderer/renderPnl.js", "../../@mui/x-data-grid-generator/renderer/renderProgress.js", "../../@mui/x-data-grid-generator/renderer/renderRating.js", "../../@mui/x-data-grid-generator/renderer/renderStatus.js", "../../@mui/x-data-grid-generator/renderer/renderTotalPrice.js", "../../@mui/x-data-grid-generator/renderer/renderEditCurrency.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-license/encoding/md5.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-license/encoding/base64.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-license/utils/licenseScope.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-license/utils/licensingModel.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-license/utils/licenseErrorMessageUtils.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-license/utils/licenseInfo.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-license/utils/licenseStatus.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-license/verifyLicense/verifyLicense.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-license/useLicenseVerifier/useLicenseVerifier.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-license/Unstable_LicenseInfoProvider/MuiLicenseInfoContext.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-license/Watermark/Watermark.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-license/Unstable_LicenseInfoProvider/LicenseInfoProvider.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/GridScrollArea.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/context/GridRootPropsContext.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/constants/localeTextConstants.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/constants/gridClasses.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/GridApiContext.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useLazyRef.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useOnMount.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/warning.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/fastObjectShallowCompare.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/createSelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useTimeout.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/utils.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/models/gridEditRowModel.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/models/gridFilterItem.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/models/params/gridRowParams.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/models/gridColumnGrouping.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/getPublicApiRef.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/colDef/gridStringOperators.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/colDef/gridStringColDef.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/menu/GridMenu.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useResizeObserver.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/colDef/gridDateColDef.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/colDef/gridDateOperators.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/keyboardUtils.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/fastMemo.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/base/GridOverlays.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/GridHeaders.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/columnResize/columnResizeSelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/cell/GridCell.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/domUtils.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/cellBorderUtils.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/cell/GridActionsCellItem.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/containers/GridRoot.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/containers/GridOverlay.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/containers/GridToolbarContainer.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/material/icons/index.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/columnsManagement/utils.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/panel/GridPanel.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/panel/GridPanelHeader.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/toolbar/GridToolbar.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/toolbar/GridToolbarColumnsButton.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/toolbar/GridToolbarDensitySelector.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/toolbar/GridToolbarFilterButton.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExportContainer.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/toolbar/GridToolbarQuickFilter.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/GridFooter.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/GridHeader.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/GridPagination.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/GridRowCount.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/GridRow.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/context/GridContextProvider.js", "../../@mui/x-data-grid-premium/esm/DataGridPremium/DataGridPremium.js", "../../@mui/x-data-grid-premium/esm/hooks/features/aggregation/useGridAggregation.js", "../../@mui/x-data-grid-premium/esm/hooks/features/aggregation/gridAggregationSelectors.js", "../../@mui/x-data-grid-premium/esm/hooks/features/aggregation/gridAggregationUtils.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/GridColumnHeaders.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/GridDetailPanels.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/GridPinnedRows.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/material/index.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/material/components/MUISelectOption.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/core/useGridTheme.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/Store.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/EventManager.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/exportAs.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/export/utils.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/internals/utils/computeSlots.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/internals/utils/useProps.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/internals/utils/propValidation.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/headerFiltering/useGridHeaderFiltering.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/throttle.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/utils/createControllablePromise.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js", "../../@mui/x-data-grid-premium/esm/hooks/features/aggregation/createAggregationLookup.js", "../../@mui/x-data-grid-premium/esm/hooks/features/aggregation/useGridAggregationPreProcessors.js", "../../@mui/x-data-grid-premium/esm/hooks/features/aggregation/wrapColumnWithAggregation.js", "../../@mui/x-data-grid-premium/esm/components/GridFooterCell.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/hooks/utils/useGridApiRef.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/DataGrid/DataGrid.js", "../../@mui/x-data-grid-premium/node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js", "../../@mui/x-data-grid-premium/esm/hooks/utils/useGridRootProps.js", "../../@mui/x-data-grid-premium/esm/components/GridAggregationHeader.js", "../../@mui/x-data-grid-premium/esm/hooks/utils/useGridApiContext.js", "../../@mui/x-data-grid-premium/esm/hooks/features/rowGrouping/useGridRowGrouping.js", "../../@mui/x-data-grid-premium/esm/hooks/features/rowGrouping/gridRowGroupingSelector.js", "../../@mui/x-data-grid-premium/esm/hooks/features/rowGrouping/gridRowGroupingUtils.js", "../../@mui/x-data-grid-premium/esm/hooks/features/rowGrouping/useGridRowGroupingPreProcessors.js", "../../@mui/x-data-grid-premium/esm/hooks/features/rowGrouping/createGroupingColDef.js", "../../@mui/x-data-grid-premium/esm/components/GridGroupingColumnFooterCell.js", "../../@mui/x-data-grid-premium/esm/components/GridGroupingCriteriaCell.js", "../../@mui/x-data-grid-premium/esm/components/GridGroupingColumnLeafCell.js", "../../@mui/x-data-grid-premium/esm/hooks/features/export/useGridExcelExport.js", "../../@mui/x-data-grid-premium/esm/hooks/features/export/serializer/excelSerializer.js", "../../@mui/x-data-grid-premium/esm/components/GridExcelExportMenuItem.js", "../../@mui/x-data-grid-premium/esm/material/icons.js", "../../@mui/x-data-grid-premium/esm/components/GridColumnMenuAggregationItem.js", "../../@mui/x-data-grid-premium/esm/components/GridPremiumColumnMenu.js", "../../@mui/x-data-grid-premium/esm/components/GridColumnMenuRowGroupItem.js", "../../@mui/x-data-grid-premium/esm/components/GridColumnMenuRowUngroupItem.js", "../../@mui/x-data-grid-premium/esm/hooks/features/cellSelection/useGridCellSelection.js", "../../@mui/x-data-grid-premium/esm/hooks/features/cellSelection/gridCellSelectionSelector.js", "../../@mui/x-data-grid-premium/esm/hooks/features/clipboard/useGridClipboardImport.js", "../../@mui/x-data-grid-premium/esm/DataGridPremium/useDataGridPremiumComponent.js", "../../@mui/x-data-grid-premium/esm/DataGridPremium/useDataGridPremiumProps.js", "../../@mui/x-data-grid-premium/esm/hooks/features/aggregation/gridAggregationFunctions.js", "../../@mui/x-data-grid-premium/esm/constants/dataGridPremiumDefaultSlotsComponents.js", "../../@mui/x-data-grid-premium/esm/material/index.js", "../../@mui/x-data-grid-premium/esm/utils/releaseInfo.js", "../../@mui/x-data-grid-premium/esm/hooks/utils/useKeepGroupedColumnsHidden.js", "../../@mui/x-data-grid-generator/services/static-data.js", "../../@mui/x-data-grid-generator/renderer/renderEditProgress.js", "../../@mui/x-data-grid-generator/renderer/renderEditStatus.js", "../../@mui/x-data-grid-generator/renderer/renderEditIncoterm.js", "../../@mui/x-data-grid-generator/renderer/renderEditRating.js", "../../@mui/x-data-grid-generator/renderer/renderEditCountry.js", "../../@mui/x-data-grid-generator/services/random-generator.js", "../../@mui/x-data-grid-generator/services/asyncWorker.js", "../../@mui/x-data-grid-generator/services/real-data-service.js", "../../@mui/x-data-grid-generator/services/basic-data-service.js", "../../@mui/x-data-grid-generator/columns/commodities.columns.js", "../../@mui/x-data-grid-generator/columns/employees.columns.js", "../../@mui/x-data-grid-generator/hooks/useDemoData.js", "../../@mui/x-data-grid-generator/node_modules/lru-cache/index.mjs", "../../@mui/x-data-grid-generator/services/tree-data-generator.js", "../../@mui/x-data-grid-generator/hooks/useBasicDemoData.js", "../../@mui/x-data-grid-generator/hooks/useMovieData.js", "../../@mui/x-data-grid-generator/hooks/useQuery.js", "../../@mui/x-data-grid/hooks/features/headerFiltering/useGridHeaderFiltering.js"],
  "sourcesContent": ["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');", "\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M1 21h22L12 2zm12-3h-2v-2h2zm0-4h-2v-4h2z\"\n}), 'ReportProblem');", "\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6m6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26\"\n}), 'Autorenew');", "\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4z\"\n}), 'Done');", "//  Chance.js 1.1.11\n//  https://chancejs.com\n//  (c) 2013 Victor Quinn\n//  Chance may be freely distributed or modified under the MIT license.\n\n(function () {\n\n    // Constants\n    var MAX_INT = 9007199254740992;\n    var MIN_INT = -MAX_INT;\n    var NUMBERS = '0123456789';\n    var CHARS_LOWER = 'abcdefghijklmnopqrstuvwxyz';\n    var CHARS_UPPER = CHARS_LOWER.toUpperCase();\n    var HEX_POOL  = NUMBERS + \"abcdef\";\n\n    // Errors\n    function UnsupportedError(message) {\n        this.name = 'UnsupportedError';\n        this.message = message || 'This feature is not supported on this platform';\n    }\n\n    UnsupportedError.prototype = new Error();\n    UnsupportedError.prototype.constructor = UnsupportedError;\n\n    // Cached array helpers\n    var slice = Array.prototype.slice;\n\n    // Constructor\n    function Chance (seed) {\n        if (!(this instanceof Chance)) {\n            if (!seed) { seed = null; } // handle other non-truthy seeds, as described in issue #322\n            return seed === null ? new Chance() : new Chance(seed);\n        }\n\n        // if user has provided a function, use that as the generator\n        if (typeof seed === 'function') {\n            this.random = seed;\n            return this;\n        }\n\n        if (arguments.length) {\n            // set a starting value of zero so we can add to it\n            this.seed = 0;\n        }\n\n        // otherwise, leave this.seed blank so that MT will receive a blank\n\n        for (var i = 0; i < arguments.length; i++) {\n            var seedling = 0;\n            if (Object.prototype.toString.call(arguments[i]) === '[object String]') {\n                for (var j = 0; j < arguments[i].length; j++) {\n                    // create a numeric hash for each argument, add to seedling\n                    var hash = 0;\n                    for (var k = 0; k < arguments[i].length; k++) {\n                        hash = arguments[i].charCodeAt(k) + (hash << 6) + (hash << 16) - hash;\n                    }\n                    seedling += hash;\n                }\n            } else {\n                seedling = arguments[i];\n            }\n            this.seed += (arguments.length - i) * seedling;\n        }\n\n        // If no generator function was provided, use our MT\n        this.mt = this.mersenne_twister(this.seed);\n        this.bimd5 = this.blueimp_md5();\n        this.random = function () {\n            return this.mt.random(this.seed);\n        };\n\n        return this;\n    }\n\n    Chance.prototype.VERSION = \"1.1.11\";\n\n    // Random helper functions\n    function initOptions(options, defaults) {\n        options = options || {};\n\n        if (defaults) {\n            for (var i in defaults) {\n                if (typeof options[i] === 'undefined') {\n                    options[i] = defaults[i];\n                }\n            }\n        }\n\n        return options;\n    }\n\n    function range(size) {\n        return Array.apply(null, Array(size)).map(function (_, i) {return i;});\n    }\n\n    function testRange(test, errorMessage) {\n        if (test) {\n            throw new RangeError(errorMessage);\n        }\n    }\n\n    /**\n     * Encode the input string with Base64.\n     */\n    var base64 = function() {\n        throw new Error('No Base64 encoder available.');\n    };\n\n    // Select proper Base64 encoder.\n    (function determineBase64Encoder() {\n        if (typeof btoa === 'function') {\n            base64 = btoa;\n        } else if (typeof Buffer === 'function') {\n            base64 = function(input) {\n                return new Buffer(input).toString('base64');\n            };\n        }\n    })();\n\n    // -- Basics --\n\n    /**\n     *  Return a random bool, either true or false\n     *\n     *  @param {Object} [options={ likelihood: 50 }] alter the likelihood of\n     *    receiving a true or false value back.\n     *  @throws {RangeError} if the likelihood is out of bounds\n     *  @returns {Bool} either true or false\n     */\n    Chance.prototype.bool = function (options) {\n        // likelihood of success (true)\n        options = initOptions(options, {likelihood : 50});\n\n        // Note, we could get some minor perf optimizations by checking range\n        // prior to initializing defaults, but that makes code a bit messier\n        // and the check more complicated as we have to check existence of\n        // the object then existence of the key before checking constraints.\n        // Since the options initialization should be minor computationally,\n        // decision made for code cleanliness intentionally. This is mentioned\n        // here as it's the first occurrence, will not be mentioned again.\n        testRange(\n            options.likelihood < 0 || options.likelihood > 100,\n            \"Chance: Likelihood accepts values from 0 to 100.\"\n        );\n\n        return this.random() * 100 < options.likelihood;\n    };\n\n    Chance.prototype.falsy = function (options) {\n        // return a random falsy value\n        options = initOptions(options, {pool: [false, null, 0, NaN, '', undefined]})\n        var pool = options.pool,\n            index = this.integer({min: 0, max: pool.length - 1}),\n            value = pool[index];\n\n        return value;\n    }\n\n    Chance.prototype.animal = function (options){\n      //returns a random animal\n      options = initOptions(options);\n\n      if(typeof options.type !== 'undefined'){\n        //if user does not put in a valid animal type, user will get an error\n        testRange(\n           !this.get(\"animals\")[options.type.toLowerCase()],\n           \"Please pick from desert, ocean, grassland, forest, zoo, pets, farm.\"\n         );\n         //if user does put in valid animal type, will return a random animal of that type\n          return this.pick(this.get(\"animals\")[options.type.toLowerCase()]);\n      }\n       //if user does not put in any animal type, will return a random animal regardless\n      var animalTypeArray = [\"desert\",\"forest\",\"ocean\",\"zoo\",\"farm\",\"pet\",\"grassland\"];\n      return this.pick(this.get(\"animals\")[this.pick(animalTypeArray)]);\n    };\n\n    /**\n     *  Return a random character.\n     *\n     *  @param {Object} [options={}] can specify a character pool or alpha,\n     *    numeric, symbols and casing (lower or upper)\n     *  @returns {String} a single random character\n     */\n    Chance.prototype.character = function (options) {\n        options = initOptions(options);\n\n        var symbols = \"!@#$%^&*()[]\",\n            letters, pool;\n\n        if (options.casing === 'lower') {\n            letters = CHARS_LOWER;\n        } else if (options.casing === 'upper') {\n            letters = CHARS_UPPER;\n        } else {\n            letters = CHARS_LOWER + CHARS_UPPER;\n        }\n\n        if (options.pool) {\n            pool = options.pool;\n        } else {\n            pool = '';\n            if (options.alpha) {\n                pool += letters;\n            }\n            if (options.numeric) {\n                pool += NUMBERS;\n            }\n            if (options.symbols) {\n                pool += symbols;\n            }\n            if (!pool) {\n                pool = letters + NUMBERS + symbols;\n            }\n        }\n\n        return pool.charAt(this.natural({max: (pool.length - 1)}));\n    };\n\n    // Note, wanted to use \"float\" or \"double\" but those are both JS reserved words.\n\n    // Note, fixed means N OR LESS digits after the decimal. This because\n    // It could be 14.9000 but in JavaScript, when this is cast as a number,\n    // the trailing zeroes are dropped. Left to the consumer if trailing zeroes are\n    // needed\n    /**\n     *  Return a random floating point number\n     *\n     *  @param {Object} [options={}] can specify a fixed precision, min, max\n     *  @returns {Number} a single floating point number\n     *  @throws {RangeError} Can only specify fixed or precision, not both. Also\n     *    min cannot be greater than max\n     */\n    Chance.prototype.floating = function (options) {\n        options = initOptions(options, {fixed : 4});\n        testRange(\n            options.fixed && options.precision,\n            \"Chance: Cannot specify both fixed and precision.\"\n        );\n\n        var num;\n        var fixed = Math.pow(10, options.fixed);\n\n        var max = MAX_INT / fixed;\n        var min = -max;\n\n        testRange(\n            options.min && options.fixed && options.min < min,\n            \"Chance: Min specified is out of range with fixed. Min should be, at least, \" + min\n        );\n        testRange(\n            options.max && options.fixed && options.max > max,\n            \"Chance: Max specified is out of range with fixed. Max should be, at most, \" + max\n        );\n\n        options = initOptions(options, { min : min, max : max });\n\n        // Todo - Make this work!\n        // options.precision = (typeof options.precision !== \"undefined\") ? options.precision : false;\n\n        num = this.integer({min: options.min * fixed, max: options.max * fixed});\n        var num_fixed = (num / fixed).toFixed(options.fixed);\n\n        return parseFloat(num_fixed);\n    };\n\n    /**\n     *  Return a random integer\n     *\n     *  NOTE the max and min are INCLUDED in the range. So:\n     *  chance.integer({min: 1, max: 3});\n     *  would return either 1, 2, or 3.\n     *\n     *  @param {Object} [options={}] can specify a min and/or max\n     *  @returns {Number} a single random integer number\n     *  @throws {RangeError} min cannot be greater than max\n     */\n    Chance.prototype.integer = function (options) {\n        // 9007199254740992 (2^53) is the max integer number in JavaScript\n        // See: http://vq.io/132sa2j\n        options = initOptions(options, {min: MIN_INT, max: MAX_INT});\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        return Math.floor(this.random() * (options.max - options.min + 1) + options.min);\n    };\n\n    /**\n     *  Return a random natural\n     *\n     *  NOTE the max and min are INCLUDED in the range. So:\n     *  chance.natural({min: 1, max: 3});\n     *  would return either 1, 2, or 3.\n     *\n     *  @param {Object} [options={}] can specify a min and/or max or a numerals count.\n     *  @returns {Number} a single random integer number\n     *  @throws {RangeError} min cannot be greater than max\n     */\n    Chance.prototype.natural = function (options) {\n        options = initOptions(options, {min: 0, max: MAX_INT});\n        if (typeof options.numerals === 'number'){\n          testRange(options.numerals < 1, \"Chance: Numerals cannot be less than one.\");\n          options.min = Math.pow(10, options.numerals - 1);\n          options.max = Math.pow(10, options.numerals) - 1;\n        }\n        testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\n\n        if (options.exclude) {\n            testRange(!Array.isArray(options.exclude), \"Chance: exclude must be an array.\")\n\n            for (var exclusionIndex in options.exclude) {\n                testRange(!Number.isInteger(options.exclude[exclusionIndex]), \"Chance: exclude must be numbers.\")\n            }\n\n            var random = options.min + this.natural({max: options.max - options.min - options.exclude.length})\n            var sortedExclusions = options.exclude.sort();\n            for (var sortedExclusionIndex in sortedExclusions) {\n                if (random < sortedExclusions[sortedExclusionIndex]) {\n                    break\n                }\n                random++\n            }\n            return random\n        }\n        return this.integer(options);\n    };\n\n    /**\n     *  Return a random prime number\n     *\n     *  NOTE the max and min are INCLUDED in the range.\n     *\n     *  @param {Object} [options={}] can specify a min and/or max\n     *  @returns {Number} a single random prime number\n     *  @throws {RangeError} min cannot be greater than max nor negative\n     */\n    Chance.prototype.prime = function (options) {\n        options = initOptions(options, {min: 0, max: 10000});\n        testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        var lastPrime = data.primes[data.primes.length - 1];\n        if (options.max > lastPrime) {\n            for (var i = lastPrime + 2; i <= options.max; ++i) {\n                if (this.is_prime(i)) {\n                    data.primes.push(i);\n                }\n            }\n        }\n        var targetPrimes = data.primes.filter(function (prime) {\n            return prime >= options.min && prime <= options.max;\n        });\n        return this.pick(targetPrimes);\n    };\n\n    /**\n     * Determine whether a given number is prime or not.\n     */\n    Chance.prototype.is_prime = function (n) {\n        if (n % 1 || n < 2) {\n            return false;\n        }\n        if (n % 2 === 0) {\n            return n === 2;\n        }\n        if (n % 3 === 0) {\n            return n === 3;\n        }\n        var m = Math.sqrt(n);\n        for (var i = 5; i <= m; i += 6) {\n            if (n % i === 0 || n % (i + 2) === 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     *  Return a random hex number as string\n     *\n     *  NOTE the max and min are INCLUDED in the range. So:\n     *  chance.hex({min: '9', max: 'B'});\n     *  would return either '9', 'A' or 'B'.\n     *\n     *  @param {Object} [options={}] can specify a min and/or max and/or casing\n     *  @returns {String} a single random string hex number\n     *  @throws {RangeError} min cannot be greater than max\n     */\n    Chance.prototype.hex = function (options) {\n        options = initOptions(options, {min: 0, max: MAX_INT, casing: 'lower'});\n        testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\n\t\tvar integer = this.natural({min: options.min, max: options.max});\n\t\tif (options.casing === 'upper') {\n\t\t\treturn integer.toString(16).toUpperCase();\n\t\t}\n\t\treturn integer.toString(16);\n    };\n\n    Chance.prototype.letter = function(options) {\n        options = initOptions(options, {casing: 'lower'});\n        var pool = \"abcdefghijklmnopqrstuvwxyz\";\n        var letter = this.character({pool: pool});\n        if (options.casing === 'upper') {\n            letter = letter.toUpperCase();\n        }\n        return letter;\n    }\n\n    /**\n     *  Return a random string\n     *\n     *  @param {Object} [options={}] can specify a length or min and max\n     *  @returns {String} a string of random length\n     *  @throws {RangeError} length cannot be less than zero\n     */\n    Chance.prototype.string = function (options) {\n        options = initOptions(options, { min: 5, max: 20 });\n\n        if (options.length !== 0 && !options.length) {\n            options.length = this.natural({ min: options.min, max: options.max })\n        }\n\n        testRange(options.length < 0, \"Chance: Length cannot be less than zero.\");\n        var length = options.length,\n            text = this.n(this.character, length, options);\n\n        return text.join(\"\");\n    };\n\n    function CopyToken(c) {\n        this.c = c\n    }\n\n    CopyToken.prototype = {\n        substitute: function () {\n            return this.c\n        }\n    }\n\n    function EscapeToken(c) {\n        this.c = c\n    }\n\n    EscapeToken.prototype = {\n        substitute: function () {\n            if (!/[{}\\\\]/.test(this.c)) {\n                throw new Error('Invalid escape sequence: \"\\\\' + this.c + '\".')\n            }\n            return this.c\n        }\n    }\n\n    function ReplaceToken(c) {\n        this.c = c\n    }\n\n    ReplaceToken.prototype = {\n        replacers: {\n            '#': function (chance) { return chance.character({ pool: NUMBERS }) },\n            'A': function (chance) { return chance.character({ pool: CHARS_UPPER }) },\n            'a': function (chance) { return chance.character({ pool: CHARS_LOWER }) },\n        },\n\n        substitute: function (chance) {\n            var replacer = this.replacers[this.c]\n            if (!replacer) {\n                throw new Error('Invalid replacement character: \"' + this.c + '\".')\n            }\n            return replacer(chance)\n        }\n    }\n\n    function parseTemplate(template) {\n        var tokens = []\n        var mode = 'identity'\n        for (var i = 0; i<template.length; i++) {\n            var c = template[i]\n            switch (mode) {\n                case 'escape':\n                    tokens.push(new EscapeToken(c))\n                    mode = 'identity'\n                    break\n                case 'identity':\n                    if (c === '{') {\n                        mode = 'replace'\n                    } else if (c === '\\\\') {\n                        mode = 'escape'\n                    } else {\n                        tokens.push(new CopyToken(c))\n                    }\n                    break\n                case 'replace':\n                    if (c === '}') {\n                        mode = 'identity'\n                    } else {\n                        tokens.push(new ReplaceToken(c))\n                    }\n                    break\n            }\n        }\n        return tokens\n    }\n\n    /**\n     *  Return a random string matching the given template.\n     *\n     *  The template consists of any number of \"character replacement\" and\n     *  \"character literal\" sequences. A \"character replacement\" sequence\n     *  starts with a left brace, has any number of special replacement\n     *  characters, and ends with a right brace. A character literal can be any\n     *  character except a brace or a backslash. A literal brace or backslash\n     *  character can be included in the output by escaping with a backslash.\n     *\n     *  The following replacement characters can be used in a replacement\n     *  sequence:\n     *\n     *      \"#\": a random digit\n     *      \"a\": a random lower case letter\n     *      \"A\": a random upper case letter\n     *\n     *  Example: chance.template('{AA###}-{##}')\n     *\n     *  @param {String} template string.\n     *  @returns {String} a random string matching the template.\n     */\n    Chance.prototype.template = function (template) {\n        if (!template) {\n            throw new Error('Template string is required')\n        }\n        var self = this\n        return parseTemplate(template)\n            .map(function (token) { return token.substitute(self) })\n            .join('');\n    };\n\n\n    /**\n     *  Return a random buffer\n     *\n     *  @param {Object} [options={}] can specify a length\n     *  @returns {Buffer} a buffer of random length\n     *  @throws {RangeError} length cannot be less than zero\n     */\n    Chance.prototype.buffer = function (options) {\n        if (typeof Buffer === 'undefined') {\n            throw new UnsupportedError('Sorry, the buffer() function is not supported on your platform');\n        }\n        options = initOptions(options, { length: this.natural({min: 5, max: 20}) });\n        testRange(options.length < 0, \"Chance: Length cannot be less than zero.\");\n        var length = options.length;\n        var content = this.n(this.character, length, options);\n\n        return Buffer.from(content);\n    };\n\n    // -- End Basics --\n\n    // -- Helpers --\n\n    Chance.prototype.capitalize = function (word) {\n        return word.charAt(0).toUpperCase() + word.substr(1);\n    };\n\n    Chance.prototype.mixin = function (obj) {\n        for (var func_name in obj) {\n            this[func_name] = obj[func_name];\n        }\n        return this;\n    };\n\n    /**\n     *  Given a function that generates something random and a number of items to generate,\n     *    return an array of items where none repeat.\n     *\n     *  @param {Function} fn the function that generates something random\n     *  @param {Number} num number of terms to generate\n     *  @param {Object} options any options to pass on to the generator function\n     *  @returns {Array} an array of length `num` with every item generated by `fn` and unique\n     *\n     *  There can be more parameters after these. All additional parameters are provided to the given function\n     */\n    Chance.prototype.unique = function(fn, num, options) {\n        testRange(\n            typeof fn !== \"function\",\n            \"Chance: The first argument must be a function.\"\n        );\n\n        var comparator = function(arr, val) { return arr.indexOf(val) !== -1; };\n\n        if (options) {\n            comparator = options.comparator || comparator;\n        }\n\n        var arr = [], count = 0, result, MAX_DUPLICATES = num * 50, params = slice.call(arguments, 2);\n\n        while (arr.length < num) {\n            var clonedParams = JSON.parse(JSON.stringify(params));\n            result = fn.apply(this, clonedParams);\n            if (!comparator(arr, result)) {\n                arr.push(result);\n                // reset count when unique found\n                count = 0;\n            }\n\n            if (++count > MAX_DUPLICATES) {\n                throw new RangeError(\"Chance: num is likely too large for sample set\");\n            }\n        }\n        return arr;\n    };\n\n    /**\n     *  Gives an array of n random terms\n     *\n     *  @param {Function} fn the function that generates something random\n     *  @param {Number} n number of terms to generate\n     *  @returns {Array} an array of length `n` with items generated by `fn`\n     *\n     *  There can be more parameters after these. All additional parameters are provided to the given function\n     */\n    Chance.prototype.n = function(fn, n) {\n        testRange(\n            typeof fn !== \"function\",\n            \"Chance: The first argument must be a function.\"\n        );\n\n        if (typeof n === 'undefined') {\n            n = 1;\n        }\n        var i = n, arr = [], params = slice.call(arguments, 2);\n\n        // Providing a negative count should result in a noop.\n        i = Math.max( 0, i );\n\n        for (null; i--; null) {\n            arr.push(fn.apply(this, params));\n        }\n\n        return arr;\n    };\n\n    // H/T to SO for this one: http://vq.io/OtUrZ5\n    Chance.prototype.pad = function (number, width, pad) {\n        // Default pad to 0 if none provided\n        pad = pad || '0';\n        // Convert number to a string\n        number = number + '';\n        return number.length >= width ? number : new Array(width - number.length + 1).join(pad) + number;\n    };\n\n    // DEPRECATED on 2015-10-01\n    Chance.prototype.pick = function (arr, count) {\n        if (arr.length === 0) {\n            throw new RangeError(\"Chance: Cannot pick() from an empty array\");\n        }\n        if (!count || count === 1) {\n            return arr[this.natural({max: arr.length - 1})];\n        } else {\n            return this.shuffle(arr).slice(0, count);\n        }\n    };\n\n    // Given an array, returns a single random element\n    Chance.prototype.pickone = function (arr) {\n        if (arr.length === 0) {\n          throw new RangeError(\"Chance: Cannot pickone() from an empty array\");\n        }\n        return arr[this.natural({max: arr.length - 1})];\n    };\n\n    // Given an array, returns a random set with 'count' elements\n    Chance.prototype.pickset = function (arr, count) {\n        if (count === 0) {\n            return [];\n        }\n        if (arr.length === 0) {\n            throw new RangeError(\"Chance: Cannot pickset() from an empty array\");\n        }\n        if (count < 0) {\n            throw new RangeError(\"Chance: Count must be a positive number\");\n        }\n        if (!count || count === 1) {\n            return [ this.pickone(arr) ];\n        } else {\n            var array = arr.slice(0);\n            var end = array.length;\n\n            return this.n(function () {\n                var index = this.natural({max: --end});\n                var value = array[index];\n                array[index] = array[end];\n                return value;\n            }, Math.min(end, count));\n        }\n    };\n\n    Chance.prototype.shuffle = function (arr) {\n        var new_array = [],\n            j = 0,\n            length = Number(arr.length),\n            source_indexes = range(length),\n            last_source_index = length - 1,\n            selected_source_index;\n\n        for (var i = 0; i < length; i++) {\n            // Pick a random index from the array\n            selected_source_index = this.natural({max: last_source_index});\n            j = source_indexes[selected_source_index];\n\n            // Add it to the new array\n            new_array[i] = arr[j];\n\n            // Mark the source index as used\n            source_indexes[selected_source_index] = source_indexes[last_source_index];\n            last_source_index -= 1;\n        }\n\n        return new_array;\n    };\n\n    // Returns a single item from an array with relative weighting of odds\n    Chance.prototype.weighted = function (arr, weights, trim) {\n        if (arr.length !== weights.length) {\n            throw new RangeError(\"Chance: Length of array and weights must match\");\n        }\n\n        // scan weights array and sum valid entries\n        var sum = 0;\n        var val;\n        for (var weightIndex = 0; weightIndex < weights.length; ++weightIndex) {\n            val = weights[weightIndex];\n            if (isNaN(val)) {\n                throw new RangeError(\"Chance: All weights must be numbers\");\n            }\n\n            if (val > 0) {\n                sum += val;\n            }\n        }\n\n        if (sum === 0) {\n            throw new RangeError(\"Chance: No valid entries in array weights\");\n        }\n\n        // select a value within range\n        var selected = this.random() * sum;\n\n        // find array entry corresponding to selected value\n        var total = 0;\n        var lastGoodIdx = -1;\n        var chosenIdx;\n        for (weightIndex = 0; weightIndex < weights.length; ++weightIndex) {\n            val = weights[weightIndex];\n            total += val;\n            if (val > 0) {\n                if (selected <= total) {\n                    chosenIdx = weightIndex;\n                    break;\n                }\n                lastGoodIdx = weightIndex;\n            }\n\n            // handle any possible rounding error comparison to ensure something is picked\n            if (weightIndex === (weights.length - 1)) {\n                chosenIdx = lastGoodIdx;\n            }\n        }\n\n        var chosen = arr[chosenIdx];\n        trim = (typeof trim === 'undefined') ? false : trim;\n        if (trim) {\n            arr.splice(chosenIdx, 1);\n            weights.splice(chosenIdx, 1);\n        }\n\n        return chosen;\n    };\n\n    // -- End Helpers --\n\n    // -- Text --\n\n    Chance.prototype.paragraph = function (options) {\n        options = initOptions(options);\n\n        var sentences = options.sentences || this.natural({min: 3, max: 7}),\n            sentence_array = this.n(this.sentence, sentences),\n            separator = options.linebreak === true ? '\\n' : ' ';\n\n        return sentence_array.join(separator);\n    };\n\n    // Could get smarter about this than generating random words and\n    // chaining them together. Such as: http://vq.io/1a5ceOh\n    Chance.prototype.sentence = function (options) {\n        options = initOptions(options);\n\n        var words = options.words || this.natural({min: 12, max: 18}),\n            punctuation = options.punctuation,\n            text, word_array = this.n(this.word, words);\n\n        text = word_array.join(' ');\n\n        // Capitalize first letter of sentence\n        text = this.capitalize(text);\n\n        // Make sure punctuation has a usable value\n        if (punctuation !== false && !/^[.?;!:]$/.test(punctuation)) {\n            punctuation = '.';\n        }\n\n        // Add punctuation mark\n        if (punctuation) {\n            text += punctuation;\n        }\n\n        return text;\n    };\n\n    Chance.prototype.syllable = function (options) {\n        options = initOptions(options);\n\n        var length = options.length || this.natural({min: 2, max: 3}),\n            consonants = 'bcdfghjklmnprstvwz', // consonants except hard to speak ones\n            vowels = 'aeiou', // vowels\n            all = consonants + vowels, // all\n            text = '',\n            chr;\n\n        // I'm sure there's a more elegant way to do this, but this works\n        // decently well.\n        for (var i = 0; i < length; i++) {\n            if (i === 0) {\n                // First character can be anything\n                chr = this.character({pool: all});\n            } else if (consonants.indexOf(chr) === -1) {\n                // Last character was a vowel, now we want a consonant\n                chr = this.character({pool: consonants});\n            } else {\n                // Last character was a consonant, now we want a vowel\n                chr = this.character({pool: vowels});\n            }\n\n            text += chr;\n        }\n\n        if (options.capitalize) {\n            text = this.capitalize(text);\n        }\n\n        return text;\n    };\n\n    Chance.prototype.word = function (options) {\n        options = initOptions(options);\n\n        testRange(\n            options.syllables && options.length,\n            \"Chance: Cannot specify both syllables AND length.\"\n        );\n\n        var syllables = options.syllables || this.natural({min: 1, max: 3}),\n            text = '';\n\n        if (options.length) {\n            // Either bound word by length\n            do {\n                text += this.syllable();\n            } while (text.length < options.length);\n            text = text.substring(0, options.length);\n        } else {\n            // Or by number of syllables\n            for (var i = 0; i < syllables; i++) {\n                text += this.syllable();\n            }\n        }\n\n        if (options.capitalize) {\n            text = this.capitalize(text);\n        }\n\n        return text;\n    };\n\n    // -- End Text --\n\n    // -- Person --\n\n    Chance.prototype.age = function (options) {\n        options = initOptions(options);\n        var ageRange;\n\n        switch (options.type) {\n            case 'child':\n                ageRange = {min: 0, max: 12};\n                break;\n            case 'teen':\n                ageRange = {min: 13, max: 19};\n                break;\n            case 'adult':\n                ageRange = {min: 18, max: 65};\n                break;\n            case 'senior':\n                ageRange = {min: 65, max: 100};\n                break;\n            case 'all':\n                ageRange = {min: 0, max: 100};\n                break;\n            default:\n                ageRange = {min: 18, max: 65};\n                break;\n        }\n\n        return this.natural(ageRange);\n    };\n\n    Chance.prototype.birthday = function (options) {\n        var age = this.age(options);\n        var now = new Date()\n        var currentYear = now.getFullYear();\n\n        if (options && options.type) {\n            var min = new Date();\n            var max = new Date();\n            min.setFullYear(currentYear - age - 1);\n            max.setFullYear(currentYear - age);\n\n            options = initOptions(options, {\n                min: min,\n                max: max\n            });\n        } else if (options && ((options.minAge !== undefined) || (options.maxAge !== undefined))) {\n            testRange(options.minAge < 0, \"Chance: MinAge cannot be less than zero.\");\n            testRange(options.minAge > options.maxAge, \"Chance: MinAge cannot be greater than MaxAge.\");\n\n            var minAge = options.minAge !== undefined ? options.minAge : 0;\n            var maxAge = options.maxAge !== undefined ? options.maxAge : 100;\n\n            var minDate = new Date(currentYear - maxAge - 1, now.getMonth(), now.getDate());\n            var maxDate = new Date(currentYear - minAge, now.getMonth(), now.getDate());\n\n            minDate.setDate(minDate.getDate() +1);\n\n            maxDate.setDate(maxDate.getDate() +1);\n            maxDate.setMilliseconds(maxDate.getMilliseconds() -1);\n\n            options = initOptions(options, {\n                min: minDate,\n                max: maxDate\n          });\n        } else {\n            options = initOptions(options, {\n                year: currentYear - age\n            });\n        }\n\n        return this.date(options);\n    };\n\n    // CPF; ID to identify taxpayers in Brazil\n    Chance.prototype.cpf = function (options) {\n        options = initOptions(options, {\n            formatted: true\n        });\n\n        var n = this.n(this.natural, 9, { max: 9 });\n        var d1 = n[8]*2+n[7]*3+n[6]*4+n[5]*5+n[4]*6+n[3]*7+n[2]*8+n[1]*9+n[0]*10;\n        d1 = 11 - (d1 % 11);\n        if (d1>=10) {\n            d1 = 0;\n        }\n        var d2 = d1*2+n[8]*3+n[7]*4+n[6]*5+n[5]*6+n[4]*7+n[3]*8+n[2]*9+n[1]*10+n[0]*11;\n        d2 = 11 - (d2 % 11);\n        if (d2>=10) {\n            d2 = 0;\n        }\n        var cpf = ''+n[0]+n[1]+n[2]+'.'+n[3]+n[4]+n[5]+'.'+n[6]+n[7]+n[8]+'-'+d1+d2;\n        return options.formatted ? cpf : cpf.replace(/\\D/g,'');\n    };\n\n    // CNPJ: ID to identify companies in Brazil\n    Chance.prototype.cnpj = function (options) {\n        options = initOptions(options, {\n            formatted: true\n        });\n\n        var n = this.n(this.natural, 12, { max: 12 });\n        var d1 = n[11]*2+n[10]*3+n[9]*4+n[8]*5+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;\n        d1 = 11 - (d1 % 11);\n        if (d1<2) {\n            d1 = 0;\n        }\n        var d2 = d1*2+n[11]*3+n[10]*4+n[9]*5+n[8]*6+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;\n        d2 = 11 - (d2 % 11);\n        if (d2<2) {\n            d2 = 0;\n        }\n        var cnpj = ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/'+n[8]+n[9]+n[10]+n[11]+'-'+d1+d2;\n        return options.formatted ? cnpj : cnpj.replace(/\\D/g,'');\n    };\n\n    Chance.prototype.first = function (options) {\n        options = initOptions(options, {gender: this.gender(), nationality: 'en'});\n        return this.pick(this.get(\"firstNames\")[options.gender.toLowerCase()][options.nationality.toLowerCase()]);\n    };\n\n    Chance.prototype.profession = function (options) {\n        options = initOptions(options);\n        if(options.rank){\n            return this.pick(['Apprentice ', 'Junior ', 'Senior ', 'Lead ']) + this.pick(this.get(\"profession\"));\n        } else{\n            return this.pick(this.get(\"profession\"));\n        }\n    };\n\n    Chance.prototype.company = function (){\n        return this.pick(this.get(\"company\"));\n    };\n\n    Chance.prototype.gender = function (options) {\n        options = initOptions(options, {extraGenders: []});\n        return this.pick(['Male', 'Female'].concat(options.extraGenders));\n    };\n\n    Chance.prototype.last = function (options) {\n      options = initOptions(options, {nationality: '*'});\n      if (options.nationality === \"*\") {\n        var allLastNames = []\n        var lastNames = this.get(\"lastNames\")\n        Object.keys(lastNames).forEach(function(key){\n          allLastNames = allLastNames.concat(lastNames[key])\n        })\n        return this.pick(allLastNames)\n      }\n      else {\n        return this.pick(this.get(\"lastNames\")[options.nationality.toLowerCase()]);\n      }\n\n    };\n\n    Chance.prototype.israelId=function(){\n        var x=this.string({pool: '0123456789',length:8});\n        var y=0;\n        for (var i=0;i<x.length;i++){\n            var thisDigit=  x[i] *  (i/2===parseInt(i/2) ? 1 : 2);\n            thisDigit=this.pad(thisDigit,2).toString();\n            thisDigit=parseInt(thisDigit[0]) + parseInt(thisDigit[1]);\n            y=y+thisDigit;\n        }\n        x=x+(10-parseInt(y.toString().slice(-1))).toString().slice(-1);\n        return x;\n    };\n\n    Chance.prototype.mrz = function (options) {\n        var checkDigit = function (input) {\n            var alpha = \"<ABCDEFGHIJKLMNOPQRSTUVWXYXZ\".split(''),\n                multipliers = [ 7, 3, 1 ],\n                runningTotal = 0;\n\n            if (typeof input !== 'string') {\n                input = input.toString();\n            }\n\n            input.split('').forEach(function(character, idx) {\n                var pos = alpha.indexOf(character);\n\n                if(pos !== -1) {\n                    character = pos === 0 ? 0 : pos + 9;\n                } else {\n                    character = parseInt(character, 10);\n                }\n                character *= multipliers[idx % multipliers.length];\n                runningTotal += character;\n            });\n            return runningTotal % 10;\n        };\n        var generate = function (opts) {\n            var pad = function (length) {\n                return new Array(length + 1).join('<');\n            };\n            var number = [ 'P<',\n                           opts.issuer,\n                           opts.last.toUpperCase(),\n                           '<<',\n                           opts.first.toUpperCase(),\n                           pad(39 - (opts.last.length + opts.first.length + 2)),\n                           opts.passportNumber,\n                           checkDigit(opts.passportNumber),\n                           opts.nationality,\n                           opts.dob,\n                           checkDigit(opts.dob),\n                           opts.gender,\n                           opts.expiry,\n                           checkDigit(opts.expiry),\n                           pad(14),\n                           checkDigit(pad(14)) ].join('');\n\n            return number +\n                (checkDigit(number.substr(44, 10) +\n                            number.substr(57, 7) +\n                            number.substr(65, 7)));\n        };\n\n        var that = this;\n\n        options = initOptions(options, {\n            first: this.first(),\n            last: this.last(),\n            passportNumber: this.integer({min: 100000000, max: 999999999}),\n            dob: (function () {\n                var date = that.birthday({type: 'adult'});\n                return [date.getFullYear().toString().substr(2),\n                        that.pad(date.getMonth() + 1, 2),\n                        that.pad(date.getDate(), 2)].join('');\n            }()),\n            expiry: (function () {\n                var date = new Date();\n                return [(date.getFullYear() + 5).toString().substr(2),\n                        that.pad(date.getMonth() + 1, 2),\n                        that.pad(date.getDate(), 2)].join('');\n            }()),\n            gender: this.gender() === 'Female' ? 'F': 'M',\n            issuer: 'GBR',\n            nationality: 'GBR'\n        });\n        return generate (options);\n    };\n\n    Chance.prototype.name = function (options) {\n        options = initOptions(options);\n\n        var first = this.first(options),\n            last = this.last(options),\n            name;\n\n        if (options.middle) {\n            name = first + ' ' + this.first(options) + ' ' + last;\n        } else if (options.middle_initial) {\n            name = first + ' ' + this.character({alpha: true, casing: 'upper'}) + '. ' + last;\n        } else {\n            name = first + ' ' + last;\n        }\n\n        if (options.prefix) {\n            name = this.prefix(options) + ' ' + name;\n        }\n\n        if (options.suffix) {\n            name = name + ' ' + this.suffix(options);\n        }\n\n        return name;\n    };\n\n    // Return the list of available name prefixes based on supplied gender.\n    // @todo introduce internationalization\n    Chance.prototype.name_prefixes = function (gender) {\n        gender = gender || \"all\";\n        gender = gender.toLowerCase();\n\n        var prefixes = [\n            { name: 'Doctor', abbreviation: 'Dr.' }\n        ];\n\n        if (gender === \"male\" || gender === \"all\") {\n            prefixes.push({ name: 'Mister', abbreviation: 'Mr.' });\n        }\n\n        if (gender === \"female\" || gender === \"all\") {\n            prefixes.push({ name: 'Miss', abbreviation: 'Miss' });\n            prefixes.push({ name: 'Misses', abbreviation: 'Mrs.' });\n        }\n\n        return prefixes;\n    };\n\n    // Alias for name_prefix\n    Chance.prototype.prefix = function (options) {\n        return this.name_prefix(options);\n    };\n\n    Chance.prototype.name_prefix = function (options) {\n        options = initOptions(options, { gender: \"all\" });\n        return options.full ?\n            this.pick(this.name_prefixes(options.gender)).name :\n            this.pick(this.name_prefixes(options.gender)).abbreviation;\n    };\n    //Hungarian ID number\n    Chance.prototype.HIDN= function(){\n     //Hungarian ID nuber structure: XXXXXXYY (X=number,Y=Capital Latin letter)\n      var idn_pool=\"0123456789\";\n      var idn_chrs=\"ABCDEFGHIJKLMNOPQRSTUVWXYXZ\";\n      var idn=\"\";\n        idn+=this.string({pool:idn_pool,length:6});\n        idn+=this.string({pool:idn_chrs,length:2});\n        return idn;\n    };\n\n\n    Chance.prototype.ssn = function (options) {\n        options = initOptions(options, {ssnFour: false, dashes: true});\n        var ssn_pool = \"1234567890\",\n            ssn,\n            dash = options.dashes ? '-' : '';\n\n        if(!options.ssnFour) {\n            ssn = this.string({pool: ssn_pool, length: 3}) + dash +\n            this.string({pool: ssn_pool, length: 2}) + dash +\n            this.string({pool: ssn_pool, length: 4});\n        } else {\n            ssn = this.string({pool: ssn_pool, length: 4});\n        }\n        return ssn;\n    };\n\n    // Aadhar is similar to ssn, used in India to uniquely identify a person\n    Chance.prototype.aadhar = function (options) {\n        options = initOptions(options, {onlyLastFour: false, separatedByWhiteSpace: true});\n        var aadhar_pool = \"1234567890\",\n            aadhar,\n            whiteSpace = options.separatedByWhiteSpace ? ' ' : '';\n\n        if(!options.onlyLastFour) {\n            aadhar = this.string({pool: aadhar_pool, length: 4}) + whiteSpace +\n            this.string({pool: aadhar_pool, length: 4}) + whiteSpace +\n            this.string({pool: aadhar_pool, length: 4});\n        } else {\n            aadhar = this.string({pool: aadhar_pool, length: 4});\n        }\n        return aadhar;\n    };\n\n    // Return the list of available name suffixes\n    // @todo introduce internationalization\n    Chance.prototype.name_suffixes = function () {\n        var suffixes = [\n            { name: 'Doctor of Osteopathic Medicine', abbreviation: 'D.O.' },\n            { name: 'Doctor of Philosophy', abbreviation: 'Ph.D.' },\n            { name: 'Esquire', abbreviation: 'Esq.' },\n            { name: 'Junior', abbreviation: 'Jr.' },\n            { name: 'Juris Doctor', abbreviation: 'J.D.' },\n            { name: 'Master of Arts', abbreviation: 'M.A.' },\n            { name: 'Master of Business Administration', abbreviation: 'M.B.A.' },\n            { name: 'Master of Science', abbreviation: 'M.S.' },\n            { name: 'Medical Doctor', abbreviation: 'M.D.' },\n            { name: 'Senior', abbreviation: 'Sr.' },\n            { name: 'The Third', abbreviation: 'III' },\n            { name: 'The Fourth', abbreviation: 'IV' },\n            { name: 'Bachelor of Engineering', abbreviation: 'B.E' },\n            { name: 'Bachelor of Technology', abbreviation: 'B.TECH' }\n        ];\n        return suffixes;\n    };\n\n    // Alias for name_suffix\n    Chance.prototype.suffix = function (options) {\n        return this.name_suffix(options);\n    };\n\n    Chance.prototype.name_suffix = function (options) {\n        options = initOptions(options);\n        return options.full ?\n            this.pick(this.name_suffixes()).name :\n            this.pick(this.name_suffixes()).abbreviation;\n    };\n\n    Chance.prototype.nationalities = function () {\n        return this.get(\"nationalities\");\n    };\n\n    // Generate random nationality based on json list\n    Chance.prototype.nationality = function () {\n        var nationality = this.pick(this.nationalities());\n        return nationality.name;\n    };\n\n     // Generate random zodiac sign\n     Chance.prototype.zodiac = function () {\n        const zodiacSymbols = [\"Aries\",\"Taurus\",\"Gemini\",\"Cancer\",\"Leo\",\"Virgo\",\"Libra\",\"Scorpio\",\"Sagittarius\",\"Capricorn\",\"Aquarius\",\"Pisces\"];\n        return this.pickone(zodiacSymbols);\n    };\n\n\n    // -- End Person --\n\n    // -- Mobile --\n    // Android GCM Registration ID\n    Chance.prototype.android_id = function () {\n        return \"APA91\" + this.string({ pool: \"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_\", length: 178 });\n    };\n\n    // Apple Push Token\n    Chance.prototype.apple_token = function () {\n        return this.string({ pool: \"abcdef1234567890\", length: 64 });\n    };\n\n    // Windows Phone 8 ANID2\n    Chance.prototype.wp8_anid2 = function () {\n        return base64( this.hash( { length : 32 } ) );\n    };\n\n    // Windows Phone 7 ANID\n    Chance.prototype.wp7_anid = function () {\n        return 'A=' + this.guid().replace(/-/g, '').toUpperCase() + '&E=' + this.hash({ length:3 }) + '&W=' + this.integer({ min:0, max:9 });\n    };\n\n    // BlackBerry Device PIN\n    Chance.prototype.bb_pin = function () {\n        return this.hash({ length: 8 });\n    };\n\n    // -- End Mobile --\n\n    // -- Web --\n    Chance.prototype.avatar = function (options) {\n        var url = null;\n        var URL_BASE = '//www.gravatar.com/avatar/';\n        var PROTOCOLS = {\n            http: 'http',\n            https: 'https'\n        };\n        var FILE_TYPES = {\n            bmp: 'bmp',\n            gif: 'gif',\n            jpg: 'jpg',\n            png: 'png'\n        };\n        var FALLBACKS = {\n            '404': '404', // Return 404 if not found\n            mm: 'mm', // Mystery man\n            identicon: 'identicon', // Geometric pattern based on hash\n            monsterid: 'monsterid', // A generated monster icon\n            wavatar: 'wavatar', // A generated face\n            retro: 'retro', // 8-bit icon\n            blank: 'blank' // A transparent png\n        };\n        var RATINGS = {\n            g: 'g',\n            pg: 'pg',\n            r: 'r',\n            x: 'x'\n        };\n        var opts = {\n            protocol: null,\n            email: null,\n            fileExtension: null,\n            size: null,\n            fallback: null,\n            rating: null\n        };\n\n        if (!options) {\n            // Set to a random email\n            opts.email = this.email();\n            options = {};\n        }\n        else if (typeof options === 'string') {\n            opts.email = options;\n            options = {};\n        }\n        else if (typeof options !== 'object') {\n            return null;\n        }\n        else if (options.constructor === 'Array') {\n            return null;\n        }\n\n        opts = initOptions(options, opts);\n\n        if (!opts.email) {\n            // Set to a random email\n            opts.email = this.email();\n        }\n\n        // Safe checking for params\n        opts.protocol = PROTOCOLS[opts.protocol] ? opts.protocol + ':' : '';\n        opts.size = parseInt(opts.size, 0) ? opts.size : '';\n        opts.rating = RATINGS[opts.rating] ? opts.rating : '';\n        opts.fallback = FALLBACKS[opts.fallback] ? opts.fallback : '';\n        opts.fileExtension = FILE_TYPES[opts.fileExtension] ? opts.fileExtension : '';\n\n        url =\n            opts.protocol +\n            URL_BASE +\n            this.bimd5.md5(opts.email) +\n            (opts.fileExtension ? '.' + opts.fileExtension : '') +\n            (opts.size || opts.rating || opts.fallback ? '?' : '') +\n            (opts.size ? '&s=' + opts.size.toString() : '') +\n            (opts.rating ? '&r=' + opts.rating : '') +\n            (opts.fallback ? '&d=' + opts.fallback : '')\n            ;\n\n        return url;\n    };\n\n    /**\n     * #Description:\n     * ===============================================\n     * Generate random color value base on color type:\n     * -> hex\n     * -> rgb\n     * -> rgba\n     * -> 0x\n     * -> named color\n     *\n     * #Examples:\n     * ===============================================\n     * * Geerate random hex color\n     * chance.color() => '#79c157' / 'rgb(110,52,164)' / '0x67ae0b' / '#e2e2e2' / '#29CFA7'\n     *\n     * * Generate Hex based color value\n     * chance.color({format: 'hex'})    => '#d67118'\n     *\n     * * Generate simple rgb value\n     * chance.color({format: 'rgb'})    => 'rgb(110,52,164)'\n     *\n     * * Generate Ox based color value\n     * chance.color({format: '0x'})     => '0x67ae0b'\n     *\n     * * Generate graiscale based value\n     * chance.color({grayscale: true})  => '#e2e2e2'\n     *\n     * * Return valide color name\n     * chance.color({format: 'name'})   => 'red'\n     *\n     * * Make color uppercase\n     * chance.color({casing: 'upper'})  => '#29CFA7'\n     *\n     * * Min Max values for RGBA\n     * var light_red = chance.color({format: 'hex', min_red: 200, max_red: 255, max_green: 0, max_blue: 0, min_alpha: .2, max_alpha: .3});\n     *\n     * @param  [object] options\n     * @return [string] color value\n     */\n    Chance.prototype.color = function (options) {\n        function gray(value, delimiter) {\n            return [value, value, value].join(delimiter || '');\n        }\n\n        function rgb(hasAlpha) {\n            var rgbValue     = (hasAlpha)    ? 'rgba' : 'rgb';\n            var alphaChannel = (hasAlpha)    ? (',' + this.floating({min:min_alpha, max:max_alpha})) : \"\";\n            var colorValue   = (isGrayscale) ? (gray(this.natural({min: min_rgb, max: max_rgb}), ',')) : (this.natural({min: min_green, max: max_green}) + ',' + this.natural({min: min_blue, max: max_blue}) + ',' + this.natural({max: 255}));\n            return rgbValue + '(' + colorValue + alphaChannel + ')';\n        }\n\n        function hex(start, end, withHash) {\n            var symbol = (withHash) ? \"#\" : \"\";\n            var hexstring = \"\";\n\n            if (isGrayscale) {\n                hexstring = gray(this.pad(this.hex({min: min_rgb, max: max_rgb}), 2));\n                if (options.format === \"shorthex\") {\n                    hexstring = gray(this.hex({min: 0, max: 15}));\n                }\n            }\n            else {\n                if (options.format === \"shorthex\") {\n                    hexstring = this.pad(this.hex({min: Math.floor(min_red / 16), max: Math.floor(max_red / 16)}), 1) + this.pad(this.hex({min: Math.floor(min_green / 16), max: Math.floor(max_green / 16)}), 1) + this.pad(this.hex({min: Math.floor(min_blue / 16), max: Math.floor(max_blue / 16)}), 1);\n                }\n                else if (min_red !== undefined || max_red !== undefined || min_green !== undefined || max_green !== undefined || min_blue !== undefined || max_blue !== undefined) {\n                    hexstring = this.pad(this.hex({min: min_red, max: max_red}), 2) + this.pad(this.hex({min: min_green, max: max_green}), 2) + this.pad(this.hex({min: min_blue, max: max_blue}), 2);\n                }\n                else {\n                    hexstring = this.pad(this.hex({min: min_rgb, max: max_rgb}), 2) + this.pad(this.hex({min: min_rgb, max: max_rgb}), 2) + this.pad(this.hex({min: min_rgb, max: max_rgb}), 2);\n                }\n            }\n\n            return symbol + hexstring;\n        }\n\n        options = initOptions(options, {\n            format: this.pick(['hex', 'shorthex', 'rgb', 'rgba', '0x', 'name']),\n            grayscale: false,\n            casing: 'lower',\n            min: 0,\n            max: 255,\n            min_red: undefined,\n            max_red: undefined,\n            min_green: undefined,\n            max_green: undefined,\n            min_blue: undefined,\n            max_blue: undefined,\n            min_alpha: 0,\n            max_alpha: 1\n        });\n\n        var isGrayscale = options.grayscale;\n        var min_rgb = options.min;\n        var max_rgb = options.max;\n        var min_red = options.min_red;\n        var max_red = options.max_red;\n        var min_green = options.min_green;\n        var max_green = options.max_green;\n        var min_blue = options.min_blue;\n        var max_blue = options.max_blue;\n        var min_alpha = options.min_alpha;\n        var max_alpha = options.max_alpha;\n        if (options.min_red === undefined) { min_red = min_rgb; }\n        if (options.max_red === undefined) { max_red = max_rgb; }\n        if (options.min_green === undefined) { min_green = min_rgb; }\n        if (options.max_green === undefined) { max_green = max_rgb; }\n        if (options.min_blue === undefined) { min_blue = min_rgb; }\n        if (options.max_blue === undefined) { max_blue = max_rgb; }\n        if (options.min_alpha === undefined) { min_alpha = 0; }\n        if (options.max_alpha === undefined) { max_alpha = 1; }\n        if (isGrayscale && min_rgb === 0 && max_rgb === 255 && min_red !== undefined && max_red !== undefined) {\n            min_rgb = ((min_red + min_green + min_blue) / 3);\n            max_rgb = ((max_red + max_green + max_blue) / 3);\n        }\n        var colorValue;\n\n        if (options.format === 'hex') {\n            colorValue = hex.call(this, 2, 6, true);\n        }\n        else if (options.format === 'shorthex') {\n            colorValue = hex.call(this, 1, 3, true);\n        }\n        else if (options.format === 'rgb') {\n            colorValue = rgb.call(this, false);\n        }\n        else if (options.format === 'rgba') {\n            colorValue = rgb.call(this, true);\n        }\n        else if (options.format === '0x') {\n            colorValue = '0x' + hex.call(this, 2, 6);\n        }\n        else if(options.format === 'name') {\n            return this.pick(this.get(\"colorNames\"));\n        }\n        else {\n            throw new RangeError('Invalid format provided. Please provide one of \"hex\", \"shorthex\", \"rgb\", \"rgba\", \"0x\" or \"name\".');\n        }\n\n        if (options.casing === 'upper' ) {\n            colorValue = colorValue.toUpperCase();\n        }\n\n        return colorValue;\n    };\n\n    Chance.prototype.domain = function (options) {\n        options = initOptions(options);\n        return this.word() + '.' + (options.tld || this.tld());\n    };\n\n    Chance.prototype.email = function (options) {\n        options = initOptions(options);\n        return this.word({length: options.length}) + '@' + (options.domain || this.domain());\n    };\n\n    /**\n     * #Description:\n     * ===============================================\n     * Generate a random Facebook id, aka fbid.\n     *\n     * NOTE: At the moment (Sep 2017), Facebook ids are\n     * \"numeric strings\" of length 16.\n     * However, Facebook Graph API documentation states that\n     * \"it is extremely likely to change over time\".\n     * @see https://developers.facebook.com/docs/graph-api/overview/\n     *\n     * #Examples:\n     * ===============================================\n     * chance.fbid() => '1000035231661304'\n     *\n     * @return [string] facebook id\n     */\n    Chance.prototype.fbid = function () {\n        return '10000' + this.string({pool: \"1234567890\", length: 11});\n    };\n\n    Chance.prototype.google_analytics = function () {\n        var account = this.pad(this.natural({max: 999999}), 6);\n        var property = this.pad(this.natural({max: 99}), 2);\n\n        return 'UA-' + account + '-' + property;\n    };\n\n    Chance.prototype.hashtag = function () {\n        return '#' + this.word();\n    };\n\n    Chance.prototype.ip = function () {\n        // Todo: This could return some reserved IPs. See http://vq.io/137dgYy\n        // this should probably be updated to account for that rare as it may be\n        return this.natural({min: 1, max: 254}) + '.' +\n               this.natural({max: 255}) + '.' +\n               this.natural({max: 255}) + '.' +\n               this.natural({min: 1, max: 254});\n    };\n\n    Chance.prototype.ipv6 = function () {\n        var ip_addr = this.n(this.hash, 8, {length: 4});\n\n        return ip_addr.join(\":\");\n    };\n\n    Chance.prototype.klout = function () {\n        return this.natural({min: 1, max: 99});\n    };\n\n    Chance.prototype.mac = function (options) {\n        // Todo: This could also be extended to EUI-64 based MACs\n        // (https://www.iana.org/assignments/ethernet-numbers/ethernet-numbers.xhtml#ethernet-numbers-4)\n        // Todo: This can return some reserved MACs (similar to IP function)\n        // this should probably be updated to account for that rare as it may be\n        options = initOptions(options, { delimiter: ':' });\n        return this.pad(this.natural({max: 255}).toString(16),2) + options.delimiter +\n               this.pad(this.natural({max: 255}).toString(16),2) + options.delimiter +\n               this.pad(this.natural({max: 255}).toString(16),2) + options.delimiter +\n               this.pad(this.natural({max: 255}).toString(16),2) + options.delimiter +\n               this.pad(this.natural({max: 255}).toString(16),2) + options.delimiter +\n               this.pad(this.natural({max: 255}).toString(16),2);\n    };\n\n    Chance.prototype.semver = function (options) {\n        options = initOptions(options, { include_prerelease: true });\n\n        var range = this.pickone([\"^\", \"~\", \"<\", \">\", \"<=\", \">=\", \"=\"]);\n        if (options.range) {\n            range = options.range;\n        }\n\n        var prerelease = \"\";\n        if (options.include_prerelease) {\n            prerelease = this.weighted([\"\", \"-dev\", \"-beta\", \"-alpha\"], [50, 10, 5, 1]);\n        }\n        return range + this.rpg('3d10').join('.') + prerelease;\n    };\n\n    Chance.prototype.tlds = function () {\n        return ['com', 'org', 'edu', 'gov', 'co.uk', 'net', 'io', 'ac', 'ad', 'ae', 'af', 'ag', 'ai', 'al', 'am', 'ao', 'aq', 'ar', 'as', 'at', 'au', 'aw', 'ax', 'az', 'ba', 'bb', 'bd', 'be', 'bf', 'bg', 'bh', 'bi', 'bj', 'bm', 'bn', 'bo', 'br', 'bs', 'bt', 'bv', 'bw', 'by', 'bz', 'ca', 'cc', 'cd', 'cf', 'cg', 'ch', 'ci', 'ck', 'cl', 'cm', 'cn', 'co', 'cr', 'cu', 'cv', 'cw', 'cx', 'cy', 'cz', 'de', 'dj', 'dk', 'dm', 'do', 'dz', 'ec', 'ee', 'eg', 'eh', 'er', 'es', 'et', 'eu', 'fi', 'fj', 'fk', 'fm', 'fo', 'fr', 'ga', 'gb', 'gd', 'ge', 'gf', 'gg', 'gh', 'gi', 'gl', 'gm', 'gn', 'gp', 'gq', 'gr', 'gs', 'gt', 'gu', 'gw', 'gy', 'hk', 'hm', 'hn', 'hr', 'ht', 'hu', 'id', 'ie', 'il', 'im', 'in', 'io', 'iq', 'ir', 'is', 'it', 'je', 'jm', 'jo', 'jp', 'ke', 'kg', 'kh', 'ki', 'km', 'kn', 'kp', 'kr', 'kw', 'ky', 'kz', 'la', 'lb', 'lc', 'li', 'lk', 'lr', 'ls', 'lt', 'lu', 'lv', 'ly', 'ma', 'mc', 'md', 'me', 'mg', 'mh', 'mk', 'ml', 'mm', 'mn', 'mo', 'mp', 'mq', 'mr', 'ms', 'mt', 'mu', 'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nc', 'ne', 'nf', 'ng', 'ni', 'nl', 'no', 'np', 'nr', 'nu', 'nz', 'om', 'pa', 'pe', 'pf', 'pg', 'ph', 'pk', 'pl', 'pm', 'pn', 'pr', 'ps', 'pt', 'pw', 'py', 'qa', 're', 'ro', 'rs', 'ru', 'rw', 'sa', 'sb', 'sc', 'sd', 'se', 'sg', 'sh', 'si', 'sj', 'sk', 'sl', 'sm', 'sn', 'so', 'sr', 'ss', 'st', 'su', 'sv', 'sx', 'sy', 'sz', 'tc', 'td', 'tf', 'tg', 'th', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'tp', 'tr', 'tt', 'tv', 'tw', 'tz', 'ua', 'ug', 'uk', 'us', 'uy', 'uz', 'va', 'vc', 've', 'vg', 'vi', 'vn', 'vu', 'wf', 'ws', 'ye', 'yt', 'za', 'zm', 'zw'];\n    };\n\n    Chance.prototype.tld = function () {\n        return this.pick(this.tlds());\n    };\n\n    Chance.prototype.twitter = function () {\n        return '@' + this.word();\n    };\n\n    Chance.prototype.url = function (options) {\n        options = initOptions(options, { protocol: \"http\", domain: this.domain(options), domain_prefix: \"\", path: this.word(), extensions: []});\n\n        var extension = options.extensions.length > 0 ? \".\" + this.pick(options.extensions) : \"\";\n        var domain = options.domain_prefix ? options.domain_prefix + \".\" + options.domain : options.domain;\n\n        return options.protocol + \"://\" + domain + \"/\" + options.path + extension;\n    };\n\n    Chance.prototype.port = function() {\n        return this.integer({min: 0, max: 65535});\n    };\n\n    Chance.prototype.locale = function (options) {\n        options = initOptions(options);\n        if (options.region){\n          return this.pick(this.get(\"locale_regions\"));\n        } else {\n          return this.pick(this.get(\"locale_languages\"));\n        }\n    };\n\n    Chance.prototype.locales = function (options) {\n      options = initOptions(options);\n      if (options.region){\n        return this.get(\"locale_regions\");\n      } else {\n        return this.get(\"locale_languages\");\n      }\n    };\n\n    Chance.prototype.loremPicsum = function (options) {\n        options = initOptions(options, { width: 500, height: 500, greyscale: false, blurred: false });\n\n        var greyscale = options.greyscale ? 'g/' : '';\n        var query = options.blurred ? '/?blur' : '/?random';\n\n        return 'https://picsum.photos/' + greyscale + options.width + '/' + options.height + query;\n    }\n\n    // -- End Web --\n\n    // -- Location --\n\n    Chance.prototype.address = function (options) {\n        options = initOptions(options);\n        return this.natural({min: 5, max: 2000}) + ' ' + this.street(options);\n    };\n\n    Chance.prototype.altitude = function (options) {\n        options = initOptions(options, {fixed: 5, min: 0, max: 8848});\n        return this.floating({\n            min: options.min,\n            max: options.max,\n            fixed: options.fixed\n        });\n    };\n\n    Chance.prototype.areacode = function (options) {\n        options = initOptions(options, {parens : true});\n        // Don't want area codes to start with 1, or have a 9 as the second digit\n        var areacode = options.exampleNumber ?\n        \"555\" :\n        this.natural({min: 2, max: 9}).toString() +\n                this.natural({min: 0, max: 8}).toString() +\n                this.natural({min: 0, max: 9}).toString();\n\n        return options.parens ? '(' + areacode + ')' : areacode;\n    };\n\n    Chance.prototype.city = function () {\n        return this.capitalize(this.word({syllables: 3}));\n    };\n\n    Chance.prototype.coordinates = function (options) {\n        return this.latitude(options) + ', ' + this.longitude(options);\n    };\n\n    Chance.prototype.countries = function () {\n        return this.get(\"countries\");\n    };\n\n    Chance.prototype.country = function (options) {\n        options = initOptions(options);\n        var country = this.pick(this.countries());\n        return options.raw ? country : options.full ? country.name : country.abbreviation;\n    };\n\n    Chance.prototype.depth = function (options) {\n        options = initOptions(options, {fixed: 5, min: -10994, max: 0});\n        return this.floating({\n            min: options.min,\n            max: options.max,\n            fixed: options.fixed\n        });\n    };\n\n    Chance.prototype.geohash = function (options) {\n        options = initOptions(options, { length: 7 });\n        return this.string({ length: options.length, pool: '0123456789bcdefghjkmnpqrstuvwxyz' });\n    };\n\n    Chance.prototype.geojson = function (options) {\n        return this.latitude(options) + ', ' + this.longitude(options) + ', ' + this.altitude(options);\n    };\n\n    Chance.prototype.latitude = function (options) {\n        // Constants - Formats\n        var [DDM, DMS, DD] = ['ddm', 'dms', 'dd'];\n\n        options = initOptions(\noptions,\n            options && options.format && [DDM, DMS].includes(options.format.toLowerCase()) ?\n            {min: 0, max: 89, fixed: 4} :\n            {fixed: 5, min: -90, max: 90, format: DD}\n);\n\n        var format = options.format.toLowerCase();\n\n        if (format === DDM || format === DMS) {\n            testRange(options.min < 0 || options.min > 89, \"Chance: Min specified is out of range. Should be between 0 - 89\");\n            testRange(options.max < 0 || options.max > 89, \"Chance: Max specified is out of range. Should be between 0 - 89\");\n            testRange(options.fixed > 4, 'Chance: Fixed specified should be below or equal to 4');\n        }\n\n        switch (format) {\n            case DDM: {\n                return  this.integer({min: options.min, max: options.max}) + '°' +\n                        this.floating({min: 0, max: 59, fixed: options.fixed});\n            }\n            case DMS: {\n                return  this.integer({min: options.min, max: options.max}) + '°' +\n                        this.integer({min: 0, max: 59}) + '’' +\n                        this.floating({min: 0, max: 59, fixed: options.fixed}) + '”';\n            }\n            case DD:\n            default: {\n                return this.floating({min: options.min, max: options.max, fixed: options.fixed});\n            }\n        }\n    };\n\n    Chance.prototype.longitude = function (options) {\n        // Constants - Formats\n        var [DDM, DMS, DD] = ['ddm', 'dms', 'dd'];\n\n        options = initOptions(\noptions,\n            options && options.format && [DDM, DMS].includes(options.format.toLowerCase()) ?\n            {min: 0, max: 179, fixed: 4} :\n            {fixed: 5, min: -180, max: 180, format: DD}\n);\n\n        var format = options.format.toLowerCase();\n\n        if (format === DDM || format === DMS) {\n            testRange(options.min < 0 || options.min > 179, \"Chance: Min specified is out of range. Should be between 0 - 179\");\n            testRange(options.max < 0 || options.max > 179, \"Chance: Max specified is out of range. Should be between 0 - 179\");\n            testRange(options.fixed > 4, 'Chance: Fixed specified should be below or equal to 4');\n        }\n\n        switch (format) {\n            case DDM: {\n                return  this.integer({min: options.min, max: options.max}) + '°' +\n                        this.floating({min: 0, max: 59.9999, fixed: options.fixed})\n            }\n            case DMS: {\n                return  this.integer({min: options.min, max: options.max}) + '°' +\n                        this.integer({min: 0, max: 59}) + '’' +\n                        this.floating({min: 0, max: 59.9999, fixed: options.fixed}) + '”';\n            }\n            case DD:\n            default: {\n                return this.floating({min: options.min, max: options.max, fixed: options.fixed});\n            }\n        }\n    };\n\n    Chance.prototype.phone = function (options) {\n        var self = this,\n            numPick,\n            ukNum = function (parts) {\n                var section = [];\n                //fills the section part of the phone number with random numbers.\n                parts.sections.forEach(function(n) {\n                    section.push(self.string({ pool: '0123456789', length: n}));\n                });\n                return parts.area + section.join(' ');\n            };\n        options = initOptions(options, {\n            formatted: true,\n            country: 'us',\n            mobile: false,\n            exampleNumber: false,\n        });\n        if (!options.formatted) {\n            options.parens = false;\n        }\n        var phone;\n        switch (options.country) {\n            case 'fr':\n                if (!options.mobile) {\n                    numPick = this.pick([\n                        // Valid zone and département codes.\n                        '01' + this.pick(['30', '34', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '53', '55', '56', '58', '60', '64', '69', '70', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83']) + self.string({ pool: '0123456789', length: 6}),\n                        '02' + this.pick(['14', '18', '22', '23', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '40', '41', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '56', '57', '61', '62', '69', '72', '76', '77', '78', '85', '90', '96', '97', '98', '99']) + self.string({ pool: '0123456789', length: 6}),\n                        '03' + this.pick(['10', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '39', '44', '45', '51', '52', '54', '55', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90']) + self.string({ pool: '0123456789', length: 6}),\n                        '04' + this.pick(['11', '13', '15', '20', '22', '26', '27', '30', '32', '34', '37', '42', '43', '44', '50', '56', '57', '63', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '88', '89', '90', '91', '92', '93', '94', '95', '97', '98']) + self.string({ pool: '0123456789', length: 6}),\n                        '05' + this.pick(['08', '16', '17', '19', '24', '31', '32', '33', '34', '35', '40', '45', '46', '47', '49', '53', '55', '56', '57', '58', '59', '61', '62', '63', '64', '65', '67', '79', '81', '82', '86', '87', '90', '94']) + self.string({ pool: '0123456789', length: 6}),\n                        '09' + self.string({ pool: '0123456789', length: 8}),\n                    ]);\n                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\n                } else {\n                    numPick = this.pick(['06', '07']) + self.string({ pool: '0123456789', length: 8});\n                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\n                }\n                break;\n            case 'uk':\n                if (!options.mobile) {\n                    numPick = this.pick([\n                        //valid area codes of major cities/counties followed by random numbers in required format.\n\n                        { area: '01' + this.character({ pool: '234569' }) + '1 ', sections: [3,4] },\n                        { area: '020 ' + this.character({ pool: '378' }), sections: [3,4] },\n                        { area: '023 ' + this.character({ pool: '89' }), sections: [3,4] },\n                        { area: '024 7', sections: [3,4] },\n                        { area: '028 ' + this.pick(['25','28','37','71','82','90','92','95']), sections: [2,4] },\n                        { area: '012' + this.pick(['04','08','54','76','97','98']) + ' ', sections: [6] },\n                        { area: '013' + this.pick(['63','64','84','86']) + ' ', sections: [6] },\n                        { area: '014' + this.pick(['04','20','60','61','80','88']) + ' ', sections: [6] },\n                        { area: '015' + this.pick(['24','27','62','66']) + ' ', sections: [6] },\n                        { area: '016' + this.pick(['06','29','35','47','59','95']) + ' ', sections: [6] },\n                        { area: '017' + this.pick(['26','44','50','68']) + ' ', sections: [6] },\n                        { area: '018' + this.pick(['27','37','84','97']) + ' ', sections: [6] },\n                        { area: '019' + this.pick(['00','05','35','46','49','63','95']) + ' ', sections: [6] }\n                    ]);\n                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '', 'g');\n                } else {\n                    numPick = this.pick([\n                        { area: '07' + this.pick(['4','5','7','8','9']), sections: [2,6] },\n                        { area: '07624 ', sections: [6] }\n                    ]);\n                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '');\n                }\n                break;\n            case 'za':\n                if (!options.mobile) {\n                    numPick = this.pick([\n                       '01' + this.pick(['0', '1', '2', '3', '4', '5', '6', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\n                       '02' + this.pick(['1', '2', '3', '4', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\n                       '03' + this.pick(['1', '2', '3', '5', '6', '9']) + self.string({ pool: '0123456789', length: 7}),\n                       '04' + this.pick(['1', '2', '3', '4', '5','6','7', '8','9']) + self.string({ pool: '0123456789', length: 7}),\n                       '05' + this.pick(['1', '3', '4', '6', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\n                    ]);\n                    phone = options.formatted || numPick;\n                } else {\n                    numPick = this.pick([\n                        '060' + this.pick(['3','4','5','6','7','8','9']) + self.string({ pool: '0123456789', length: 6}),\n                        '061' + this.pick(['0','1','2','3','4','5','8']) + self.string({ pool: '0123456789', length: 6}),\n                        '06'  + self.string({ pool: '0123456789', length: 7}),\n                        '071' + this.pick(['0','1','2','3','4','5','6','7','8','9']) + self.string({ pool: '0123456789', length: 6}),\n                        '07'  + this.pick(['2','3','4','6','7','8','9']) + self.string({ pool: '0123456789', length: 7}),\n                        '08'  + this.pick(['0','1','2','3','4','5']) + self.string({ pool: '0123456789', length: 7}),\n                    ]);\n                    phone = options.formatted || numPick;\n                }\n                break;\n            case 'us':\n                var areacode = this.areacode(options).toString();\n                var exchange = this.natural({ min: 2, max: 9 }).toString() +\n                    this.natural({ min: 0, max: 9 }).toString() +\n                    this.natural({ min: 0, max: 9 }).toString();\n                var subscriber = this.natural({ min: 1000, max: 9999 }).toString(); // this could be random [0-9]{4}\n                phone = options.formatted ? areacode + ' ' + exchange + '-' + subscriber : areacode + exchange + subscriber;\n                break;\n            case 'br':\n                var areaCode = this.pick([\"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"21\", \"22\", \"24\", \"27\", \"28\", \"31\", \"32\", \"33\", \"34\", \"35\", \"37\", \"38\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"51\", \"53\", \"54\", \"55\", \"61\", \"62\", \"63\", \"64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"71\", \"73\", \"74\", \"75\", \"77\", \"79\", \"81\", \"82\", \"83\", \"84\", \"85\", \"86\", \"87\", \"88\", \"89\", \"91\", \"92\", \"93\", \"94\", \"95\", \"96\", \"97\", \"98\", \"99\"]);\n                var prefix;\n                if (options.mobile) {\n                    // Brasilian official reference (mobile): http://www.anatel.gov.br/setorregulado/plano-de-numeracao-brasileiro?id=330\n                    prefix = '9' + self.string({ pool: '0123456789', length: 4});\n                } else {\n                    // Brasilian official reference: http://www.anatel.gov.br/setorregulado/plano-de-numeracao-brasileiro?id=331\n                    prefix = this.natural({ min: 2000, max: 5999 }).toString();\n                }\n                var mcdu = self.string({ pool: '0123456789', length: 4});\n                phone = options.formatted ? '(' + areaCode + ') ' + prefix + '-' + mcdu : areaCode + prefix + mcdu;\n                break;\n        }\n        return phone;\n    };\n\n    Chance.prototype.postal = function () {\n        // Postal District\n        var pd = this.character({pool: \"XVTSRPNKLMHJGECBA\"});\n        // Forward Sortation Area (FSA)\n        var fsa = pd + this.natural({max: 9}) + this.character({alpha: true, casing: \"upper\"});\n        // Local Delivery Unut (LDU)\n        var ldu = this.natural({max: 9}) + this.character({alpha: true, casing: \"upper\"}) + this.natural({max: 9});\n\n        return fsa + \" \" + ldu;\n    };\n\n    Chance.prototype.postcode = function () {\n        // Area\n        var area = this.pick(this.get(\"postcodeAreas\")).code;\n        // District\n        var district = this.natural({max: 9});\n        // Sub-District\n        var subDistrict = this.bool() ? this.character({alpha: true, casing: \"upper\"}) : \"\";\n        // Outward Code\n        var outward = area + district + subDistrict;\n        // Sector\n        var sector = this.natural({max: 9});\n        // Unit\n        var unit = this.character({alpha: true, casing: \"upper\"}) + this.character({alpha: true, casing: \"upper\"});\n        // Inward Code\n        var inward = sector + unit;\n\n        return outward + \" \" + inward;\n    };\n\n    Chance.prototype.counties = function (options) {\n        options = initOptions(options, { country: 'uk' });\n        return this.get(\"counties\")[options.country.toLowerCase()];\n    };\n\n    Chance.prototype.county = function (options) {\n        return this.pick(this.counties(options)).name;\n    };\n\n    Chance.prototype.provinces = function (options) {\n        options = initOptions(options, { country: 'ca' });\n        return this.get(\"provinces\")[options.country.toLowerCase()];\n    };\n\n    Chance.prototype.province = function (options) {\n        return (options && options.full) ?\n            this.pick(this.provinces(options)).name :\n            this.pick(this.provinces(options)).abbreviation;\n    };\n\n    Chance.prototype.state = function (options) {\n        return (options && options.full) ?\n            this.pick(this.states(options)).name :\n            this.pick(this.states(options)).abbreviation;\n    };\n\n    Chance.prototype.states = function (options) {\n        options = initOptions(options, { country: 'us', us_states_and_dc: true } );\n\n        var states;\n\n        switch (options.country.toLowerCase()) {\n            case 'us':\n                var us_states_and_dc = this.get(\"us_states_and_dc\"),\n                    territories = this.get(\"territories\"),\n                    armed_forces = this.get(\"armed_forces\");\n\n                states = [];\n\n                if (options.us_states_and_dc) {\n                    states = states.concat(us_states_and_dc);\n                }\n                if (options.territories) {\n                    states = states.concat(territories);\n                }\n                if (options.armed_forces) {\n                    states = states.concat(armed_forces);\n                }\n                break;\n            case 'it':\n            case 'mx':\n                states = this.get(\"country_regions\")[options.country.toLowerCase()];\n                break;\n            case 'uk':\n                states = this.get(\"counties\")[options.country.toLowerCase()];\n                break;\n        }\n\n        return states;\n    };\n\n    Chance.prototype.street = function (options) {\n        options = initOptions(options, { country: 'us', syllables: 2 });\n        var     street;\n\n        switch (options.country.toLowerCase()) {\n            case 'us':\n                street = this.word({ syllables: options.syllables });\n                street = this.capitalize(street);\n                street += ' ';\n                street += options.short_suffix ?\n                    this.street_suffix(options).abbreviation :\n                    this.street_suffix(options).name;\n                break;\n            case 'it':\n                street = this.word({ syllables: options.syllables });\n                street = this.capitalize(street);\n                street = (options.short_suffix ?\n                    this.street_suffix(options).abbreviation :\n                    this.street_suffix(options).name) + \" \" + street;\n                break;\n        }\n        return street;\n    };\n\n    Chance.prototype.street_suffix = function (options) {\n        options = initOptions(options, { country: 'us' });\n        return this.pick(this.street_suffixes(options));\n    };\n\n    Chance.prototype.street_suffixes = function (options) {\n        options = initOptions(options, { country: 'us' });\n        // These are the most common suffixes.\n        return this.get(\"street_suffixes\")[options.country.toLowerCase()];\n    };\n\n    // Note: only returning US zip codes, internationalization will be a whole\n    // other beast to tackle at some point.\n    Chance.prototype.zip = function (options) {\n        var zip = this.n(this.natural, 5, {max: 9});\n\n        if (options && options.plusfour === true) {\n            zip.push('-');\n            zip = zip.concat(this.n(this.natural, 4, {max: 9}));\n        }\n\n        return zip.join(\"\");\n    };\n\n    // -- End Location --\n\n    // -- Time\n\n    Chance.prototype.ampm = function () {\n        return this.bool() ? 'am' : 'pm';\n    };\n\n    Chance.prototype.date = function (options) {\n        var date_string, date;\n\n        // If interval is specified we ignore preset\n        if(options && (options.min || options.max)) {\n            options = initOptions(options, {\n                american: true,\n                string: false\n            });\n            var min = typeof options.min !== \"undefined\" ? options.min.getTime() : 1;\n            // 100,000,000 days measured relative to midnight at the beginning of 01 January, 1970 UTC. http://es5.github.io/#x15.9.1.1\n            var max = typeof options.max !== \"undefined\" ? options.max.getTime() : 8640000000000000;\n\n            date = new Date(this.integer({min: min, max: max}));\n        } else {\n            var m = this.month({raw: true});\n            var daysInMonth = m.days;\n\n            if(options && options.month) {\n                // Mod 12 to allow months outside range of 0-11 (not encouraged, but also not prevented).\n                daysInMonth = this.get('months')[((options.month % 12) + 12) % 12].days;\n            }\n\n            options = initOptions(options, {\n                year: parseInt(this.year(), 10),\n                // Necessary to subtract 1 because Date() 0-indexes month but not day or year\n                // for some reason.\n                month: m.numeric - 1,\n                day: this.natural({min: 1, max: daysInMonth}),\n                hour: this.hour({twentyfour: true}),\n                minute: this.minute(),\n                second: this.second(),\n                millisecond: this.millisecond(),\n                american: true,\n                string: false\n            });\n\n            date = new Date(options.year, options.month, options.day, options.hour, options.minute, options.second, options.millisecond);\n        }\n\n        if (options.american) {\n            // Adding 1 to the month is necessary because Date() 0-indexes\n            // months but not day for some odd reason.\n            date_string = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();\n        } else {\n            date_string = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();\n        }\n\n        return options.string ? date_string : date;\n    };\n\n    Chance.prototype.hammertime = function (options) {\n        return this.date(options).getTime();\n    };\n\n    Chance.prototype.hour = function (options) {\n        options = initOptions(options, {\n            min: options && options.twentyfour ? 0 : 1,\n            max: options && options.twentyfour ? 23 : 12\n        });\n\n        testRange(options.min < 0, \"Chance: Min cannot be less than 0.\");\n        testRange(options.twentyfour && options.max > 23, \"Chance: Max cannot be greater than 23 for twentyfour option.\");\n        testRange(!options.twentyfour && options.max > 12, \"Chance: Max cannot be greater than 12.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        return this.natural({min: options.min, max: options.max});\n    };\n\n    Chance.prototype.millisecond = function () {\n        return this.natural({max: 999});\n    };\n\n    Chance.prototype.minute = Chance.prototype.second = function (options) {\n        options = initOptions(options, {min: 0, max: 59});\n\n        testRange(options.min < 0, \"Chance: Min cannot be less than 0.\");\n        testRange(options.max > 59, \"Chance: Max cannot be greater than 59.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        return this.natural({min: options.min, max: options.max});\n    };\n\n    Chance.prototype.month = function (options) {\n        options = initOptions(options, {min: 1, max: 12});\n\n        testRange(options.min < 1, \"Chance: Min cannot be less than 1.\");\n        testRange(options.max > 12, \"Chance: Max cannot be greater than 12.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        var month = this.pick(this.months().slice(options.min - 1, options.max));\n        return options.raw ? month : month.name;\n    };\n\n    Chance.prototype.months = function () {\n        return this.get(\"months\");\n    };\n\n    Chance.prototype.second = function () {\n        return this.natural({max: 59});\n    };\n\n    Chance.prototype.timestamp = function () {\n        return this.natural({min: 1, max: parseInt(new Date().getTime() / 1000, 10)});\n    };\n\n    Chance.prototype.weekday = function (options) {\n        options = initOptions(options, {weekday_only: false});\n        var weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n        if (!options.weekday_only) {\n            weekdays.push(\"Saturday\");\n            weekdays.push(\"Sunday\");\n        }\n        return this.pickone(weekdays);\n    };\n\n    Chance.prototype.year = function (options) {\n        // Default to current year as min if none specified\n        options = initOptions(options, {min: new Date().getFullYear()});\n\n        // Default to one century after current year as max if none specified\n        options.max = (typeof options.max !== \"undefined\") ? options.max : options.min + 100;\n\n        return this.natural(options).toString();\n    };\n\n    // -- End Time\n\n    // -- Finance --\n\n    Chance.prototype.cc = function (options) {\n        options = initOptions(options);\n\n        var type, number, to_generate;\n\n        type = (options.type) ?\n                    this.cc_type({ name: options.type, raw: true }) :\n                    this.cc_type({ raw: true });\n\n        number = type.prefix.split(\"\");\n        to_generate = type.length - type.prefix.length - 1;\n\n        // Generates n - 1 digits\n        number = number.concat(this.n(this.integer, to_generate, {min: 0, max: 9}));\n\n        // Generates the last digit according to Luhn algorithm\n        number.push(this.luhn_calculate(number.join(\"\")));\n\n        return number.join(\"\");\n    };\n\n    Chance.prototype.cc_types = function () {\n        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n        return this.get(\"cc_types\");\n    };\n\n    Chance.prototype.cc_type = function (options) {\n        options = initOptions(options);\n        var types = this.cc_types(),\n            type = null;\n\n        if (options.name) {\n            for (var i = 0; i < types.length; i++) {\n                // Accept either name or short_name to specify card type\n                if (types[i].name === options.name || types[i].short_name === options.name) {\n                    type = types[i];\n                    break;\n                }\n            }\n            if (type === null) {\n                throw new RangeError(\"Chance: Credit card type '\" + options.name + \"' is not supported\");\n            }\n        } else {\n            type = this.pick(types);\n        }\n\n        return options.raw ? type : type.name;\n    };\n\n    // return all world currency by ISO 4217\n    Chance.prototype.currency_types = function () {\n        return this.get(\"currency_types\");\n    };\n\n    // return random world currency by ISO 4217\n    Chance.prototype.currency = function () {\n        return this.pick(this.currency_types());\n    };\n\n    // return all timezones available\n    Chance.prototype.timezones = function () {\n        return this.get(\"timezones\");\n    };\n\n    // return random timezone\n    Chance.prototype.timezone = function () {\n        return this.pick(this.timezones());\n    };\n\n    //Return random correct currency exchange pair (e.g. EUR/USD) or array of currency code\n    Chance.prototype.currency_pair = function (returnAsString) {\n        var currencies = this.unique(this.currency, 2, {\n            comparator: function(arr, val) {\n\n                return arr.reduce(function(acc, item) {\n                    // If a match has been found, short circuit check and just return\n                    return acc || (item.code === val.code);\n                }, false);\n            }\n        });\n\n        if (returnAsString) {\n            return currencies[0].code + '/' + currencies[1].code;\n        } else {\n            return currencies;\n        }\n    };\n\n    Chance.prototype.dollar = function (options) {\n        // By default, a somewhat more sane max for dollar than all available numbers\n        options = initOptions(options, {max : 10000, min : 0});\n\n        var dollar = this.floating({min: options.min, max: options.max, fixed: 2}).toString(),\n            cents = dollar.split('.')[1];\n\n        if (cents === undefined) {\n            dollar += '.00';\n        } else if (cents.length < 2) {\n            dollar = dollar + '0';\n        }\n\n        if (dollar < 0) {\n            return '-$' + dollar.replace('-', '');\n        } else {\n            return '$' + dollar;\n        }\n    };\n\n    Chance.prototype.euro = function (options) {\n        return Number(this.dollar(options).replace(\"$\", \"\")).toLocaleString() + \"€\";\n    };\n\n    Chance.prototype.exp = function (options) {\n        options = initOptions(options);\n        var exp = {};\n\n        exp.year = this.exp_year();\n\n        // If the year is this year, need to ensure month is greater than the\n        // current month or this expiration will not be valid\n        if (exp.year === (new Date().getFullYear()).toString()) {\n            exp.month = this.exp_month({future: true});\n        } else {\n            exp.month = this.exp_month();\n        }\n\n        return options.raw ? exp : exp.month + '/' + exp.year;\n    };\n\n    Chance.prototype.exp_month = function (options) {\n        options = initOptions(options);\n        var month, month_int,\n            // Date object months are 0 indexed\n            curMonth = new Date().getMonth() + 1;\n\n        if (options.future && (curMonth !== 12)) {\n            do {\n                month = this.month({raw: true}).numeric;\n                month_int = parseInt(month, 10);\n            } while (month_int <= curMonth);\n        } else {\n            month = this.month({raw: true}).numeric;\n        }\n\n        return month;\n    };\n\n    Chance.prototype.exp_year = function () {\n        var curMonth = new Date().getMonth() + 1,\n            curYear = new Date().getFullYear();\n\n        return this.year({min: ((curMonth === 12) ? (curYear + 1) : curYear), max: (curYear + 10)});\n    };\n\n    Chance.prototype.vat = function (options) {\n        options = initOptions(options, { country: 'it' });\n        switch (options.country.toLowerCase()) {\n            case 'it':\n                return this.it_vat();\n        }\n    };\n\n    /**\n     * Generate a string matching IBAN pattern (https://en.wikipedia.org/wiki/International_Bank_Account_Number).\n     * No country-specific formats support (yet)\n     */\n    Chance.prototype.iban = function () {\n        var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        var alphanum = alpha + '0123456789';\n        var iban =\n            this.string({ length: 2, pool: alpha }) +\n            this.pad(this.integer({ min: 0, max: 99 }), 2) +\n            this.string({ length: 4, pool: alphanum }) +\n            this.pad(this.natural(), this.natural({ min: 6, max: 26 }));\n        return iban;\n    };\n\n    // -- End Finance\n\n    // -- Regional\n\n    Chance.prototype.it_vat = function () {\n        var it_vat = this.natural({min: 1, max: 1800000});\n\n        it_vat = this.pad(it_vat, 7) + this.pad(this.pick(this.provinces({ country: 'it' })).code, 3);\n        return it_vat + this.luhn_calculate(it_vat);\n    };\n\n    /*\n     * this generator is written following the official algorithm\n     * all data can be passed explicitely or randomized by calling chance.cf() without options\n     * the code does not check that the input data is valid (it goes beyond the scope of the generator)\n     *\n     * @param  [Object] options = { first: first name,\n     *                              last: last name,\n     *                              gender: female|male,\n                                    birthday: JavaScript date object,\n                                    city: string(4), 1 letter + 3 numbers\n                                   }\n     * @return [string] codice fiscale\n     *\n    */\n    Chance.prototype.cf = function (options) {\n        options = options || {};\n        var gender = !!options.gender ? options.gender : this.gender(),\n            first = !!options.first ? options.first : this.first( { gender: gender, nationality: 'it'} ),\n            last = !!options.last ? options.last : this.last( { nationality: 'it'} ),\n            birthday = !!options.birthday ? options.birthday : this.birthday(),\n            city = !!options.city ? options.city : this.pickone(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'L', 'M', 'Z']) + this.pad(this.natural({max:999}), 3),\n            cf = [],\n            name_generator = function(name, isLast) {\n                var temp,\n                    return_value = [];\n\n                if (name.length < 3) {\n                    return_value = name.split(\"\").concat(\"XXX\".split(\"\")).splice(0,3);\n                }\n                else {\n                    temp = name.toUpperCase().split('').map(function(c){\n                        return (\"BCDFGHJKLMNPRSTVWZ\".indexOf(c) !== -1) ? c : undefined;\n                    }).join('');\n                    if (temp.length > 3) {\n                        if (isLast) {\n                            temp = temp.substr(0,3);\n                        } else {\n                            temp = temp[0] + temp.substr(2,2);\n                        }\n                    }\n                    if (temp.length < 3) {\n                        return_value = temp;\n                        temp = name.toUpperCase().split('').map(function(c){\n                            return (\"AEIOU\".indexOf(c) !== -1) ? c : undefined;\n                        }).join('').substr(0, 3 - return_value.length);\n                    }\n                    return_value = return_value + temp;\n                }\n\n                return return_value;\n            },\n            date_generator = function(birthday, gender, that) {\n                var lettermonths = ['A', 'B', 'C', 'D', 'E', 'H', 'L', 'M', 'P', 'R', 'S', 'T'];\n\n                return  birthday.getFullYear().toString().substr(2) +\n                        lettermonths[birthday.getMonth()] +\n                        that.pad(birthday.getDate() + ((gender.toLowerCase() === \"female\") ? 40 : 0), 2);\n            },\n            checkdigit_generator = function(cf) {\n                var range1 = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                    range2 = \"ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                    evens  = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                    odds   = \"BAKPLCQDREVOSFTGUHMINJWZYX\",\n                    digit  = 0;\n\n\n                for(var i = 0; i < 15; i++) {\n                    if (i % 2 !== 0) {\n                        digit += evens.indexOf(range2[range1.indexOf(cf[i])]);\n                    }\n                    else {\n                        digit +=  odds.indexOf(range2[range1.indexOf(cf[i])]);\n                    }\n                }\n                return evens[digit % 26];\n            };\n\n        cf = cf.concat(name_generator(last, true), name_generator(first), date_generator(birthday, gender, this), city.toUpperCase().split(\"\")).join(\"\");\n        cf += checkdigit_generator(cf.toUpperCase(), this);\n\n        return cf.toUpperCase();\n    };\n\n    Chance.prototype.pl_pesel = function () {\n        var number = this.natural({min: 1, max: 9999999999});\n        var arr = this.pad(number, 10).split('');\n        for (var i = 0; i < arr.length; i++) {\n            arr[i] = parseInt(arr[i]);\n        }\n\n        var controlNumber = (1 * arr[0] + 3 * arr[1] + 7 * arr[2] + 9 * arr[3] + 1 * arr[4] + 3 * arr[5] + 7 * arr[6] + 9 * arr[7] + 1 * arr[8] + 3 * arr[9]) % 10;\n        if(controlNumber !== 0) {\n            controlNumber = 10 - controlNumber;\n        }\n\n        return arr.join('') + controlNumber;\n    };\n\n    Chance.prototype.pl_nip = function () {\n        var number = this.natural({min: 1, max: 999999999});\n        var arr = this.pad(number, 9).split('');\n        for (var i = 0; i < arr.length; i++) {\n            arr[i] = parseInt(arr[i]);\n        }\n\n        var controlNumber = (6 * arr[0] + 5 * arr[1] + 7 * arr[2] + 2 * arr[3] + 3 * arr[4] + 4 * arr[5] + 5 * arr[6] + 6 * arr[7] + 7 * arr[8]) % 11;\n        if(controlNumber === 10) {\n            return this.pl_nip();\n        }\n\n        return arr.join('') + controlNumber;\n    };\n\n    Chance.prototype.pl_regon = function () {\n        var number = this.natural({min: 1, max: 99999999});\n        var arr = this.pad(number, 8).split('');\n        for (var i = 0; i < arr.length; i++) {\n            arr[i] = parseInt(arr[i]);\n        }\n\n        var controlNumber = (8 * arr[0] + 9 * arr[1] + 2 * arr[2] + 3 * arr[3] + 4 * arr[4] + 5 * arr[5] + 6 * arr[6] + 7 * arr[7]) % 11;\n        if(controlNumber === 10) {\n            controlNumber = 0;\n        }\n\n        return arr.join('') + controlNumber;\n    };\n\n    // -- End Regional\n\n    // -- Music --\n\n    Chance.prototype.note = function(options) {\n      // choices for 'notes' option:\n      // flatKey - chromatic scale with flat notes (default)\n      // sharpKey - chromatic scale with sharp notes\n      // flats - just flat notes\n      // sharps - just sharp notes\n      // naturals - just natural notes\n      // all - naturals, sharps and flats\n      options = initOptions(options, { notes : 'flatKey'});\n      var scales = {\n        naturals: ['C', 'D', 'E', 'F', 'G', 'A', 'B'],\n        flats: ['D♭', 'E♭', 'G♭', 'A♭', 'B♭'],\n        sharps: ['C♯', 'D♯', 'F♯', 'G♯', 'A♯']\n      };\n      scales.all = scales.naturals.concat(scales.flats.concat(scales.sharps))\n      scales.flatKey = scales.naturals.concat(scales.flats)\n      scales.sharpKey = scales.naturals.concat(scales.sharps)\n      return this.pickone(scales[options.notes]);\n    }\n\n    Chance.prototype.midi_note = function(options) {\n      var min = 0;\n      var max = 127;\n      options = initOptions(options, { min : min, max : max });\n      return this.integer({min: options.min, max: options.max});\n    }\n\n    Chance.prototype.chord_quality = function(options) {\n      options = initOptions(options, { jazz: true });\n      var chord_qualities = ['maj', 'min', 'aug', 'dim'];\n      if (options.jazz){\n        chord_qualities = [\n          'maj7',\n          'min7',\n          '7',\n          'sus',\n          'dim',\n          'ø'\n        ];\n      }\n      return this.pickone(chord_qualities);\n    }\n\n    Chance.prototype.chord = function (options) {\n      options = initOptions(options);\n      return this.note(options) + this.chord_quality(options);\n    }\n\n    Chance.prototype.tempo = function (options) {\n      var min = 40;\n      var max = 320;\n      options = initOptions(options, {min: min, max: max});\n      return this.integer({min: options.min, max: options.max});\n    }\n\n    // -- End Music\n\n    // -- Miscellaneous --\n\n    // Coin - Flip, flip, flipadelphia\n    Chance.prototype.coin = function() {\n      return this.bool() ? \"heads\" : \"tails\";\n    }\n\n    // Dice - For all the board game geeks out there, myself included ;)\n    function diceFn (range) {\n        return function () {\n            return this.natural(range);\n        };\n    }\n    Chance.prototype.d4 = diceFn({min: 1, max: 4});\n    Chance.prototype.d6 = diceFn({min: 1, max: 6});\n    Chance.prototype.d8 = diceFn({min: 1, max: 8});\n    Chance.prototype.d10 = diceFn({min: 1, max: 10});\n    Chance.prototype.d12 = diceFn({min: 1, max: 12});\n    Chance.prototype.d20 = diceFn({min: 1, max: 20});\n    Chance.prototype.d30 = diceFn({min: 1, max: 30});\n    Chance.prototype.d100 = diceFn({min: 1, max: 100});\n\n    Chance.prototype.rpg = function (thrown, options) {\n        options = initOptions(options);\n        if (!thrown) {\n            throw new RangeError(\"Chance: A type of die roll must be included\");\n        } else {\n            var bits = thrown.toLowerCase().split(\"d\"),\n                rolls = [];\n\n            if (bits.length !== 2 || !parseInt(bits[0], 10) || !parseInt(bits[1], 10)) {\n                throw new Error(\"Chance: Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die\");\n            }\n            for (var i = bits[0]; i > 0; i--) {\n                rolls[i - 1] = this.natural({min: 1, max: bits[1]});\n            }\n            return (typeof options.sum !== 'undefined' && options.sum) ? rolls.reduce(function (p, c) { return p + c; }) : rolls;\n        }\n    };\n\n    // Guid\n    Chance.prototype.guid = function (options) {\n        options = initOptions(options, { version: 5 });\n\n        var guid_pool = \"abcdef1234567890\",\n            variant_pool = \"ab89\",\n            guid = this.string({ pool: guid_pool, length: 8 }) + '-' +\n                   this.string({ pool: guid_pool, length: 4 }) + '-' +\n                   // The Version\n                   options.version +\n                   this.string({ pool: guid_pool, length: 3 }) + '-' +\n                   // The Variant\n                   this.string({ pool: variant_pool, length: 1 }) +\n                   this.string({ pool: guid_pool, length: 3 }) + '-' +\n                   this.string({ pool: guid_pool, length: 12 });\n        return guid;\n    };\n\n    // Hash\n    Chance.prototype.hash = function (options) {\n        options = initOptions(options, {length : 40, casing: 'lower'});\n        var pool = options.casing === 'upper' ? HEX_POOL.toUpperCase() : HEX_POOL;\n        return this.string({pool: pool, length: options.length});\n    };\n\n    Chance.prototype.luhn_check = function (num) {\n        var str = num.toString();\n        var checkDigit = +str.substring(str.length - 1);\n        return checkDigit === this.luhn_calculate(+str.substring(0, str.length - 1));\n    };\n\n    Chance.prototype.luhn_calculate = function (num) {\n        var digits = num.toString().split(\"\").reverse();\n        var sum = 0;\n        var digit;\n\n        for (var i = 0, l = digits.length; l > i; ++i) {\n            digit = +digits[i];\n            if (i % 2 === 0) {\n                digit *= 2;\n                if (digit > 9) {\n                    digit -= 9;\n                }\n            }\n            sum += digit;\n        }\n        return (sum * 9) % 10;\n    };\n\n    // MD5 Hash\n    Chance.prototype.md5 = function(options) {\n        var opts = { str: '', key: null, raw: false };\n\n        if (!options) {\n            opts.str = this.string();\n            options = {};\n        }\n        else if (typeof options === 'string') {\n            opts.str = options;\n            options = {};\n        }\n        else if (typeof options !== 'object') {\n            return null;\n        }\n        else if(options.constructor === 'Array') {\n            return null;\n        }\n\n        opts = initOptions(options, opts);\n\n        if(!opts.str){\n            throw new Error('A parameter is required to return an md5 hash.');\n        }\n\n        return this.bimd5.md5(opts.str, opts.key, opts.raw);\n    };\n\n    /**\n     * #Description:\n     * =====================================================\n     * Generate random file name with extension\n     *\n     * The argument provide extension type\n     * -> raster\n     * -> vector\n     * -> 3d\n     * -> document\n     *\n     * If nothing is provided the function return random file name with random\n     * extension type of any kind\n     *\n     * The user can validate the file name length range\n     * If nothing provided the generated file name is random\n     *\n     * #Extension Pool :\n     * * Currently the supported extensions are\n     *  -> some of the most popular raster image extensions\n     *  -> some of the most popular vector image extensions\n     *  -> some of the most popular 3d image extensions\n     *  -> some of the most popular document extensions\n     *\n     * #Examples :\n     * =====================================================\n     *\n     * Return random file name with random extension. The file extension\n     * is provided by a predefined collection of extensions. More about the extension\n     * pool can be found in #Extension Pool section\n     *\n     * chance.file()\n     * => dsfsdhjf.xml\n     *\n     * In order to generate a file name with specific length, specify the\n     * length property and integer value. The extension is going to be random\n     *\n     * chance.file({length : 10})\n     * => asrtineqos.pdf\n     *\n     * In order to generate file with extension from some of the predefined groups\n     * of the extension pool just specify the extension pool category in fileType property\n     *\n     * chance.file({fileType : 'raster'})\n     * => dshgssds.psd\n     *\n     * You can provide specific extension for your files\n     * chance.file({extension : 'html'})\n     * => djfsd.html\n     *\n     * Or you could pass custom collection of extensions by array or by object\n     * chance.file({extensions : [...]})\n     * => dhgsdsd.psd\n     *\n     * chance.file({extensions : { key : [...], key : [...]}})\n     * => djsfksdjsd.xml\n     *\n     * @param  [collection] options\n     * @return [string]\n     *\n     */\n    Chance.prototype.file = function(options) {\n\n        var fileOptions = options || {};\n        var poolCollectionKey = \"fileExtension\";\n        var typeRange   = Object.keys(this.get(\"fileExtension\"));//['raster', 'vector', '3d', 'document'];\n        var fileName;\n        var fileExtension;\n\n        // Generate random file name\n        fileName = this.word({length : fileOptions.length});\n\n        // Generate file by specific extension provided by the user\n        if(fileOptions.extension) {\n\n            fileExtension = fileOptions.extension;\n            return (fileName + '.' + fileExtension);\n        }\n\n        // Generate file by specific extension collection\n        if(fileOptions.extensions) {\n\n            if(Array.isArray(fileOptions.extensions)) {\n\n                fileExtension = this.pickone(fileOptions.extensions);\n                return (fileName + '.' + fileExtension);\n            }\n            else if(fileOptions.extensions.constructor === Object) {\n\n                var extensionObjectCollection = fileOptions.extensions;\n                var keys = Object.keys(extensionObjectCollection);\n\n                fileExtension = this.pickone(extensionObjectCollection[this.pickone(keys)]);\n                return (fileName + '.' + fileExtension);\n            }\n\n            throw new Error(\"Chance: Extensions must be an Array or Object\");\n        }\n\n        // Generate file extension based on specific file type\n        if(fileOptions.fileType) {\n\n            var fileType = fileOptions.fileType;\n            if(typeRange.indexOf(fileType) !== -1) {\n\n                fileExtension = this.pickone(this.get(poolCollectionKey)[fileType]);\n                return (fileName + '.' + fileExtension);\n            }\n\n            throw new RangeError(\"Chance: Expect file type value to be 'raster', 'vector', '3d' or 'document'\");\n        }\n\n        // Generate random file name if no extension options are passed\n        fileExtension = this.pickone(this.get(poolCollectionKey)[this.pickone(typeRange)]);\n        return (fileName + '.' + fileExtension);\n    };\n\n    /**\n     * Generates file data of random bytes using the chance.file method for the file name\n     *\n     * @param {object}\n     * fileName: String\n     * fileExtention: String\n     * fileSize: Number      <- in bytes\n     * @returns {object} fileName: String, fileData: Buffer\n     */\n    Chance.prototype.fileWithContent = function (options){\n            var fileOptions = options || {};\n            var fileName = 'fileName' in fileOptions ? fileOptions.fileName : this.file().split(\".\")[0];\n            fileName += \".\" + ('fileExtension' in fileOptions ? fileOptions.fileExtension : this.file().split(\".\")[1]);\n\n\n            if (typeof fileOptions.fileSize !== \"number\") {\n                throw new Error('File size must be an integer')\n            }\n            var file = {\n              fileData: this.buffer({length: fileOptions.fileSize}),\n              fileName: fileName,\n            };\n        return file;\n   }\n\n    var data = {\n\n        firstNames: {\n            \"male\": {\n                \"en\": [\"James\", \"John\", \"Robert\", \"Michael\", \"William\", \"David\", \"Richard\", \"Joseph\", \"Charles\", \"Thomas\", \"Christopher\", \"Daniel\", \"Matthew\", \"George\", \"Donald\", \"Anthony\", \"Paul\", \"Mark\", \"Edward\", \"Steven\", \"Kenneth\", \"Andrew\", \"Brian\", \"Joshua\", \"Kevin\", \"Ronald\", \"Timothy\", \"Jason\", \"Jeffrey\", \"Frank\", \"Gary\", \"Ryan\", \"Nicholas\", \"Eric\", \"Stephen\", \"Jacob\", \"Larry\", \"Jonathan\", \"Scott\", \"Raymond\", \"Justin\", \"Brandon\", \"Gregory\", \"Samuel\", \"Benjamin\", \"Patrick\", \"Jack\", \"Henry\", \"Walter\", \"Dennis\", \"Jerry\", \"Alexander\", \"Peter\", \"Tyler\", \"Douglas\", \"Harold\", \"Aaron\", \"Jose\", \"Adam\", \"Arthur\", \"Zachary\", \"Carl\", \"Nathan\", \"Albert\", \"Kyle\", \"Lawrence\", \"Joe\", \"Willie\", \"Gerald\", \"Roger\", \"Keith\", \"Jeremy\", \"Terry\", \"Harry\", \"Ralph\", \"Sean\", \"Jesse\", \"Roy\", \"Louis\", \"Billy\", \"Austin\", \"Bruce\", \"Eugene\", \"Christian\", \"Bryan\", \"Wayne\", \"Russell\", \"Howard\", \"Fred\", \"Ethan\", \"Jordan\", \"Philip\", \"Alan\", \"Juan\", \"Randy\", \"Vincent\", \"Bobby\", \"Dylan\", \"Johnny\", \"Phillip\", \"Victor\", \"Clarence\", \"Ernest\", \"Martin\", \"Craig\", \"Stanley\", \"Shawn\", \"Travis\", \"Bradley\", \"Leonard\", \"Earl\", \"Gabriel\", \"Jimmy\", \"Francis\", \"Todd\", \"Noah\", \"Danny\", \"Dale\", \"Cody\", \"Carlos\", \"Allen\", \"Frederick\", \"Logan\", \"Curtis\", \"Alex\", \"Joel\", \"Luis\", \"Norman\", \"Marvin\", \"Glenn\", \"Tony\", \"Nathaniel\", \"Rodney\", \"Melvin\", \"Alfred\", \"Steve\", \"Cameron\", \"Chad\", \"Edwin\", \"Caleb\", \"Evan\", \"Antonio\", \"Lee\", \"Herbert\", \"Jeffery\", \"Isaac\", \"Derek\", \"Ricky\", \"Marcus\", \"Theodore\", \"Elijah\", \"Luke\", \"Jesus\", \"Eddie\", \"Troy\", \"Mike\", \"Dustin\", \"Ray\", \"Adrian\", \"Bernard\", \"Leroy\", \"Angel\", \"Randall\", \"Wesley\", \"Ian\", \"Jared\", \"Mason\", \"Hunter\", \"Calvin\", \"Oscar\", \"Clifford\", \"Jay\", \"Shane\", \"Ronnie\", \"Barry\", \"Lucas\", \"Corey\", \"Manuel\", \"Leo\", \"Tommy\", \"Warren\", \"Jackson\", \"Isaiah\", \"Connor\", \"Don\", \"Dean\", \"Jon\", \"Julian\", \"Miguel\", \"Bill\", \"Lloyd\", \"Charlie\", \"Mitchell\", \"Leon\", \"Jerome\", \"Darrell\", \"Jeremiah\", \"Alvin\", \"Brett\", \"Seth\", \"Floyd\", \"Jim\", \"Blake\", \"Micheal\", \"Gordon\", \"Trevor\", \"Lewis\", \"Erik\", \"Edgar\", \"Vernon\", \"Devin\", \"Gavin\", \"Jayden\", \"Chris\", \"Clyde\", \"Tom\", \"Derrick\", \"Mario\", \"Brent\", \"Marc\", \"Herman\", \"Chase\", \"Dominic\", \"Ricardo\", \"Franklin\", \"Maurice\", \"Max\", \"Aiden\", \"Owen\", \"Lester\", \"Gilbert\", \"Elmer\", \"Gene\", \"Francisco\", \"Glen\", \"Cory\", \"Garrett\", \"Clayton\", \"Sam\", \"Jorge\", \"Chester\", \"Alejandro\", \"Jeff\", \"Harvey\", \"Milton\", \"Cole\", \"Ivan\", \"Andre\", \"Duane\", \"Landon\"],\n                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0163\n                \"it\": [\"Adolfo\", \"Alberto\", \"Aldo\", \"Alessandro\", \"Alessio\", \"Alfredo\", \"Alvaro\", \"Andrea\", \"Angelo\", \"Angiolo\", \"Antonino\", \"Antonio\", \"Attilio\", \"Benito\", \"Bernardo\", \"Bruno\", \"Carlo\", \"Cesare\", \"Christian\", \"Claudio\", \"Corrado\", \"Cosimo\", \"Cristian\", \"Cristiano\", \"Daniele\", \"Dario\", \"David\", \"Davide\", \"Diego\", \"Dino\", \"Domenico\", \"Duccio\", \"Edoardo\", \"Elia\", \"Elio\", \"Emanuele\", \"Emiliano\", \"Emilio\", \"Enrico\", \"Enzo\", \"Ettore\", \"Fabio\", \"Fabrizio\", \"Federico\", \"Ferdinando\", \"Fernando\", \"Filippo\", \"Francesco\", \"Franco\", \"Gabriele\", \"Giacomo\", \"Giampaolo\", \"Giampiero\", \"Giancarlo\", \"Gianfranco\", \"Gianluca\", \"Gianmarco\", \"Gianni\", \"Gino\", \"Giorgio\", \"Giovanni\", \"Giuliano\", \"Giulio\", \"Giuseppe\", \"Graziano\", \"Gregorio\", \"Guido\", \"Iacopo\", \"Jacopo\", \"Lapo\", \"Leonardo\", \"Lorenzo\", \"Luca\", \"Luciano\", \"Luigi\", \"Manuel\", \"Marcello\", \"Marco\", \"Marino\", \"Mario\", \"Massimiliano\", \"Massimo\", \"Matteo\", \"Mattia\", \"Maurizio\", \"Mauro\", \"Michele\", \"Mirko\", \"Mohamed\", \"Nello\", \"Neri\", \"Niccolò\", \"Nicola\", \"Osvaldo\", \"Otello\", \"Paolo\", \"Pier Luigi\", \"Piero\", \"Pietro\", \"Raffaele\", \"Remo\", \"Renato\", \"Renzo\", \"Riccardo\", \"Roberto\", \"Rolando\", \"Romano\", \"Salvatore\", \"Samuele\", \"Sandro\", \"Sergio\", \"Silvano\", \"Simone\", \"Stefano\", \"Thomas\", \"Tommaso\", \"Ubaldo\", \"Ugo\", \"Umberto\", \"Valerio\", \"Valter\", \"Vasco\", \"Vincenzo\", \"Vittorio\"],\n                // Data taken from http://www.svbkindernamen.nl/int/nl/kindernamen/index.html\n                \"nl\": [\"Aaron\",\"Abel\",\"Adam\",\"Adriaan\",\"Albert\",\"Alexander\",\"Ali\",\"Arjen\",\"Arno\",\"Bart\",\"Bas\",\"Bastiaan\",\"Benjamin\",\"Bob\", \"Boris\",\"Bram\",\"Brent\",\"Cas\",\"Casper\",\"Chris\",\"Christiaan\",\"Cornelis\",\"Daan\",\"Daley\",\"Damian\",\"Dani\",\"Daniel\",\"Daniël\",\"David\",\"Dean\",\"Dirk\",\"Dylan\",\"Egbert\",\"Elijah\",\"Erik\",\"Erwin\",\"Evert\",\"Ezra\",\"Fabian\",\"Fedde\",\"Finn\",\"Florian\",\"Floris\",\"Frank\",\"Frans\",\"Frederik\",\"Freek\",\"Geert\",\"Gerard\",\"Gerben\",\"Gerrit\",\"Gijs\",\"Guus\",\"Hans\",\"Hendrik\",\"Henk\",\"Herman\",\"Hidde\",\"Hugo\",\"Jaap\",\"Jan Jaap\",\"Jan-Willem\",\"Jack\",\"Jacob\",\"Jan\",\"Jason\",\"Jasper\",\"Jayden\",\"Jelle\",\"Jelte\",\"Jens\",\"Jeroen\",\"Jesse\",\"Jim\",\"Job\",\"Joep\",\"Johannes\",\"John\",\"Jonathan\",\"Joris\",\"Joshua\",\"Joël\",\"Julian\",\"Kees\",\"Kevin\",\"Koen\",\"Lars\",\"Laurens\",\"Leendert\",\"Lennard\",\"Lodewijk\",\"Luc\",\"Luca\",\"Lucas\",\"Lukas\",\"Luuk\",\"Maarten\",\"Marcus\",\"Martijn\",\"Martin\",\"Matthijs\",\"Maurits\",\"Max\",\"Mees\",\"Melle\",\"Mick\",\"Mika\",\"Milan\",\"Mohamed\",\"Mohammed\",\"Morris\",\"Muhammed\",\"Nathan\",\"Nick\",\"Nico\",\"Niek\",\"Niels\",\"Noah\",\"Noud\",\"Olivier\",\"Oscar\",\"Owen\",\"Paul\",\"Pepijn\",\"Peter\",\"Pieter\",\"Pim\",\"Quinten\",\"Reinier\",\"Rens\",\"Robin\",\"Ruben\",\"Sam\",\"Samuel\",\"Sander\",\"Sebastiaan\",\"Sem\",\"Sep\",\"Sepp\",\"Siem\",\"Simon\",\"Stan\",\"Stef\",\"Steven\",\"Stijn\",\"Sven\",\"Teun\",\"Thijmen\",\"Thijs\",\"Thomas\",\"Tijn\",\"Tim\",\"Timo\",\"Tobias\",\"Tom\",\"Victor\",\"Vince\",\"Willem\",\"Wim\",\"Wouter\",\"Yusuf\"],\n                // Data taken from https://fr.wikipedia.org/wiki/Liste_de_pr%C3%A9noms_fran%C3%A7ais_et_de_la_francophonie\n                \"fr\": [\"Aaron\",\"Abdon\",\"Abel\",\"Abélard\",\"Abelin\",\"Abondance\",\"Abraham\",\"Absalon\",\"Acace\",\"Achaire\",\"Achille\",\"Adalard\",\"Adalbald\",\"Adalbéron\",\"Adalbert\",\"Adalric\",\"Adam\",\"Adegrin\",\"Adel\",\"Adelin\",\"Andelin\",\"Adelphe\",\"Adam\",\"Adéodat\",\"Adhémar\",\"Adjutor\",\"Adolphe\",\"Adonis\",\"Adon\",\"Adrien\",\"Agapet\",\"Agathange\",\"Agathon\",\"Agilbert\",\"Agénor\",\"Agnan\",\"Aignan\",\"Agrippin\",\"Aimable\",\"Aimé\",\"Alain\",\"Alban\",\"Albin\",\"Aubin\",\"Albéric\",\"Albert\",\"Albertet\",\"Alcibiade\",\"Alcide\",\"Alcée\",\"Alcime\",\"Aldonce\",\"Aldric\",\"Aldéric\",\"Aleaume\",\"Alexandre\",\"Alexis\",\"Alix\",\"Alliaume\",\"Aleaume\",\"Almine\",\"Almire\",\"Aloïs\",\"Alphée\",\"Alphonse\",\"Alpinien\",\"Alverède\",\"Amalric\",\"Amaury\",\"Amandin\",\"Amant\",\"Ambroise\",\"Amédée\",\"Amélien\",\"Amiel\",\"Amour\",\"Anaël\",\"Anastase\",\"Anatole\",\"Ancelin\",\"Andéol\",\"Andoche\",\"André\",\"Andoche\",\"Ange\",\"Angelin\",\"Angilbe\",\"Anglebert\",\"Angoustan\",\"Anicet\",\"Anne\",\"Annibal\",\"Ansbert\",\"Anselme\",\"Anthelme\",\"Antheaume\",\"Anthime\",\"Antide\",\"Antoine\",\"Antonius\",\"Antonin\",\"Apollinaire\",\"Apollon\",\"Aquilin\",\"Arcade\",\"Archambaud\",\"Archambeau\",\"Archange\",\"Archibald\",\"Arian\",\"Ariel\",\"Ariste\",\"Aristide\",\"Armand\",\"Armel\",\"Armin\",\"Arnould\",\"Arnaud\",\"Arolde\",\"Arsène\",\"Arsinoé\",\"Arthaud\",\"Arthème\",\"Arthur\",\"Ascelin\",\"Athanase\",\"Aubry\",\"Audebert\",\"Audouin\",\"Audran\",\"Audric\",\"Auguste\",\"Augustin\",\"Aurèle\",\"Aurélien\",\"Aurian\",\"Auxence\",\"Axel\",\"Aymard\",\"Aymeric\",\"Aymon\",\"Aymond\",\"Balthazar\",\"Baptiste\",\"Barnabé\",\"Barthélemy\",\"Bartimée\",\"Basile\",\"Bastien\",\"Baudouin\",\"Bénigne\",\"Benjamin\",\"Benoît\",\"Bérenger\",\"Bérard\",\"Bernard\",\"Bertrand\",\"Blaise\",\"Bon\",\"Boniface\",\"Bouchard\",\"Brice\",\"Brieuc\",\"Bruno\",\"Brunon\",\"Calixte\",\"Calliste\",\"Camélien\",\"Camille\",\"Camillien\",\"Candide\",\"Caribert\",\"Carloman\",\"Cassandre\",\"Cassien\",\"Cédric\",\"Céleste\",\"Célestin\",\"Célien\",\"Césaire\",\"César\",\"Charles\",\"Charlemagne\",\"Childebert\",\"Chilpéric\",\"Chrétien\",\"Christian\",\"Christodule\",\"Christophe\",\"Chrysostome\",\"Clarence\",\"Claude\",\"Claudien\",\"Cléandre\",\"Clément\",\"Clotaire\",\"Côme\",\"Constance\",\"Constant\",\"Constantin\",\"Corentin\",\"Cyprien\",\"Cyriaque\",\"Cyrille\",\"Cyril\",\"Damien\",\"Daniel\",\"David\",\"Delphin\",\"Denis\",\"Désiré\",\"Didier\",\"Dieudonné\",\"Dimitri\",\"Dominique\",\"Dorian\",\"Dorothée\",\"Edgard\",\"Edmond\",\"Édouard\",\"Éleuthère\",\"Élie\",\"Élisée\",\"Émeric\",\"Émile\",\"Émilien\",\"Emmanuel\",\"Enguerrand\",\"Épiphane\",\"Éric\",\"Esprit\",\"Ernest\",\"Étienne\",\"Eubert\",\"Eudes\",\"Eudoxe\",\"Eugène\",\"Eusèbe\",\"Eustache\",\"Évariste\",\"Évrard\",\"Fabien\",\"Fabrice\",\"Falba\",\"Félicité\",\"Félix\",\"Ferdinand\",\"Fiacre\",\"Fidèle\",\"Firmin\",\"Flavien\",\"Flodoard\",\"Florent\",\"Florentin\",\"Florestan\",\"Florian\",\"Fortuné\",\"Foulques\",\"Francisque\",\"François\",\"Français\",\"Franciscus\",\"Francs\",\"Frédéric\",\"Fulbert\",\"Fulcran\",\"Fulgence\",\"Gabin\",\"Gabriel\",\"Gaël\",\"Garnier\",\"Gaston\",\"Gaspard\",\"Gatien\",\"Gaud\",\"Gautier\",\"Gédéon\",\"Geoffroy\",\"Georges\",\"Géraud\",\"Gérard\",\"Gerbert\",\"Germain\",\"Gervais\",\"Ghislain\",\"Gilbert\",\"Gilles\",\"Girart\",\"Gislebert\",\"Gondebaud\",\"Gonthier\",\"Gontran\",\"Gonzague\",\"Grégoire\",\"Guérin\",\"Gui\",\"Guillaume\",\"Gustave\",\"Guy\",\"Guyot\",\"Hardouin\",\"Hector\",\"Hédelin\",\"Hélier\",\"Henri\",\"Herbert\",\"Herluin\",\"Hervé\",\"Hilaire\",\"Hildebert\",\"Hincmar\",\"Hippolyte\",\"Honoré\",\"Hubert\",\"Hugues\",\"Innocent\",\"Isabeau\",\"Isidore\",\"Jacques\",\"Japhet\",\"Jason\",\"Jean\",\"Jeannel\",\"Jeannot\",\"Jérémie\",\"Jérôme\",\"Joachim\",\"Joanny\",\"Job\",\"Jocelyn\",\"Joël\",\"Johan\",\"Jonas\",\"Jonathan\",\"Joseph\",\"Josse\",\"Josselin\",\"Jourdain\",\"Jude\",\"Judicaël\",\"Jules\",\"Julien\",\"Juste\",\"Justin\",\"Lambert\",\"Landry\",\"Laurent\",\"Lazare\",\"Léandre\",\"Léon\",\"Léonard\",\"Léopold\",\"Leu\",\"Loup\",\"Leufroy\",\"Libère\",\"Liétald\",\"Lionel\",\"Loïc\",\"Longin\",\"Lorrain\",\"Lorraine\",\"Lothaire\",\"Louis\",\"Loup\",\"Luc\",\"Lucas\",\"Lucien\",\"Ludolphe\",\"Ludovic\",\"Macaire\",\"Malo\",\"Mamert\",\"Manassé\",\"Marc\",\"Marceau\",\"Marcel\",\"Marcelin\",\"Marius\",\"Marseille\",\"Martial\",\"Martin\",\"Mathurin\",\"Matthias\",\"Mathias\",\"Matthieu\",\"Maugis\",\"Maurice\",\"Mauricet\",\"Maxence\",\"Maxime\",\"Maximilien\",\"Mayeul\",\"Médéric\",\"Melchior\",\"Mence\",\"Merlin\",\"Mérovée\",\"Michaël\",\"Michel\",\"Moïse\",\"Morgan\",\"Nathan\",\"Nathanaël\",\"Narcisse\",\"Néhémie\",\"Nestor\",\"Nestor\",\"Nicéphore\",\"Nicolas\",\"Noé\",\"Noël\",\"Norbert\",\"Normand\",\"Normands\",\"Octave\",\"Odilon\",\"Odon\",\"Oger\",\"Olivier\",\"Oury\",\"Pacôme\",\"Palémon\",\"Parfait\",\"Pascal\",\"Paterne\",\"Patrice\",\"Paul\",\"Pépin\",\"Perceval\",\"Philémon\",\"Philibert\",\"Philippe\",\"Philothée\",\"Pie\",\"Pierre\",\"Pierrick\",\"Prosper\",\"Quentin\",\"Raoul\",\"Raphaël\",\"Raymond\",\"Régis\",\"Réjean\",\"Rémi\",\"Renaud\",\"René\",\"Reybaud\",\"Richard\",\"Robert\",\"Roch\",\"Rodolphe\",\"Rodrigue\",\"Roger\",\"Roland\",\"Romain\",\"Romuald\",\"Roméo\",\"Rome\",\"Ronan\",\"Roselin\",\"Salomon\",\"Samuel\",\"Savin\",\"Savinien\",\"Scholastique\",\"Sébastien\",\"Séraphin\",\"Serge\",\"Séverin\",\"Sidoine\",\"Sigebert\",\"Sigismond\",\"Silvère\",\"Simon\",\"Siméon\",\"Sixte\",\"Stanislas\",\"Stéphane\",\"Stephan\",\"Sylvain\",\"Sylvestre\",\"Tancrède\",\"Tanguy\",\"Taurin\",\"Théodore\",\"Théodose\",\"Théophile\",\"Théophraste\",\"Thibault\",\"Thibert\",\"Thierry\",\"Thomas\",\"Timoléon\",\"Timothée\",\"Titien\",\"Tonnin\",\"Toussaint\",\"Trajan\",\"Tristan\",\"Turold\",\"Tim\",\"Ulysse\",\"Urbain\",\"Valentin\",\"Valère\",\"Valéry\",\"Venance\",\"Venant\",\"Venceslas\",\"Vianney\",\"Victor\",\"Victorien\",\"Victorin\",\"Vigile\",\"Vincent\",\"Vital\",\"Vitalien\",\"Vivien\",\"Waleran\",\"Wandrille\",\"Xavier\",\"Xénophon\",\"Yves\",\"Zacharie\",\"Zaché\",\"Zéphirin\"]\n            },\n\n            \"female\": {\n                \"en\": [\"Mary\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\", \"Alice\", \"Bertha\", \"Sarah\", \"Annie\", \"Clara\", \"Ella\", \"Florence\", \"Cora\", \"Martha\", \"Laura\", \"Nellie\", \"Grace\", \"Carrie\", \"Maude\", \"Mabel\", \"Bessie\", \"Jennie\", \"Gertrude\", \"Julia\", \"Hattie\", \"Edith\", \"Mattie\", \"Rose\", \"Catherine\", \"Lillian\", \"Ada\", \"Lillie\", \"Helen\", \"Jessie\", \"Louise\", \"Ethel\", \"Lula\", \"Myrtle\", \"Eva\", \"Frances\", \"Lena\", \"Lucy\", \"Edna\", \"Maggie\", \"Pearl\", \"Daisy\", \"Fannie\", \"Josephine\", \"Dora\", \"Rosa\", \"Katherine\", \"Agnes\", \"Marie\", \"Nora\", \"May\", \"Mamie\", \"Blanche\", \"Stella\", \"Ellen\", \"Nancy\", \"Effie\", \"Sallie\", \"Nettie\", \"Della\", \"Lizzie\", \"Flora\", \"Susie\", \"Maud\", \"Mae\", \"Etta\", \"Harriet\", \"Sadie\", \"Caroline\", \"Katie\", \"Lydia\", \"Elsie\", \"Kate\", \"Susan\", \"Mollie\", \"Alma\", \"Addie\", \"Georgia\", \"Eliza\", \"Lulu\", \"Nannie\", \"Lottie\", \"Amanda\", \"Belle\", \"Charlotte\", \"Rebecca\", \"Ruth\", \"Viola\", \"Olive\", \"Amelia\", \"Hannah\", \"Jane\", \"Virginia\", \"Emily\", \"Matilda\", \"Irene\", \"Kathryn\", \"Esther\", \"Willie\", \"Henrietta\", \"Ollie\", \"Amy\", \"Rachel\", \"Sara\", \"Estella\", \"Theresa\", \"Augusta\", \"Ora\", \"Pauline\", \"Josie\", \"Lola\", \"Sophia\", \"Leona\", \"Anne\", \"Mildred\", \"Ann\", \"Beulah\", \"Callie\", \"Lou\", \"Delia\", \"Eleanor\", \"Barbara\", \"Iva\", \"Louisa\", \"Maria\", \"Mayme\", \"Evelyn\", \"Estelle\", \"Nina\", \"Betty\", \"Marion\", \"Bettie\", \"Dorothy\", \"Luella\", \"Inez\", \"Lela\", \"Rosie\", \"Allie\", \"Millie\", \"Janie\", \"Cornelia\", \"Victoria\", \"Ruby\", \"Winifred\", \"Alta\", \"Celia\", \"Christine\", \"Beatrice\", \"Birdie\", \"Harriett\", \"Mable\", \"Myra\", \"Sophie\", \"Tillie\", \"Isabel\", \"Sylvia\", \"Carolyn\", \"Isabelle\", \"Leila\", \"Sally\", \"Ina\", \"Essie\", \"Bertie\", \"Nell\", \"Alberta\", \"Katharine\", \"Lora\", \"Rena\", \"Mina\", \"Rhoda\", \"Mathilda\", \"Abbie\", \"Eula\", \"Dollie\", \"Hettie\", \"Eunice\", \"Fanny\", \"Ola\", \"Lenora\", \"Adelaide\", \"Christina\", \"Lelia\", \"Nelle\", \"Sue\", \"Johanna\", \"Lilly\", \"Lucinda\", \"Minerva\", \"Lettie\", \"Roxie\", \"Cynthia\", \"Helena\", \"Hilda\", \"Hulda\", \"Bernice\", \"Genevieve\", \"Jean\", \"Cordelia\", \"Marian\", \"Francis\", \"Jeanette\", \"Adeline\", \"Gussie\", \"Leah\", \"Lois\", \"Lura\", \"Mittie\", \"Hallie\", \"Isabella\", \"Olga\", \"Phoebe\", \"Teresa\", \"Hester\", \"Lida\", \"Lina\", \"Winnie\", \"Claudia\", \"Marguerite\", \"Vera\", \"Cecelia\", \"Bess\", \"Emilie\", \"Rosetta\", \"Verna\", \"Myrtie\", \"Cecilia\", \"Elva\", \"Olivia\", \"Ophelia\", \"Georgie\", \"Elnora\", \"Violet\", \"Adele\", \"Lily\", \"Linnie\", \"Loretta\", \"Madge\", \"Polly\", \"Virgie\", \"Eugenia\", \"Lucile\", \"Lucille\", \"Mabelle\", \"Rosalie\"],\n                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0162\n                \"it\": [\"Ada\", \"Adriana\", \"Alessandra\", \"Alessia\", \"Alice\", \"Angela\", \"Anna\", \"Anna Maria\", \"Annalisa\", \"Annita\", \"Annunziata\", \"Antonella\", \"Arianna\", \"Asia\", \"Assunta\", \"Aurora\", \"Barbara\", \"Beatrice\", \"Benedetta\", \"Bianca\", \"Bruna\", \"Camilla\", \"Carla\", \"Carlotta\", \"Carmela\", \"Carolina\", \"Caterina\", \"Catia\", \"Cecilia\", \"Chiara\", \"Cinzia\", \"Clara\", \"Claudia\", \"Costanza\", \"Cristina\", \"Daniela\", \"Debora\", \"Diletta\", \"Dina\", \"Donatella\", \"Elena\", \"Eleonora\", \"Elisa\", \"Elisabetta\", \"Emanuela\", \"Emma\", \"Eva\", \"Federica\", \"Fernanda\", \"Fiorella\", \"Fiorenza\", \"Flora\", \"Franca\", \"Francesca\", \"Gabriella\", \"Gaia\", \"Gemma\", \"Giada\", \"Gianna\", \"Gina\", \"Ginevra\", \"Giorgia\", \"Giovanna\", \"Giulia\", \"Giuliana\", \"Giuseppa\", \"Giuseppina\", \"Grazia\", \"Graziella\", \"Greta\", \"Ida\", \"Ilaria\", \"Ines\", \"Iolanda\", \"Irene\", \"Irma\", \"Isabella\", \"Jessica\", \"Laura\", \"Lea\", \"Letizia\", \"Licia\", \"Lidia\", \"Liliana\", \"Lina\", \"Linda\", \"Lisa\", \"Livia\", \"Loretta\", \"Luana\", \"Lucia\", \"Luciana\", \"Lucrezia\", \"Luisa\", \"Manuela\", \"Mara\", \"Marcella\", \"Margherita\", \"Maria\", \"Maria Cristina\", \"Maria Grazia\", \"Maria Luisa\", \"Maria Pia\", \"Maria Teresa\", \"Marina\", \"Marisa\", \"Marta\", \"Martina\", \"Marzia\", \"Matilde\", \"Melissa\", \"Michela\", \"Milena\", \"Mirella\", \"Monica\", \"Natalina\", \"Nella\", \"Nicoletta\", \"Noemi\", \"Olga\", \"Paola\", \"Patrizia\", \"Piera\", \"Pierina\", \"Raffaella\", \"Rebecca\", \"Renata\", \"Rina\", \"Rita\", \"Roberta\", \"Rosa\", \"Rosanna\", \"Rossana\", \"Rossella\", \"Sabrina\", \"Sandra\", \"Sara\", \"Serena\", \"Silvana\", \"Silvia\", \"Simona\", \"Simonetta\", \"Sofia\", \"Sonia\", \"Stefania\", \"Susanna\", \"Teresa\", \"Tina\", \"Tiziana\", \"Tosca\", \"Valentina\", \"Valeria\", \"Vanda\", \"Vanessa\", \"Vanna\", \"Vera\", \"Veronica\", \"Vilma\", \"Viola\", \"Virginia\", \"Vittoria\"],\n                // Data taken from http://www.svbkindernamen.nl/int/nl/kindernamen/index.html\n                \"nl\": [\"Ada\", \"Arianne\", \"Afke\", \"Amanda\", \"Amber\", \"Amy\", \"Aniek\", \"Anita\", \"Anja\", \"Anna\", \"Anne\", \"Annelies\", \"Annemarie\", \"Annette\", \"Anouk\", \"Astrid\", \"Aukje\", \"Barbara\", \"Bianca\", \"Carla\", \"Carlijn\", \"Carolien\", \"Chantal\", \"Charlotte\", \"Claudia\", \"Daniëlle\", \"Debora\", \"Diane\", \"Dora\", \"Eline\", \"Elise\", \"Ella\", \"Ellen\", \"Emma\", \"Esmee\", \"Evelien\", \"Esther\", \"Erica\", \"Eva\", \"Femke\", \"Fleur\", \"Floor\", \"Froukje\", \"Gea\", \"Gerda\", \"Hanna\", \"Hanneke\", \"Heleen\", \"Hilde\", \"Ilona\", \"Ina\", \"Inge\", \"Ingrid\", \"Iris\", \"Isabel\", \"Isabelle\", \"Janneke\", \"Jasmijn\", \"Jeanine\", \"Jennifer\", \"Jessica\", \"Johanna\", \"Joke\", \"Julia\", \"Julie\", \"Karen\", \"Karin\", \"Katja\", \"Kim\", \"Lara\", \"Laura\", \"Lena\", \"Lianne\", \"Lieke\", \"Lilian\", \"Linda\", \"Lisa\", \"Lisanne\", \"Lotte\", \"Louise\", \"Maaike\", \"Manon\", \"Marga\", \"Maria\", \"Marissa\", \"Marit\", \"Marjolein\", \"Martine\", \"Marleen\", \"Melissa\", \"Merel\", \"Miranda\", \"Michelle\", \"Mirjam\", \"Mirthe\", \"Naomi\", \"Natalie\", 'Nienke', \"Nina\", \"Noortje\", \"Olivia\", \"Patricia\", \"Paula\", \"Paulien\", \"Ramona\", \"Ria\", \"Rianne\", \"Roos\", \"Rosanne\", \"Ruth\", \"Sabrina\", \"Sandra\", \"Sanne\", \"Sara\", \"Saskia\", \"Silvia\", \"Sofia\", \"Sophie\", \"Sonja\", \"Suzanne\", \"Tamara\", \"Tess\", \"Tessa\", \"Tineke\", \"Valerie\", \"Vanessa\", \"Veerle\", \"Vera\", \"Victoria\", \"Wendy\", \"Willeke\", \"Yvonne\", \"Zoë\"],\n                // Data taken from https://fr.wikipedia.org/wiki/Liste_de_pr%C3%A9noms_fran%C3%A7ais_et_de_la_francophonie\n                \"fr\": [\"Abdon\",\"Abel\",\"Abigaëlle\",\"Abigaïl\",\"Acacius\",\"Acanthe\",\"Adalbert\",\"Adalsinde\",\"Adegrine\",\"Adélaïde\",\"Adèle\",\"Adélie\",\"Adeline\",\"Adeltrude\",\"Adolphe\",\"Adonis\",\"Adrastée\",\"Adrehilde\",\"Adrienne\",\"Agathe\",\"Agilbert\",\"Aglaé\",\"Aignan\",\"Agneflète\",\"Agnès\",\"Agrippine\",\"Aimé\",\"Alaine\",\"Alaïs\",\"Albane\",\"Albérade\",\"Alberte\",\"Alcide\",\"Alcine\",\"Alcyone\",\"Aldegonde\",\"Aleth\",\"Alexandrine\",\"Alexine\",\"Alice\",\"Aliénor\",\"Aliette\",\"Aline\",\"Alix\",\"Alizé\",\"Aloïse\",\"Aloyse\",\"Alphonsine\",\"Althée\",\"Amaliane\",\"Amalthée\",\"Amande\",\"Amandine\",\"Amant\",\"Amarande\",\"Amaranthe\",\"Amaryllis\",\"Ambre\",\"Ambroisie\",\"Amélie\",\"Améthyste\",\"Aminte\",\"Anaël\",\"Anaïs\",\"Anastasie\",\"Anatole\",\"Ancelin\",\"Andrée\",\"Anémone\",\"Angadrême\",\"Angèle\",\"Angeline\",\"Angélique\",\"Angilbert\",\"Anicet\",\"Annabelle\",\"Anne\",\"Annette\",\"Annick\",\"Annie\",\"Annonciade\",\"Ansbert\",\"Anstrudie\",\"Anthelme\",\"Antigone\",\"Antoinette\",\"Antonine\",\"Aphélie\",\"Apolline\",\"Apollonie\",\"Aquiline\",\"Arabelle\",\"Arcadie\",\"Archange\",\"Argine\",\"Ariane\",\"Aricie\",\"Ariel\",\"Arielle\",\"Arlette\",\"Armance\",\"Armande\",\"Armandine\",\"Armelle\",\"Armide\",\"Armelle\",\"Armin\",\"Arnaud\",\"Arsène\",\"Arsinoé\",\"Artémis\",\"Arthur\",\"Ascelin\",\"Ascension\",\"Assomption\",\"Astarté\",\"Astérie\",\"Astrée\",\"Astrid\",\"Athalie\",\"Athanasie\",\"Athina\",\"Aube\",\"Albert\",\"Aude\",\"Audrey\",\"Augustine\",\"Aure\",\"Aurélie\",\"Aurélien\",\"Aurèle\",\"Aurore\",\"Auxence\",\"Aveline\",\"Abigaëlle\",\"Avoye\",\"Axelle\",\"Aymard\",\"Azalée\",\"Adèle\",\"Adeline\",\"Barbe\",\"Basilisse\",\"Bathilde\",\"Béatrice\",\"Béatrix\",\"Bénédicte\",\"Bérengère\",\"Bernadette\",\"Berthe\",\"Bertille\",\"Beuve\",\"Blanche\",\"Blanc\",\"Blandine\",\"Brigitte\",\"Brune\",\"Brunehilde\",\"Callista\",\"Camille\",\"Capucine\",\"Carine\",\"Caroline\",\"Cassandre\",\"Catherine\",\"Cécile\",\"Céleste\",\"Célestine\",\"Céline\",\"Chantal\",\"Charlène\",\"Charline\",\"Charlotte\",\"Chloé\",\"Christelle\",\"Christiane\",\"Christine\",\"Claire\",\"Clara\",\"Claude\",\"Claudine\",\"Clarisse\",\"Clémence\",\"Clémentine\",\"Cléo\",\"Clio\",\"Clotilde\",\"Coline\",\"Conception\",\"Constance\",\"Coralie\",\"Coraline\",\"Corentine\",\"Corinne\",\"Cyrielle\",\"Daniel\",\"Daniel\",\"Daphné\",\"Débora\",\"Delphine\",\"Denise\",\"Diane\",\"Dieudonné\",\"Dominique\",\"Doriane\",\"Dorothée\",\"Douce\",\"Édith\",\"Edmée\",\"Éléonore\",\"Éliane\",\"Élia\",\"Éliette\",\"Élisabeth\",\"Élise\",\"Ella\",\"Élodie\",\"Éloïse\",\"Elsa\",\"Émeline\",\"Émérance\",\"Émérentienne\",\"Émérencie\",\"Émilie\",\"Emma\",\"Emmanuelle\",\"Emmelie\",\"Ernestine\",\"Esther\",\"Estelle\",\"Eudoxie\",\"Eugénie\",\"Eulalie\",\"Euphrasie\",\"Eusébie\",\"Évangéline\",\"Eva\",\"Ève\",\"Évelyne\",\"Fanny\",\"Fantine\",\"Faustine\",\"Félicie\",\"Fernande\",\"Flavie\",\"Fleur\",\"Flore\",\"Florence\",\"Florie\",\"Fortuné\",\"France\",\"Francia\",\"Françoise\",\"Francine\",\"Gabrielle\",\"Gaëlle\",\"Garance\",\"Geneviève\",\"Georgette\",\"Gerberge\",\"Germaine\",\"Gertrude\",\"Gisèle\",\"Guenièvre\",\"Guilhemine\",\"Guillemette\",\"Gustave\",\"Gwenael\",\"Hélène\",\"Héloïse\",\"Henriette\",\"Hermine\",\"Hermione\",\"Hippolyte\",\"Honorine\",\"Hortense\",\"Huguette\",\"Ines\",\"Irène\",\"Irina\",\"Iris\",\"Isabeau\",\"Isabelle\",\"Iseult\",\"Isolde\",\"Ismérie\",\"Jacinthe\",\"Jacqueline\",\"Jade\",\"Janine\",\"Jeanne\",\"Jocelyne\",\"Joëlle\",\"Joséphine\",\"Judith\",\"Julia\",\"Julie\",\"Jules\",\"Juliette\",\"Justine\",\"Katy\",\"Kathy\",\"Katie\",\"Laura\",\"Laure\",\"Laureline\",\"Laurence\",\"Laurene\",\"Lauriane\",\"Laurianne\",\"Laurine\",\"Léa\",\"Léna\",\"Léonie\",\"Léon\",\"Léontine\",\"Lorraine\",\"Lucie\",\"Lucienne\",\"Lucille\",\"Ludivine\",\"Lydie\",\"Lydie\",\"Megane\",\"Madeleine\",\"Magali\",\"Maguelone\",\"Mallaury\",\"Manon\",\"Marceline\",\"Margot\",\"Marguerite\",\"Marianne\",\"Marie\",\"Myriam\",\"Marie\",\"Marine\",\"Marion\",\"Marlène\",\"Marthe\",\"Martine\",\"Mathilde\",\"Maud\",\"Maureen\",\"Mauricette\",\"Maxime\",\"Mélanie\",\"Melissa\",\"Mélissandre\",\"Mélisande\",\"Mélodie\",\"Michel\",\"Micheline\",\"Mireille\",\"Miriam\",\"Moïse\",\"Monique\",\"Morgane\",\"Muriel\",\"Mylène\",\"Nadège\",\"Nadine\",\"Nathalie\",\"Nicole\",\"Nicolette\",\"Nine\",\"Noël\",\"Noémie\",\"Océane\",\"Odette\",\"Odile\",\"Olive\",\"Olivia\",\"Olympe\",\"Ombline\",\"Ombeline\",\"Ophélie\",\"Oriande\",\"Oriane\",\"Ozanne\",\"Pascale\",\"Pascaline\",\"Paule\",\"Paulette\",\"Pauline\",\"Priscille\",\"Prisca\",\"Prisque\",\"Pécine\",\"Pélagie\",\"Pénélope\",\"Perrine\",\"Pétronille\",\"Philippine\",\"Philomène\",\"Philothée\",\"Primerose\",\"Prudence\",\"Pulchérie\",\"Quentine\",\"Quiéta\",\"Quintia\",\"Quintilla\",\"Rachel\",\"Raphaëlle\",\"Raymonde\",\"Rebecca\",\"Régine\",\"Réjeanne\",\"René\",\"Rita\",\"Rita\",\"Rolande\",\"Romane\",\"Rosalie\",\"Rose\",\"Roseline\",\"Sabine\",\"Salomé\",\"Sandra\",\"Sandrine\",\"Sarah\",\"Ségolène\",\"Séverine\",\"Sibylle\",\"Simone\",\"Sixt\",\"Solange\",\"Soline\",\"Solène\",\"Sophie\",\"Stéphanie\",\"Suzanne\",\"Sylvain\",\"Sylvie\",\"Tatiana\",\"Thaïs\",\"Théodora\",\"Thérèse\",\"Tiphaine\",\"Ursule\",\"Valentine\",\"Valérie\",\"Véronique\",\"Victoire\",\"Victorine\",\"Vinciane\",\"Violette\",\"Virginie\",\"Viviane\",\"Xavière\",\"Yolande\",\"Ysaline\",\"Yvette\",\"Yvonne\",\"Zélie\",\"Zita\",\"Zoé\"]\n            }\n        },\n\n        lastNames: {\n            \"en\": ['Smith', 'Johnson', 'Williams', 'Jones', 'Brown', 'Davis', 'Miller', 'Wilson', 'Moore', 'Taylor', 'Anderson', 'Thomas', 'Jackson', 'White', 'Harris', 'Martin', 'Thompson', 'Garcia', 'Martinez', 'Robinson', 'Clark', 'Rodriguez', 'Lewis', 'Lee', 'Walker', 'Hall', 'Allen', 'Young', 'Hernandez', 'King', 'Wright', 'Lopez', 'Hill', 'Scott', 'Green', 'Adams', 'Baker', 'Gonzalez', 'Nelson', 'Carter', 'Mitchell', 'Perez', 'Roberts', 'Turner', 'Phillips', 'Campbell', 'Parker', 'Evans', 'Edwards', 'Collins', 'Stewart', 'Sanchez', 'Morris', 'Rogers', 'Reed', 'Cook', 'Morgan', 'Bell', 'Murphy', 'Bailey', 'Rivera', 'Cooper', 'Richardson', 'Cox', 'Howard', 'Ward', 'Torres', 'Peterson', 'Gray', 'Ramirez', 'James', 'Watson', 'Brooks', 'Kelly', 'Sanders', 'Price', 'Bennett', 'Wood', 'Barnes', 'Ross', 'Henderson', 'Coleman', 'Jenkins', 'Perry', 'Powell', 'Long', 'Patterson', 'Hughes', 'Flores', 'Washington', 'Butler', 'Simmons', 'Foster', 'Gonzales', 'Bryant', 'Alexander', 'Russell', 'Griffin', 'Diaz', 'Hayes', 'Myers', 'Ford', 'Hamilton', 'Graham', 'Sullivan', 'Wallace', 'Woods', 'Cole', 'West', 'Jordan', 'Owens', 'Reynolds', 'Fisher', 'Ellis', 'Harrison', 'Gibson', 'McDonald', 'Cruz', 'Marshall', 'Ortiz', 'Gomez', 'Murray', 'Freeman', 'Wells', 'Webb', 'Simpson', 'Stevens', 'Tucker', 'Porter', 'Hunter', 'Hicks', 'Crawford', 'Henry', 'Boyd', 'Mason', 'Morales', 'Kennedy', 'Warren', 'Dixon', 'Ramos', 'Reyes', 'Burns', 'Gordon', 'Shaw', 'Holmes', 'Rice', 'Robertson', 'Hunt', 'Black', 'Daniels', 'Palmer', 'Mills', 'Nichols', 'Grant', 'Knight', 'Ferguson', 'Rose', 'Stone', 'Hawkins', 'Dunn', 'Perkins', 'Hudson', 'Spencer', 'Gardner', 'Stephens', 'Payne', 'Pierce', 'Berry', 'Matthews', 'Arnold', 'Wagner', 'Willis', 'Ray', 'Watkins', 'Olson', 'Carroll', 'Duncan', 'Snyder', 'Hart', 'Cunningham', 'Bradley', 'Lane', 'Andrews', 'Ruiz', 'Harper', 'Fox', 'Riley', 'Armstrong', 'Carpenter', 'Weaver', 'Greene', 'Lawrence', 'Elliott', 'Chavez', 'Sims', 'Austin', 'Peters', 'Kelley', 'Franklin', 'Lawson', 'Fields', 'Gutierrez', 'Ryan', 'Schmidt', 'Carr', 'Vasquez', 'Castillo', 'Wheeler', 'Chapman', 'Oliver', 'Montgomery', 'Richards', 'Williamson', 'Johnston', 'Banks', 'Meyer', 'Bishop', 'McCoy', 'Howell', 'Alvarez', 'Morrison', 'Hansen', 'Fernandez', 'Garza', 'Harvey', 'Little', 'Burton', 'Stanley', 'Nguyen', 'George', 'Jacobs', 'Reid', 'Kim', 'Fuller', 'Lynch', 'Dean', 'Gilbert', 'Garrett', 'Romero', 'Welch', 'Larson', 'Frazier', 'Burke', 'Hanson', 'Day', 'Mendoza', 'Moreno', 'Bowman', 'Medina', 'Fowler', 'Brewer', 'Hoffman', 'Carlson', 'Silva', 'Pearson', 'Holland', 'Douglas', 'Fleming', 'Jensen', 'Vargas', 'Byrd', 'Davidson', 'Hopkins', 'May', 'Terry', 'Herrera', 'Wade', 'Soto', 'Walters', 'Curtis', 'Neal', 'Caldwell', 'Lowe', 'Jennings', 'Barnett', 'Graves', 'Jimenez', 'Horton', 'Shelton', 'Barrett', 'Obrien', 'Castro', 'Sutton', 'Gregory', 'McKinney', 'Lucas', 'Miles', 'Craig', 'Rodriquez', 'Chambers', 'Holt', 'Lambert', 'Fletcher', 'Watts', 'Bates', 'Hale', 'Rhodes', 'Pena', 'Beck', 'Newman', 'Haynes', 'McDaniel', 'Mendez', 'Bush', 'Vaughn', 'Parks', 'Dawson', 'Santiago', 'Norris', 'Hardy', 'Love', 'Steele', 'Curry', 'Powers', 'Schultz', 'Barker', 'Guzman', 'Page', 'Munoz', 'Ball', 'Keller', 'Chandler', 'Weber', 'Leonard', 'Walsh', 'Lyons', 'Ramsey', 'Wolfe', 'Schneider', 'Mullins', 'Benson', 'Sharp', 'Bowen', 'Daniel', 'Barber', 'Cummings', 'Hines', 'Baldwin', 'Griffith', 'Valdez', 'Hubbard', 'Salazar', 'Reeves', 'Warner', 'Stevenson', 'Burgess', 'Santos', 'Tate', 'Cross', 'Garner', 'Mann', 'Mack', 'Moss', 'Thornton', 'Dennis', 'McGee', 'Farmer', 'Delgado', 'Aguilar', 'Vega', 'Glover', 'Manning', 'Cohen', 'Harmon', 'Rodgers', 'Robbins', 'Newton', 'Todd', 'Blair', 'Higgins', 'Ingram', 'Reese', 'Cannon', 'Strickland', 'Townsend', 'Potter', 'Goodwin', 'Walton', 'Rowe', 'Hampton', 'Ortega', 'Patton', 'Swanson', 'Joseph', 'Francis', 'Goodman', 'Maldonado', 'Yates', 'Becker', 'Erickson', 'Hodges', 'Rios', 'Conner', 'Adkins', 'Webster', 'Norman', 'Malone', 'Hammond', 'Flowers', 'Cobb', 'Moody', 'Quinn', 'Blake', 'Maxwell', 'Pope', 'Floyd', 'Osborne', 'Paul', 'McCarthy', 'Guerrero', 'Lindsey', 'Estrada', 'Sandoval', 'Gibbs', 'Tyler', 'Gross', 'Fitzgerald', 'Stokes', 'Doyle', 'Sherman', 'Saunders', 'Wise', 'Colon', 'Gill', 'Alvarado', 'Greer', 'Padilla', 'Simon', 'Waters', 'Nunez', 'Ballard', 'Schwartz', 'McBride', 'Houston', 'Christensen', 'Klein', 'Pratt', 'Briggs', 'Parsons', 'McLaughlin', 'Zimmerman', 'French', 'Buchanan', 'Moran', 'Copeland', 'Roy', 'Pittman', 'Brady', 'McCormick', 'Holloway', 'Brock', 'Poole', 'Frank', 'Logan', 'Owen', 'Bass', 'Marsh', 'Drake', 'Wong', 'Jefferson', 'Park', 'Morton', 'Abbott', 'Sparks', 'Patrick', 'Norton', 'Huff', 'Clayton', 'Massey', 'Lloyd', 'Figueroa', 'Carson', 'Bowers', 'Roberson', 'Barton', 'Tran', 'Lamb', 'Harrington', 'Casey', 'Boone', 'Cortez', 'Clarke', 'Mathis', 'Singleton', 'Wilkins', 'Cain', 'Bryan', 'Underwood', 'Hogan', 'McKenzie', 'Collier', 'Luna', 'Phelps', 'McGuire', 'Allison', 'Bridges', 'Wilkerson', 'Nash', 'Summers', 'Atkins'],\n                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0164 (first 1000)\n            \"it\": [\"Acciai\", \"Aglietti\", \"Agostini\", \"Agresti\", \"Ahmed\", \"Aiazzi\", \"Albanese\", \"Alberti\", \"Alessi\", \"Alfani\", \"Alinari\", \"Alterini\", \"Amato\", \"Ammannati\", \"Ancillotti\", \"Andrei\", \"Andreini\", \"Andreoni\", \"Angeli\", \"Anichini\", \"Antonelli\", \"Antonini\", \"Arena\", \"Ariani\", \"Arnetoli\", \"Arrighi\", \"Baccani\", \"Baccetti\", \"Bacci\", \"Bacherini\", \"Badii\", \"Baggiani\", \"Baglioni\", \"Bagni\", \"Bagnoli\", \"Baldassini\", \"Baldi\", \"Baldini\", \"Ballerini\", \"Balli\", \"Ballini\", \"Balloni\", \"Bambi\", \"Banchi\", \"Bandinelli\", \"Bandini\", \"Bani\", \"Barbetti\", \"Barbieri\", \"Barchielli\", \"Bardazzi\", \"Bardelli\", \"Bardi\", \"Barducci\", \"Bargellini\", \"Bargiacchi\", \"Barni\", \"Baroncelli\", \"Baroncini\", \"Barone\", \"Baroni\", \"Baronti\", \"Bartalesi\", \"Bartoletti\", \"Bartoli\", \"Bartolini\", \"Bartoloni\", \"Bartolozzi\", \"Basagni\", \"Basile\", \"Bassi\", \"Batacchi\", \"Battaglia\", \"Battaglini\", \"Bausi\", \"Becagli\", \"Becattini\", \"Becchi\", \"Becucci\", \"Bellandi\", \"Bellesi\", \"Belli\", \"Bellini\", \"Bellucci\", \"Bencini\", \"Benedetti\", \"Benelli\", \"Beni\", \"Benini\", \"Bensi\", \"Benucci\", \"Benvenuti\", \"Berlincioni\", \"Bernacchioni\", \"Bernardi\", \"Bernardini\", \"Berni\", \"Bernini\", \"Bertelli\", \"Berti\", \"Bertini\", \"Bessi\", \"Betti\", \"Bettini\", \"Biagi\", \"Biagini\", \"Biagioni\", \"Biagiotti\", \"Biancalani\", \"Bianchi\", \"Bianchini\", \"Bianco\", \"Biffoli\", \"Bigazzi\", \"Bigi\", \"Biliotti\", \"Billi\", \"Binazzi\", \"Bindi\", \"Bini\", \"Biondi\", \"Bizzarri\", \"Bocci\", \"Bogani\", \"Bolognesi\", \"Bonaiuti\", \"Bonanni\", \"Bonciani\", \"Boncinelli\", \"Bondi\", \"Bonechi\", \"Bongini\", \"Boni\", \"Bonini\", \"Borchi\", \"Boretti\", \"Borghi\", \"Borghini\", \"Borgioli\", \"Borri\", \"Borselli\", \"Boschi\", \"Bottai\", \"Bracci\", \"Braccini\", \"Brandi\", \"Braschi\", \"Bravi\", \"Brazzini\", \"Breschi\", \"Brilli\", \"Brizzi\", \"Brogelli\", \"Brogi\", \"Brogioni\", \"Brunelli\", \"Brunetti\", \"Bruni\", \"Bruno\", \"Brunori\", \"Bruschi\", \"Bucci\", \"Bucciarelli\", \"Buccioni\", \"Bucelli\", \"Bulli\", \"Burberi\", \"Burchi\", \"Burgassi\", \"Burroni\", \"Bussotti\", \"Buti\", \"Caciolli\", \"Caiani\", \"Calabrese\", \"Calamai\", \"Calamandrei\", \"Caldini\", \"Calo'\", \"Calonaci\", \"Calosi\", \"Calvelli\", \"Cambi\", \"Camiciottoli\", \"Cammelli\", \"Cammilli\", \"Campolmi\", \"Cantini\", \"Capanni\", \"Capecchi\", \"Caponi\", \"Cappelletti\", \"Cappelli\", \"Cappellini\", \"Cappugi\", \"Capretti\", \"Caputo\", \"Carbone\", \"Carboni\", \"Cardini\", \"Carlesi\", \"Carletti\", \"Carli\", \"Caroti\", \"Carotti\", \"Carrai\", \"Carraresi\", \"Carta\", \"Caruso\", \"Casalini\", \"Casati\", \"Caselli\", \"Casini\", \"Castagnoli\", \"Castellani\", \"Castelli\", \"Castellucci\", \"Catalano\", \"Catarzi\", \"Catelani\", \"Cavaciocchi\", \"Cavallaro\", \"Cavallini\", \"Cavicchi\", \"Cavini\", \"Ceccarelli\", \"Ceccatelli\", \"Ceccherelli\", \"Ceccherini\", \"Cecchi\", \"Cecchini\", \"Cecconi\", \"Cei\", \"Cellai\", \"Celli\", \"Cellini\", \"Cencetti\", \"Ceni\", \"Cenni\", \"Cerbai\", \"Cesari\", \"Ceseri\", \"Checcacci\", \"Checchi\", \"Checcucci\", \"Cheli\", \"Chellini\", \"Chen\", \"Cheng\", \"Cherici\", \"Cherubini\", \"Chiaramonti\", \"Chiarantini\", \"Chiarelli\", \"Chiari\", \"Chiarini\", \"Chiarugi\", \"Chiavacci\", \"Chiesi\", \"Chimenti\", \"Chini\", \"Chirici\", \"Chiti\", \"Ciabatti\", \"Ciampi\", \"Cianchi\", \"Cianfanelli\", \"Cianferoni\", \"Ciani\", \"Ciapetti\", \"Ciappi\", \"Ciardi\", \"Ciatti\", \"Cicali\", \"Ciccone\", \"Cinelli\", \"Cini\", \"Ciobanu\", \"Ciolli\", \"Cioni\", \"Cipriani\", \"Cirillo\", \"Cirri\", \"Ciucchi\", \"Ciuffi\", \"Ciulli\", \"Ciullini\", \"Clemente\", \"Cocchi\", \"Cognome\", \"Coli\", \"Collini\", \"Colombo\", \"Colzi\", \"Comparini\", \"Conforti\", \"Consigli\", \"Conte\", \"Conti\", \"Contini\", \"Coppini\", \"Coppola\", \"Corsi\", \"Corsini\", \"Corti\", \"Cortini\", \"Cosi\", \"Costa\", \"Costantini\", \"Costantino\", \"Cozzi\", \"Cresci\", \"Crescioli\", \"Cresti\", \"Crini\", \"Curradi\", \"D'Agostino\", \"D'Alessandro\", \"D'Amico\", \"D'Angelo\", \"Daddi\", \"Dainelli\", \"Dallai\", \"Danti\", \"Davitti\", \"De Angelis\", \"De Luca\", \"De Marco\", \"De Rosa\", \"De Santis\", \"De Simone\", \"De Vita\", \"Degl'Innocenti\", \"Degli Innocenti\", \"Dei\", \"Del Lungo\", \"Del Re\", \"Di Marco\", \"Di Stefano\", \"Dini\", \"Diop\", \"Dobre\", \"Dolfi\", \"Donati\", \"Dondoli\", \"Dong\", \"Donnini\", \"Ducci\", \"Dumitru\", \"Ermini\", \"Esposito\", \"Evangelisti\", \"Fabbri\", \"Fabbrini\", \"Fabbrizzi\", \"Fabbroni\", \"Fabbrucci\", \"Fabiani\", \"Facchini\", \"Faggi\", \"Fagioli\", \"Failli\", \"Faini\", \"Falciani\", \"Falcini\", \"Falcone\", \"Fallani\", \"Falorni\", \"Falsini\", \"Falugiani\", \"Fancelli\", \"Fanelli\", \"Fanetti\", \"Fanfani\", \"Fani\", \"Fantappie'\", \"Fantechi\", \"Fanti\", \"Fantini\", \"Fantoni\", \"Farina\", \"Fattori\", \"Favilli\", \"Fedi\", \"Fei\", \"Ferrante\", \"Ferrara\", \"Ferrari\", \"Ferraro\", \"Ferretti\", \"Ferri\", \"Ferrini\", \"Ferroni\", \"Fiaschi\", \"Fibbi\", \"Fiesoli\", \"Filippi\", \"Filippini\", \"Fini\", \"Fioravanti\", \"Fiore\", \"Fiorentini\", \"Fiorini\", \"Fissi\", \"Focardi\", \"Foggi\", \"Fontana\", \"Fontanelli\", \"Fontani\", \"Forconi\", \"Formigli\", \"Forte\", \"Forti\", \"Fortini\", \"Fossati\", \"Fossi\", \"Francalanci\", \"Franceschi\", \"Franceschini\", \"Franchi\", \"Franchini\", \"Franci\", \"Francini\", \"Francioni\", \"Franco\", \"Frassineti\", \"Frati\", \"Fratini\", \"Frilli\", \"Frizzi\", \"Frosali\", \"Frosini\", \"Frullini\", \"Fusco\", \"Fusi\", \"Gabbrielli\", \"Gabellini\", \"Gagliardi\", \"Galanti\", \"Galardi\", \"Galeotti\", \"Galletti\", \"Galli\", \"Gallo\", \"Gallori\", \"Gambacciani\", \"Gargani\", \"Garofalo\", \"Garuglieri\", \"Gashi\", \"Gasperini\", \"Gatti\", \"Gelli\", \"Gensini\", \"Gentile\", \"Gentili\", \"Geri\", \"Gerini\", \"Gheri\", \"Ghini\", \"Giachetti\", \"Giachi\", \"Giacomelli\", \"Gianassi\", \"Giani\", \"Giannelli\", \"Giannetti\", \"Gianni\", \"Giannini\", \"Giannoni\", \"Giannotti\", \"Giannozzi\", \"Gigli\", \"Giordano\", \"Giorgetti\", \"Giorgi\", \"Giovacchini\", \"Giovannelli\", \"Giovannetti\", \"Giovannini\", \"Giovannoni\", \"Giuliani\", \"Giunti\", \"Giuntini\", \"Giusti\", \"Gonnelli\", \"Goretti\", \"Gori\", \"Gradi\", \"Gramigni\", \"Grassi\", \"Grasso\", \"Graziani\", \"Grazzini\", \"Greco\", \"Grifoni\", \"Grillo\", \"Grimaldi\", \"Grossi\", \"Gualtieri\", \"Guarducci\", \"Guarino\", \"Guarnieri\", \"Guasti\", \"Guerra\", \"Guerri\", \"Guerrini\", \"Guidi\", \"Guidotti\", \"He\", \"Hoxha\", \"Hu\", \"Huang\", \"Iandelli\", \"Ignesti\", \"Innocenti\", \"Jin\", \"La Rosa\", \"Lai\", \"Landi\", \"Landini\", \"Lanini\", \"Lapi\", \"Lapini\", \"Lari\", \"Lascialfari\", \"Lastrucci\", \"Latini\", \"Lazzeri\", \"Lazzerini\", \"Lelli\", \"Lenzi\", \"Leonardi\", \"Leoncini\", \"Leone\", \"Leoni\", \"Lepri\", \"Li\", \"Liao\", \"Lin\", \"Linari\", \"Lippi\", \"Lisi\", \"Livi\", \"Lombardi\", \"Lombardini\", \"Lombardo\", \"Longo\", \"Lopez\", \"Lorenzi\", \"Lorenzini\", \"Lorini\", \"Lotti\", \"Lu\", \"Lucchesi\", \"Lucherini\", \"Lunghi\", \"Lupi\", \"Madiai\", \"Maestrini\", \"Maffei\", \"Maggi\", \"Maggini\", \"Magherini\", \"Magini\", \"Magnani\", \"Magnelli\", \"Magni\", \"Magnolfi\", \"Magrini\", \"Malavolti\", \"Malevolti\", \"Manca\", \"Mancini\", \"Manetti\", \"Manfredi\", \"Mangani\", \"Mannelli\", \"Manni\", \"Mannini\", \"Mannucci\", \"Manuelli\", \"Manzini\", \"Marcelli\", \"Marchese\", \"Marchetti\", \"Marchi\", \"Marchiani\", \"Marchionni\", \"Marconi\", \"Marcucci\", \"Margheri\", \"Mari\", \"Mariani\", \"Marilli\", \"Marinai\", \"Marinari\", \"Marinelli\", \"Marini\", \"Marino\", \"Mariotti\", \"Marsili\", \"Martelli\", \"Martinelli\", \"Martini\", \"Martino\", \"Marzi\", \"Masi\", \"Masini\", \"Masoni\", \"Massai\", \"Materassi\", \"Mattei\", \"Matteini\", \"Matteucci\", \"Matteuzzi\", \"Mattioli\", \"Mattolini\", \"Matucci\", \"Mauro\", \"Mazzanti\", \"Mazzei\", \"Mazzetti\", \"Mazzi\", \"Mazzini\", \"Mazzocchi\", \"Mazzoli\", \"Mazzoni\", \"Mazzuoli\", \"Meacci\", \"Mecocci\", \"Meini\", \"Melani\", \"Mele\", \"Meli\", \"Mengoni\", \"Menichetti\", \"Meoni\", \"Merlini\", \"Messeri\", \"Messina\", \"Meucci\", \"Miccinesi\", \"Miceli\", \"Micheli\", \"Michelini\", \"Michelozzi\", \"Migliori\", \"Migliorini\", \"Milani\", \"Miniati\", \"Misuri\", \"Monaco\", \"Montagnani\", \"Montagni\", \"Montanari\", \"Montelatici\", \"Monti\", \"Montigiani\", \"Montini\", \"Morandi\", \"Morandini\", \"Morelli\", \"Moretti\", \"Morganti\", \"Mori\", \"Morini\", \"Moroni\", \"Morozzi\", \"Mugnai\", \"Mugnaini\", \"Mustafa\", \"Naldi\", \"Naldini\", \"Nannelli\", \"Nanni\", \"Nannini\", \"Nannucci\", \"Nardi\", \"Nardini\", \"Nardoni\", \"Natali\", \"Ndiaye\", \"Nencetti\", \"Nencini\", \"Nencioni\", \"Neri\", \"Nesi\", \"Nesti\", \"Niccolai\", \"Niccoli\", \"Niccolini\", \"Nigi\", \"Nistri\", \"Nocentini\", \"Noferini\", \"Novelli\", \"Nucci\", \"Nuti\", \"Nutini\", \"Oliva\", \"Olivieri\", \"Olmi\", \"Orlandi\", \"Orlandini\", \"Orlando\", \"Orsini\", \"Ortolani\", \"Ottanelli\", \"Pacciani\", \"Pace\", \"Paci\", \"Pacini\", \"Pagani\", \"Pagano\", \"Paggetti\", \"Pagliai\", \"Pagni\", \"Pagnini\", \"Paladini\", \"Palagi\", \"Palchetti\", \"Palloni\", \"Palmieri\", \"Palumbo\", \"Pampaloni\", \"Pancani\", \"Pandolfi\", \"Pandolfini\", \"Panerai\", \"Panichi\", \"Paoletti\", \"Paoli\", \"Paolini\", \"Papi\", \"Papini\", \"Papucci\", \"Parenti\", \"Parigi\", \"Parisi\", \"Parri\", \"Parrini\", \"Pasquini\", \"Passeri\", \"Pecchioli\", \"Pecorini\", \"Pellegrini\", \"Pepi\", \"Perini\", \"Perrone\", \"Peruzzi\", \"Pesci\", \"Pestelli\", \"Petri\", \"Petrini\", \"Petrucci\", \"Pettini\", \"Pezzati\", \"Pezzatini\", \"Piani\", \"Piazza\", \"Piazzesi\", \"Piazzini\", \"Piccardi\", \"Picchi\", \"Piccini\", \"Piccioli\", \"Pieraccini\", \"Pieraccioni\", \"Pieralli\", \"Pierattini\", \"Pieri\", \"Pierini\", \"Pieroni\", \"Pietrini\", \"Pini\", \"Pinna\", \"Pinto\", \"Pinzani\", \"Pinzauti\", \"Piras\", \"Pisani\", \"Pistolesi\", \"Poggesi\", \"Poggi\", \"Poggiali\", \"Poggiolini\", \"Poli\", \"Pollastri\", \"Porciani\", \"Pozzi\", \"Pratellesi\", \"Pratesi\", \"Prosperi\", \"Pruneti\", \"Pucci\", \"Puccini\", \"Puccioni\", \"Pugi\", \"Pugliese\", \"Puliti\", \"Querci\", \"Quercioli\", \"Raddi\", \"Radu\", \"Raffaelli\", \"Ragazzini\", \"Ranfagni\", \"Ranieri\", \"Rastrelli\", \"Raugei\", \"Raveggi\", \"Renai\", \"Renzi\", \"Rettori\", \"Ricci\", \"Ricciardi\", \"Ridi\", \"Ridolfi\", \"Rigacci\", \"Righi\", \"Righini\", \"Rinaldi\", \"Risaliti\", \"Ristori\", \"Rizzo\", \"Rocchi\", \"Rocchini\", \"Rogai\", \"Romagnoli\", \"Romanelli\", \"Romani\", \"Romano\", \"Romei\", \"Romeo\", \"Romiti\", \"Romoli\", \"Romolini\", \"Rontini\", \"Rosati\", \"Roselli\", \"Rosi\", \"Rossetti\", \"Rossi\", \"Rossini\", \"Rovai\", \"Ruggeri\", \"Ruggiero\", \"Russo\", \"Sabatini\", \"Saccardi\", \"Sacchetti\", \"Sacchi\", \"Sacco\", \"Salerno\", \"Salimbeni\", \"Salucci\", \"Salvadori\", \"Salvestrini\", \"Salvi\", \"Salvini\", \"Sanesi\", \"Sani\", \"Sanna\", \"Santi\", \"Santini\", \"Santoni\", \"Santoro\", \"Santucci\", \"Sardi\", \"Sarri\", \"Sarti\", \"Sassi\", \"Sbolci\", \"Scali\", \"Scarpelli\", \"Scarselli\", \"Scopetani\", \"Secci\", \"Selvi\", \"Senatori\", \"Senesi\", \"Serafini\", \"Sereni\", \"Serra\", \"Sestini\", \"Sguanci\", \"Sieni\", \"Signorini\", \"Silvestri\", \"Simoncini\", \"Simonetti\", \"Simoni\", \"Singh\", \"Sodi\", \"Soldi\", \"Somigli\", \"Sorbi\", \"Sorelli\", \"Sorrentino\", \"Sottili\", \"Spina\", \"Spinelli\", \"Staccioli\", \"Staderini\", \"Stefanelli\", \"Stefani\", \"Stefanini\", \"Stella\", \"Susini\", \"Tacchi\", \"Tacconi\", \"Taddei\", \"Tagliaferri\", \"Tamburini\", \"Tanganelli\", \"Tani\", \"Tanini\", \"Tapinassi\", \"Tarchi\", \"Tarchiani\", \"Targioni\", \"Tassi\", \"Tassini\", \"Tempesti\", \"Terzani\", \"Tesi\", \"Testa\", \"Testi\", \"Tilli\", \"Tinti\", \"Tirinnanzi\", \"Toccafondi\", \"Tofanari\", \"Tofani\", \"Tognaccini\", \"Tonelli\", \"Tonini\", \"Torelli\", \"Torrini\", \"Tosi\", \"Toti\", \"Tozzi\", \"Trambusti\", \"Trapani\", \"Tucci\", \"Turchi\", \"Ugolini\", \"Ulivi\", \"Valente\", \"Valenti\", \"Valentini\", \"Vangelisti\", \"Vanni\", \"Vannini\", \"Vannoni\", \"Vannozzi\", \"Vannucchi\", \"Vannucci\", \"Ventura\", \"Venturi\", \"Venturini\", \"Vestri\", \"Vettori\", \"Vichi\", \"Viciani\", \"Vieri\", \"Vigiani\", \"Vignoli\", \"Vignolini\", \"Vignozzi\", \"Villani\", \"Vinci\", \"Visani\", \"Vitale\", \"Vitali\", \"Viti\", \"Viviani\", \"Vivoli\", \"Volpe\", \"Volpi\", \"Wang\", \"Wu\", \"Xu\", \"Yang\", \"Ye\", \"Zagli\", \"Zani\", \"Zanieri\", \"Zanobini\", \"Zecchi\", \"Zetti\", \"Zhang\", \"Zheng\", \"Zhou\", \"Zhu\", \"Zingoni\", \"Zini\", \"Zoppi\"],\n            // http://www.voornamelijk.nl/meest-voorkomende-achternamen-in-nederland-en-amsterdam/\n            \"nl\":[\"Albers\", \"Alblas\", \"Appelman\", \"Baars\", \"Baas\", \"Bakker\", \"Blank\", \"Bleeker\", \"Blok\", \"Blom\", \"Boer\", \"Boers\", \"Boldewijn\", \"Boon\", \"Boot\", \"Bos\", \"Bosch\", \"Bosma\", \"Bosman\", \"Bouma\", \"Bouman\", \"Bouwman\", \"Brands\", \"Brouwer\", \"Burger\", \"Buijs\", \"Buitenhuis\", \"Ceder\", \"Cohen\", \"Dekker\", \"Dekkers\", \"Dijkman\", \"Dijkstra\", \"Driessen\", \"Drost\", \"Engel\", \"Evers\", \"Faber\", \"Franke\", \"Gerritsen\", \"Goedhart\", \"Goossens\", \"Groen\", \"Groenenberg\", \"Groot\", \"Haan\", \"Hart\", \"Heemskerk\", \"Hendriks\", \"Hermans\", \"Hoekstra\", \"Hofman\", \"Hopman\", \"Huisman\", \"Jacobs\", \"Jansen\", \"Janssen\", \"Jonker\", \"Jaspers\", \"Keijzer\", \"Klaassen\", \"Klein\", \"Koek\", \"Koenders\", \"Kok\", \"Kool\", \"Koopman\", \"Koopmans\", \"Koning\", \"Koster\", \"Kramer\", \"Kroon\", \"Kuijpers\", \"Kuiper\", \"Kuipers\", \"Kurt\", \"Koster\", \"Kwakman\", \"Los\", \"Lubbers\", \"Maas\", \"Markus\", \"Martens\", \"Meijer\", \"Mol\", \"Molenaar\", \"Mulder\", \"Nieuwenhuis\", \"Peeters\", \"Peters\", \"Pengel\", \"Pieters\", \"Pool\", \"Post\", \"Postma\", \"Prins\", \"Pronk\", \"Reijnders\", \"Rietveld\", \"Roest\", \"Roos\", \"Sanders\", \"Schaap\", \"Scheffer\", \"Schenk\", \"Schilder\", \"Schipper\", \"Schmidt\", \"Scholten\", \"Schouten\", \"Schut\", \"Schutte\", \"Schuurman\", \"Simons\", \"Smeets\", \"Smit\", \"Smits\", \"Snel\", \"Swinkels\", \"Tas\", \"Terpstra\", \"Timmermans\", \"Tol\", \"Tromp\", \"Troost\", \"Valk\", \"Veenstra\", \"Veldkamp\", \"Verbeek\", \"Verheul\", \"Verhoeven\", \"Vermeer\", \"Vermeulen\", \"Verweij\", \"Vink\", \"Visser\", \"Voorn\", \"Vos\", \"Wagenaar\", \"Wiersema\", \"Willems\", \"Willemsen\", \"Witteveen\", \"Wolff\", \"Wolters\", \"Zijlstra\", \"Zwart\", \"de Beer\", \"de Boer\", \"de Bruijn\", \"de Bruin\", \"de Graaf\", \"de Groot\", \"de Haan\", \"de Haas\", \"de Jager\", \"de Jong\", \"de Jonge\", \"de Koning\", \"de Lange\", \"de Leeuw\", \"de Ridder\", \"de Rooij\", \"de Ruiter\", \"de Vos\", \"de Vries\", \"de Waal\", \"de Wit\", \"de Zwart\", \"van Beek\", \"van Boven\", \"van Dam\", \"van Dijk\", \"van Dongen\", \"van Doorn\", \"van Egmond\", \"van Eijk\", \"van Es\", \"van Gelder\", \"van Gelderen\", \"van Houten\", \"van Hulst\", \"van Kempen\", \"van Kesteren\", \"van Leeuwen\", \"van Loon\", \"van Mill\", \"van Noord\", \"van Ommen\", \"van Ommeren\", \"van Oosten\", \"van Oostveen\", \"van Rijn\", \"van Schaik\", \"van Veen\", \"van Vliet\", \"van Wijk\", \"van Wijngaarden\", \"van den Poel\", \"van de Pol\", \"van den Ploeg\", \"van de Ven\", \"van den Berg\", \"van den Bosch\", \"van den Brink\", \"van den Broek\", \"van den Heuvel\", \"van der Heijden\", \"van der Horst\", \"van der Hulst\", \"van der Kroon\", \"van der Laan\", \"van der Linden\", \"van der Meer\", \"van der Meij\", \"van der Meulen\", \"van der Molen\", \"van der Sluis\", \"van der Spek\", \"van der Veen\", \"van der Velde\", \"van der Velden\", \"van der Vliet\", \"van der Wal\"],\n            // https://surnames.behindthename.com/top/lists/england-wales/1991\n            \"uk\":[\"Smith\",\"Jones\",\"Williams\",\"Taylor\",\"Brown\",\"Davies\",\"Evans\",\"Wilson\",\"Thomas\",\"Johnson\",\"Roberts\",\"Robinson\",\"Thompson\",\"Wright\",\"Walker\",\"White\",\"Edwards\",\"Hughes\",\"Green\",\"Hall\",\"Lewis\",\"Harris\",\"Clarke\",\"Patel\",\"Jackson\",\"Wood\",\"Turner\",\"Martin\",\"Cooper\",\"Hill\",\"Ward\",\"Morris\",\"Moore\",\"Clark\",\"Lee\",\"King\",\"Baker\",\"Harrison\",\"Morgan\",\"Allen\",\"James\",\"Scott\",\"Phillips\",\"Watson\",\"Davis\",\"Parker\",\"Price\",\"Bennett\",\"Young\",\"Griffiths\",\"Mitchell\",\"Kelly\",\"Cook\",\"Carter\",\"Richardson\",\"Bailey\",\"Collins\",\"Bell\",\"Shaw\",\"Murphy\",\"Miller\",\"Cox\",\"Richards\",\"Khan\",\"Marshall\",\"Anderson\",\"Simpson\",\"Ellis\",\"Adams\",\"Singh\",\"Begum\",\"Wilkinson\",\"Foster\",\"Chapman\",\"Powell\",\"Webb\",\"Rogers\",\"Gray\",\"Mason\",\"Ali\",\"Hunt\",\"Hussain\",\"Campbell\",\"Matthews\",\"Owen\",\"Palmer\",\"Holmes\",\"Mills\",\"Barnes\",\"Knight\",\"Lloyd\",\"Butler\",\"Russell\",\"Barker\",\"Fisher\",\"Stevens\",\"Jenkins\",\"Murray\",\"Dixon\",\"Harvey\",\"Graham\",\"Pearson\",\"Ahmed\",\"Fletcher\",\"Walsh\",\"Kaur\",\"Gibson\",\"Howard\",\"Andrews\",\"Stewart\",\"Elliott\",\"Reynolds\",\"Saunders\",\"Payne\",\"Fox\",\"Ford\",\"Pearce\",\"Day\",\"Brooks\",\"West\",\"Lawrence\",\"Cole\",\"Atkinson\",\"Bradley\",\"Spencer\",\"Gill\",\"Dawson\",\"Ball\",\"Burton\",\"O'brien\",\"Watts\",\"Rose\",\"Booth\",\"Perry\",\"Ryan\",\"Grant\",\"Wells\",\"Armstrong\",\"Francis\",\"Rees\",\"Hayes\",\"Hart\",\"Hudson\",\"Newman\",\"Barrett\",\"Webster\",\"Hunter\",\"Gregory\",\"Carr\",\"Lowe\",\"Page\",\"Marsh\",\"Riley\",\"Dunn\",\"Woods\",\"Parsons\",\"Berry\",\"Stone\",\"Reid\",\"Holland\",\"Hawkins\",\"Harding\",\"Porter\",\"Robertson\",\"Newton\",\"Oliver\",\"Reed\",\"Kennedy\",\"Williamson\",\"Bird\",\"Gardner\",\"Shah\",\"Dean\",\"Lane\",\"Cooke\",\"Bates\",\"Henderson\",\"Parry\",\"Burgess\",\"Bishop\",\"Walton\",\"Burns\",\"Nicholson\",\"Shepherd\",\"Ross\",\"Cross\",\"Long\",\"Freeman\",\"Warren\",\"Nicholls\",\"Hamilton\",\"Byrne\",\"Sutton\",\"Mcdonald\",\"Yates\",\"Hodgson\",\"Robson\",\"Curtis\",\"Hopkins\",\"O'connor\",\"Harper\",\"Coleman\",\"Watkins\",\"Moss\",\"Mccarthy\",\"Chambers\",\"O'neill\",\"Griffin\",\"Sharp\",\"Hardy\",\"Wheeler\",\"Potter\",\"Osborne\",\"Johnston\",\"Gordon\",\"Doyle\",\"Wallace\",\"George\",\"Jordan\",\"Hutchinson\",\"Rowe\",\"Burke\",\"May\",\"Pritchard\",\"Gilbert\",\"Willis\",\"Higgins\",\"Read\",\"Miles\",\"Stevenson\",\"Stephenson\",\"Hammond\",\"Arnold\",\"Buckley\",\"Walters\",\"Hewitt\",\"Barber\",\"Nelson\",\"Slater\",\"Austin\",\"Sullivan\",\"Whitehead\",\"Mann\",\"Frost\",\"Lambert\",\"Stephens\",\"Blake\",\"Akhtar\",\"Lynch\",\"Goodwin\",\"Barton\",\"Woodward\",\"Thomson\",\"Cunningham\",\"Quinn\",\"Barnett\",\"Baxter\",\"Bibi\",\"Clayton\",\"Nash\",\"Greenwood\",\"Jennings\",\"Holt\",\"Kemp\",\"Poole\",\"Gallagher\",\"Bond\",\"Stokes\",\"Tucker\",\"Davidson\",\"Fowler\",\"Heath\",\"Norman\",\"Middleton\",\"Lawson\",\"Banks\",\"French\",\"Stanley\",\"Jarvis\",\"Gibbs\",\"Ferguson\",\"Hayward\",\"Carroll\",\"Douglas\",\"Dickinson\",\"Todd\",\"Barlow\",\"Peters\",\"Lucas\",\"Knowles\",\"Hartley\",\"Miah\",\"Simmons\",\"Morton\",\"Alexander\",\"Field\",\"Morrison\",\"Norris\",\"Townsend\",\"Preston\",\"Hancock\",\"Thornton\",\"Baldwin\",\"Burrows\",\"Briggs\",\"Parkinson\",\"Reeves\",\"Macdonald\",\"Lamb\",\"Black\",\"Abbott\",\"Sanders\",\"Thorpe\",\"Holden\",\"Tomlinson\",\"Perkins\",\"Ashton\",\"Rhodes\",\"Fuller\",\"Howe\",\"Bryant\",\"Vaughan\",\"Dale\",\"Davey\",\"Weston\",\"Bartlett\",\"Whittaker\",\"Davison\",\"Kent\",\"Skinner\",\"Birch\",\"Morley\",\"Daniels\",\"Glover\",\"Howell\",\"Cartwright\",\"Pugh\",\"Humphreys\",\"Goddard\",\"Brennan\",\"Wall\",\"Kirby\",\"Bowen\",\"Savage\",\"Bull\",\"Wong\",\"Dobson\",\"Smart\",\"Wilkins\",\"Kirk\",\"Fraser\",\"Duffy\",\"Hicks\",\"Patterson\",\"Bradshaw\",\"Little\",\"Archer\",\"Warner\",\"Waters\",\"O'sullivan\",\"Farrell\",\"Brookes\",\"Atkins\",\"Kay\",\"Dodd\",\"Bentley\",\"Flynn\",\"John\",\"Schofield\",\"Short\",\"Haynes\",\"Wade\",\"Butcher\",\"Henry\",\"Sanderson\",\"Crawford\",\"Sheppard\",\"Bolton\",\"Coates\",\"Giles\",\"Gould\",\"Houghton\",\"Gibbons\",\"Pratt\",\"Manning\",\"Law\",\"Hooper\",\"Noble\",\"Dyer\",\"Rahman\",\"Clements\",\"Moran\",\"Sykes\",\"Chan\",\"Doherty\",\"Connolly\",\"Joyce\",\"Franklin\",\"Hobbs\",\"Coles\",\"Herbert\",\"Steele\",\"Kerr\",\"Leach\",\"Winter\",\"Owens\",\"Duncan\",\"Naylor\",\"Fleming\",\"Horton\",\"Finch\",\"Fitzgerald\",\"Randall\",\"Carpenter\",\"Marsden\",\"Browne\",\"Garner\",\"Pickering\",\"Hale\",\"Dennis\",\"Vincent\",\"Chadwick\",\"Chandler\",\"Sharpe\",\"Nolan\",\"Lyons\",\"Hurst\",\"Collier\",\"Peacock\",\"Howarth\",\"Faulkner\",\"Rice\",\"Pollard\",\"Welch\",\"Norton\",\"Gough\",\"Sinclair\",\"Blackburn\",\"Bryan\",\"Conway\",\"Power\",\"Cameron\",\"Daly\",\"Allan\",\"Hanson\",\"Gardiner\",\"Boyle\",\"Myers\",\"Turnbull\",\"Wallis\",\"Mahmood\",\"Sims\",\"Swift\",\"Iqbal\",\"Pope\",\"Brady\",\"Chamberlain\",\"Rowley\",\"Tyler\",\"Farmer\",\"Metcalfe\",\"Hilton\",\"Godfrey\",\"Holloway\",\"Parkin\",\"Bray\",\"Talbot\",\"Donnelly\",\"Nixon\",\"Charlton\",\"Benson\",\"Whitehouse\",\"Barry\",\"Hope\",\"Lord\",\"North\",\"Storey\",\"Connor\",\"Potts\",\"Bevan\",\"Hargreaves\",\"Mclean\",\"Mistry\",\"Bruce\",\"Howells\",\"Hyde\",\"Parkes\",\"Wyatt\",\"Fry\",\"Lees\",\"O'donnell\",\"Craig\",\"Forster\",\"Mckenzie\",\"Humphries\",\"Mellor\",\"Carey\",\"Ingram\",\"Summers\",\"Leonard\"],\n            // https://surnames.behindthename.com/top/lists/germany/2017\n            \"de\": [\"Müller\",\"Schmidt\",\"Schneider\",\"Fischer\",\"Weber\",\"Meyer\",\"Wagner\",\"Becker\",\"Schulz\",\"Hoffmann\",\"Schäfer\",\"Koch\",\"Bauer\",\"Richter\",\"Klein\",\"Wolf\",\"Schröder\",\"Neumann\",\"Schwarz\",\"Zimmermann\",\"Braun\",\"Krüger\",\"Hofmann\",\"Hartmann\",\"Lange\",\"Schmitt\",\"Werner\",\"Schmitz\",\"Krause\",\"Meier\",\"Lehmann\",\"Schmid\",\"Schulze\",\"Maier\",\"Köhler\",\"Herrmann\",\"König\",\"Walter\",\"Mayer\",\"Huber\",\"Kaiser\",\"Fuchs\",\"Peters\",\"Lang\",\"Scholz\",\"Möller\",\"Weiß\",\"Jung\",\"Hahn\",\"Schubert\",\"Vogel\",\"Friedrich\",\"Keller\",\"Günther\",\"Frank\",\"Berger\",\"Winkler\",\"Roth\",\"Beck\",\"Lorenz\",\"Baumann\",\"Franke\",\"Albrecht\",\"Schuster\",\"Simon\",\"Ludwig\",\"Böhm\",\"Winter\",\"Kraus\",\"Martin\",\"Schumacher\",\"Krämer\",\"Vogt\",\"Stein\",\"Jäger\",\"Otto\",\"Sommer\",\"Groß\",\"Seidel\",\"Heinrich\",\"Brandt\",\"Haas\",\"Schreiber\",\"Graf\",\"Schulte\",\"Dietrich\",\"Ziegler\",\"Kuhn\",\"Kühn\",\"Pohl\",\"Engel\",\"Horn\",\"Busch\",\"Bergmann\",\"Thomas\",\"Voigt\",\"Sauer\",\"Arnold\",\"Wolff\",\"Pfeiffer\"],\n            // http://www.japantimes.co.jp/life/2009/10/11/lifestyle/japans-top-100-most-common-family-names/\n            \"jp\": [\"Sato\",\"Suzuki\",\"Takahashi\",\"Tanaka\",\"Watanabe\",\"Ito\",\"Yamamoto\",\"Nakamura\",\"Kobayashi\",\"Kato\",\"Yoshida\",\"Yamada\",\"Sasaki\",\"Yamaguchi\",\"Saito\",\"Matsumoto\",\"Inoue\",\"Kimura\",\"Hayashi\",\"Shimizu\",\"Yamazaki\",\"Mori\",\"Abe\",\"Ikeda\",\"Hashimoto\",\"Yamashita\",\"Ishikawa\",\"Nakajima\",\"Maeda\",\"Fujita\",\"Ogawa\",\"Goto\",\"Okada\",\"Hasegawa\",\"Murakami\",\"Kondo\",\"Ishii\",\"Saito\",\"Sakamoto\",\"Endo\",\"Aoki\",\"Fujii\",\"Nishimura\",\"Fukuda\",\"Ota\",\"Miura\",\"Fujiwara\",\"Okamoto\",\"Matsuda\",\"Nakagawa\",\"Nakano\",\"Harada\",\"Ono\",\"Tamura\",\"Takeuchi\",\"Kaneko\",\"Wada\",\"Nakayama\",\"Ishida\",\"Ueda\",\"Morita\",\"Hara\",\"Shibata\",\"Sakai\",\"Kudo\",\"Yokoyama\",\"Miyazaki\",\"Miyamoto\",\"Uchida\",\"Takagi\",\"Ando\",\"Taniguchi\",\"Ohno\",\"Maruyama\",\"Imai\",\"Takada\",\"Fujimoto\",\"Takeda\",\"Murata\",\"Ueno\",\"Sugiyama\",\"Masuda\",\"Sugawara\",\"Hirano\",\"Kojima\",\"Otsuka\",\"Chiba\",\"Kubo\",\"Matsui\",\"Iwasaki\",\"Sakurai\",\"Kinoshita\",\"Noguchi\",\"Matsuo\",\"Nomura\",\"Kikuchi\",\"Sano\",\"Onishi\",\"Sugimoto\",\"Arai\"],\n            // http://www.lowchensaustralia.com/names/popular-spanish-names.htm\n            \"es\": [\"Garcia\",\"Fernandez\",\"Lopez\",\"Martinez\",\"Gonzalez\",\"Rodriguez\",\"Sanchez\",\"Perez\",\"Martin\",\"Gomez\",\"Ruiz\",\"Diaz\",\"Hernandez\",\"Alvarez\",\"Jimenez\",\"Moreno\",\"Munoz\",\"Alonso\",\"Romero\",\"Navarro\",\"Gutierrez\",\"Torres\",\"Dominguez\",\"Gil\",\"Vazquez\",\"Blanco\",\"Serrano\",\"Ramos\",\"Castro\",\"Suarez\",\"Sanz\",\"Rubio\",\"Ortega\",\"Molina\",\"Delgado\",\"Ortiz\",\"Morales\",\"Ramirez\",\"Marin\",\"Iglesias\",\"Santos\",\"Castillo\",\"Garrido\",\"Calvo\",\"Pena\",\"Cruz\",\"Cano\",\"Nunez\",\"Prieto\",\"Diez\",\"Lozano\",\"Vidal\",\"Pascual\",\"Ferrer\",\"Medina\",\"Vega\",\"Leon\",\"Herrero\",\"Vicente\",\"Mendez\",\"Guerrero\",\"Fuentes\",\"Campos\",\"Nieto\",\"Cortes\",\"Caballero\",\"Ibanez\",\"Lorenzo\",\"Pastor\",\"Gimenez\",\"Saez\",\"Soler\",\"Marquez\",\"Carrasco\",\"Herrera\",\"Montero\",\"Arias\",\"Crespo\",\"Flores\",\"Andres\",\"Aguilar\",\"Hidalgo\",\"Cabrera\",\"Mora\",\"Duran\",\"Velasco\",\"Rey\",\"Pardo\",\"Roman\",\"Vila\",\"Bravo\",\"Merino\",\"Moya\",\"Soto\",\"Izquierdo\",\"Reyes\",\"Redondo\",\"Marcos\",\"Carmona\",\"Menendez\"],\n            // Data taken from https://fr.wikipedia.org/wiki/Liste_des_noms_de_famille_les_plus_courants_en_France\n            \"fr\": [\"Martin\",\"Bernard\",\"Thomas\",\"Petit\",\"Robert\",\"Richard\",\"Durand\",\"Dubois\",\"Moreau\",\"Laurent\",\"Simon\",\"Michel\",\"Lefèvre\",\"Leroy\",\"Roux\",\"David\",\"Bertrand\",\"Morel\",\"Fournier\",\"Girard\",\"Bonnet\",\"Dupont\",\"Lambert\",\"Fontaine\",\"Rousseau\",\"Vincent\",\"Müller\",\"Lefèvre\",\"Faure\",\"André\",\"Mercier\",\"Blanc\",\"Guérin\",\"Boyer\",\"Garnier\",\"Chevalier\",\"François\",\"Legrand\",\"Gauthier\",\"Garcia\",\"Perrin\",\"Robin\",\"Clément\",\"Morin\",\"Nicolas\",\"Henry\",\"Roussel\",\"Matthieu\",\"Gautier\",\"Masson\",\"Marchand\",\"Duval\",\"Denis\",\"Dumont\",\"Marie\",\"Lemaire\",\"Noël\",\"Meyer\",\"Dufour\",\"Meunier\",\"Brun\",\"Blanchard\",\"Giraud\",\"Joly\",\"Rivière\",\"Lucas\",\"Brunet\",\"Gaillard\",\"Barbier\",\"Arnaud\",\"Martínez\",\"Gérard\",\"Roche\",\"Renard\",\"Schmitt\",\"Roy\",\"Leroux\",\"Colin\",\"Vidal\",\"Caron\",\"Picard\",\"Roger\",\"Fabre\",\"Aubert\",\"Lemoine\",\"Renaud\",\"Dumas\",\"Lacroix\",\"Olivier\",\"Philippe\",\"Bourgeois\",\"Pierre\",\"Benoît\",\"Rey\",\"Leclerc\",\"Payet\",\"Rolland\",\"Leclercq\",\"Guillaume\",\"Lecomte\",\"López\",\"Jean\",\"Dupuy\",\"Guillot\",\"Hubert\",\"Berger\",\"Carpentier\",\"Sánchez\",\"Dupuis\",\"Moulin\",\"Louis\",\"Deschamps\",\"Huet\",\"Vasseur\",\"Perez\",\"Boucher\",\"Fleury\",\"Royer\",\"Klein\",\"Jacquet\",\"Adam\",\"Paris\",\"Poirier\",\"Marty\",\"Aubry\",\"Guyot\",\"Carré\",\"Charles\",\"Renault\",\"Charpentier\",\"Ménard\",\"Maillard\",\"Baron\",\"Bertin\",\"Bailly\",\"Hervé\",\"Schneider\",\"Fernández\",\"Le GallGall\",\"Collet\",\"Léger\",\"Bouvier\",\"Julien\",\"Prévost\",\"Millet\",\"Perrot\",\"Daniel\",\"Le RouxRoux\",\"Cousin\",\"Germain\",\"Breton\",\"Besson\",\"Langlois\",\"Rémi\",\"Le GoffGoff\",\"Pelletier\",\"Lévêque\",\"Perrier\",\"Leblanc\",\"Barré\",\"Lebrun\",\"Marchal\",\"Weber\",\"Mallet\",\"Hamon\",\"Boulanger\",\"Jacob\",\"Monnier\",\"Michaud\",\"Rodríguez\",\"Guichard\",\"Gillet\",\"Étienne\",\"Grondin\",\"Poulain\",\"Tessier\",\"Chevallier\",\"Collin\",\"Chauvin\",\"Da SilvaSilva\",\"Bouchet\",\"Gay\",\"Lemaître\",\"Bénard\",\"Maréchal\",\"Humbert\",\"Reynaud\",\"Antoine\",\"Hoarau\",\"Perret\",\"Barthélemy\",\"Cordier\",\"Pichon\",\"Lejeune\",\"Gilbert\",\"Lamy\",\"Delaunay\",\"Pasquier\",\"Carlier\",\"LaporteLaporte\"]\n        },\n\n        // Data taken from http://geoportal.statistics.gov.uk/datasets/ons-postcode-directory-latest-centroids\n        postcodeAreas: [{code: 'AB'}, {code: 'AL'}, {code: 'B'}, {code: 'BA'}, {code: 'BB'}, {code: 'BD'}, {code: 'BH'}, {code: 'BL'}, {code: 'BN'}, {code: 'BR'}, {code: 'BS'}, {code: 'BT'}, {code: 'CA'}, {code: 'CB'}, {code: 'CF'}, {code: 'CH'}, {code: 'CM'}, {code: 'CO'}, {code: 'CR'}, {code: 'CT'}, {code: 'CV'}, {code: 'CW'}, {code: 'DA'}, {code: 'DD'}, {code: 'DE'}, {code: 'DG'}, {code: 'DH'}, {code: 'DL'}, {code: 'DN'}, {code: 'DT'}, {code: 'DY'}, {code: 'E'}, {code: 'EC'}, {code: 'EH'}, {code: 'EN'}, {code: 'EX'}, {code: 'FK'}, {code: 'FY'}, {code: 'G'}, {code: 'GL'}, {code: 'GU'}, {code: 'GY'}, {code: 'HA'}, {code: 'HD'}, {code: 'HG'}, {code: 'HP'}, {code: 'HR'}, {code: 'HS'}, {code: 'HU'}, {code: 'HX'}, {code: 'IG'}, {code: 'IM'}, {code: 'IP'}, {code: 'IV'}, {code: 'JE'}, {code: 'KA'}, {code: 'KT'}, {code: 'KW'}, {code: 'KY'}, {code: 'L'}, {code: 'LA'}, {code: 'LD'}, {code: 'LE'}, {code: 'LL'}, {code: 'LN'}, {code: 'LS'}, {code: 'LU'}, {code: 'M'}, {code: 'ME'}, {code: 'MK'}, {code: 'ML'}, {code: 'N'}, {code: 'NE'}, {code: 'NG'}, {code: 'NN'}, {code: 'NP'}, {code: 'NR'}, {code: 'NW'}, {code: 'OL'}, {code: 'OX'}, {code: 'PA'}, {code: 'PE'}, {code: 'PH'}, {code: 'PL'}, {code: 'PO'}, {code: 'PR'}, {code: 'RG'}, {code: 'RH'}, {code: 'RM'}, {code: 'S'}, {code: 'SA'}, {code: 'SE'}, {code: 'SG'}, {code: 'SK'}, {code: 'SL'}, {code: 'SM'}, {code: 'SN'}, {code: 'SO'}, {code: 'SP'}, {code: 'SR'}, {code: 'SS'}, {code: 'ST'}, {code: 'SW'}, {code: 'SY'}, {code: 'TA'}, {code: 'TD'}, {code: 'TF'}, {code: 'TN'}, {code: 'TQ'}, {code: 'TR'}, {code: 'TS'}, {code: 'TW'}, {code: 'UB'}, {code: 'W'}, {code: 'WA'}, {code: 'WC'}, {code: 'WD'}, {code: 'WF'}, {code: 'WN'}, {code: 'WR'}, {code: 'WS'}, {code: 'WV'}, {code: 'YO'}, {code: 'ZE'}],\n\n        // Data taken from https://github.com/umpirsky/country-list/blob/master/data/en_US/country.json\n        countries: [{\"name\":\"Afghanistan\",\"abbreviation\":\"AF\"},{\"name\":\"Åland Islands\",\"abbreviation\":\"AX\"},{\"name\":\"Albania\",\"abbreviation\":\"AL\"},{\"name\":\"Algeria\",\"abbreviation\":\"DZ\"},{\"name\":\"American Samoa\",\"abbreviation\":\"AS\"},{\"name\":\"Andorra\",\"abbreviation\":\"AD\"},{\"name\":\"Angola\",\"abbreviation\":\"AO\"},{\"name\":\"Anguilla\",\"abbreviation\":\"AI\"},{\"name\":\"Antarctica\",\"abbreviation\":\"AQ\"},{\"name\":\"Antigua & Barbuda\",\"abbreviation\":\"AG\"},{\"name\":\"Argentina\",\"abbreviation\":\"AR\"},{\"name\":\"Armenia\",\"abbreviation\":\"AM\"},{\"name\":\"Aruba\",\"abbreviation\":\"AW\"},{\"name\":\"Ascension Island\",\"abbreviation\":\"AC\"},{\"name\":\"Australia\",\"abbreviation\":\"AU\"},{\"name\":\"Austria\",\"abbreviation\":\"AT\"},{\"name\":\"Azerbaijan\",\"abbreviation\":\"AZ\"},{\"name\":\"Bahamas\",\"abbreviation\":\"BS\"},{\"name\":\"Bahrain\",\"abbreviation\":\"BH\"},{\"name\":\"Bangladesh\",\"abbreviation\":\"BD\"},{\"name\":\"Barbados\",\"abbreviation\":\"BB\"},{\"name\":\"Belarus\",\"abbreviation\":\"BY\"},{\"name\":\"Belgium\",\"abbreviation\":\"BE\"},{\"name\":\"Belize\",\"abbreviation\":\"BZ\"},{\"name\":\"Benin\",\"abbreviation\":\"BJ\"},{\"name\":\"Bermuda\",\"abbreviation\":\"BM\"},{\"name\":\"Bhutan\",\"abbreviation\":\"BT\"},{\"name\":\"Bolivia\",\"abbreviation\":\"BO\"},{\"name\":\"Bosnia & Herzegovina\",\"abbreviation\":\"BA\"},{\"name\":\"Botswana\",\"abbreviation\":\"BW\"},{\"name\":\"Brazil\",\"abbreviation\":\"BR\"},{\"name\":\"British Indian Ocean Territory\",\"abbreviation\":\"IO\"},{\"name\":\"British Virgin Islands\",\"abbreviation\":\"VG\"},{\"name\":\"Brunei\",\"abbreviation\":\"BN\"},{\"name\":\"Bulgaria\",\"abbreviation\":\"BG\"},{\"name\":\"Burkina Faso\",\"abbreviation\":\"BF\"},{\"name\":\"Burundi\",\"abbreviation\":\"BI\"},{\"name\":\"Cambodia\",\"abbreviation\":\"KH\"},{\"name\":\"Cameroon\",\"abbreviation\":\"CM\"},{\"name\":\"Canada\",\"abbreviation\":\"CA\"},{\"name\":\"Canary Islands\",\"abbreviation\":\"IC\"},{\"name\":\"Cape Verde\",\"abbreviation\":\"CV\"},{\"name\":\"Caribbean Netherlands\",\"abbreviation\":\"BQ\"},{\"name\":\"Cayman Islands\",\"abbreviation\":\"KY\"},{\"name\":\"Central African Republic\",\"abbreviation\":\"CF\"},{\"name\":\"Ceuta & Melilla\",\"abbreviation\":\"EA\"},{\"name\":\"Chad\",\"abbreviation\":\"TD\"},{\"name\":\"Chile\",\"abbreviation\":\"CL\"},{\"name\":\"China\",\"abbreviation\":\"CN\"},{\"name\":\"Christmas Island\",\"abbreviation\":\"CX\"},{\"name\":\"Cocos (Keeling) Islands\",\"abbreviation\":\"CC\"},{\"name\":\"Colombia\",\"abbreviation\":\"CO\"},{\"name\":\"Comoros\",\"abbreviation\":\"KM\"},{\"name\":\"Congo - Brazzaville\",\"abbreviation\":\"CG\"},{\"name\":\"Congo - Kinshasa\",\"abbreviation\":\"CD\"},{\"name\":\"Cook Islands\",\"abbreviation\":\"CK\"},{\"name\":\"Costa Rica\",\"abbreviation\":\"CR\"},{\"name\":\"Côte d'Ivoire\",\"abbreviation\":\"CI\"},{\"name\":\"Croatia\",\"abbreviation\":\"HR\"},{\"name\":\"Cuba\",\"abbreviation\":\"CU\"},{\"name\":\"Curaçao\",\"abbreviation\":\"CW\"},{\"name\":\"Cyprus\",\"abbreviation\":\"CY\"},{\"name\":\"Czech Republic\",\"abbreviation\":\"CZ\"},{\"name\":\"Denmark\",\"abbreviation\":\"DK\"},{\"name\":\"Diego Garcia\",\"abbreviation\":\"DG\"},{\"name\":\"Djibouti\",\"abbreviation\":\"DJ\"},{\"name\":\"Dominica\",\"abbreviation\":\"DM\"},{\"name\":\"Dominican Republic\",\"abbreviation\":\"DO\"},{\"name\":\"Ecuador\",\"abbreviation\":\"EC\"},{\"name\":\"Egypt\",\"abbreviation\":\"EG\"},{\"name\":\"El Salvador\",\"abbreviation\":\"SV\"},{\"name\":\"Equatorial Guinea\",\"abbreviation\":\"GQ\"},{\"name\":\"Eritrea\",\"abbreviation\":\"ER\"},{\"name\":\"Estonia\",\"abbreviation\":\"EE\"},{\"name\":\"Ethiopia\",\"abbreviation\":\"ET\"},{\"name\":\"Falkland Islands\",\"abbreviation\":\"FK\"},{\"name\":\"Faroe Islands\",\"abbreviation\":\"FO\"},{\"name\":\"Fiji\",\"abbreviation\":\"FJ\"},{\"name\":\"Finland\",\"abbreviation\":\"FI\"},{\"name\":\"France\",\"abbreviation\":\"FR\"},{\"name\":\"French Guiana\",\"abbreviation\":\"GF\"},{\"name\":\"French Polynesia\",\"abbreviation\":\"PF\"},{\"name\":\"French Southern Territories\",\"abbreviation\":\"TF\"},{\"name\":\"Gabon\",\"abbreviation\":\"GA\"},{\"name\":\"Gambia\",\"abbreviation\":\"GM\"},{\"name\":\"Georgia\",\"abbreviation\":\"GE\"},{\"name\":\"Germany\",\"abbreviation\":\"DE\"},{\"name\":\"Ghana\",\"abbreviation\":\"GH\"},{\"name\":\"Gibraltar\",\"abbreviation\":\"GI\"},{\"name\":\"Greece\",\"abbreviation\":\"GR\"},{\"name\":\"Greenland\",\"abbreviation\":\"GL\"},{\"name\":\"Grenada\",\"abbreviation\":\"GD\"},{\"name\":\"Guadeloupe\",\"abbreviation\":\"GP\"},{\"name\":\"Guam\",\"abbreviation\":\"GU\"},{\"name\":\"Guatemala\",\"abbreviation\":\"GT\"},{\"name\":\"Guernsey\",\"abbreviation\":\"GG\"},{\"name\":\"Guinea\",\"abbreviation\":\"GN\"},{\"name\":\"Guinea-Bissau\",\"abbreviation\":\"GW\"},{\"name\":\"Guyana\",\"abbreviation\":\"GY\"},{\"name\":\"Haiti\",\"abbreviation\":\"HT\"},{\"name\":\"Honduras\",\"abbreviation\":\"HN\"},{\"name\":\"Hong Kong SAR China\",\"abbreviation\":\"HK\"},{\"name\":\"Hungary\",\"abbreviation\":\"HU\"},{\"name\":\"Iceland\",\"abbreviation\":\"IS\"},{\"name\":\"India\",\"abbreviation\":\"IN\"},{\"name\":\"Indonesia\",\"abbreviation\":\"ID\"},{\"name\":\"Iran\",\"abbreviation\":\"IR\"},{\"name\":\"Iraq\",\"abbreviation\":\"IQ\"},{\"name\":\"Ireland\",\"abbreviation\":\"IE\"},{\"name\":\"Isle of Man\",\"abbreviation\":\"IM\"},{\"name\":\"Israel\",\"abbreviation\":\"IL\"},{\"name\":\"Italy\",\"abbreviation\":\"IT\"},{\"name\":\"Jamaica\",\"abbreviation\":\"JM\"},{\"name\":\"Japan\",\"abbreviation\":\"JP\"},{\"name\":\"Jersey\",\"abbreviation\":\"JE\"},{\"name\":\"Jordan\",\"abbreviation\":\"JO\"},{\"name\":\"Kazakhstan\",\"abbreviation\":\"KZ\"},{\"name\":\"Kenya\",\"abbreviation\":\"KE\"},{\"name\":\"Kiribati\",\"abbreviation\":\"KI\"},{\"name\":\"Kosovo\",\"abbreviation\":\"XK\"},{\"name\":\"Kuwait\",\"abbreviation\":\"KW\"},{\"name\":\"Kyrgyzstan\",\"abbreviation\":\"KG\"},{\"name\":\"Laos\",\"abbreviation\":\"LA\"},{\"name\":\"Latvia\",\"abbreviation\":\"LV\"},{\"name\":\"Lebanon\",\"abbreviation\":\"LB\"},{\"name\":\"Lesotho\",\"abbreviation\":\"LS\"},{\"name\":\"Liberia\",\"abbreviation\":\"LR\"},{\"name\":\"Libya\",\"abbreviation\":\"LY\"},{\"name\":\"Liechtenstein\",\"abbreviation\":\"LI\"},{\"name\":\"Lithuania\",\"abbreviation\":\"LT\"},{\"name\":\"Luxembourg\",\"abbreviation\":\"LU\"},{\"name\":\"Macau SAR China\",\"abbreviation\":\"MO\"},{\"name\":\"Macedonia\",\"abbreviation\":\"MK\"},{\"name\":\"Madagascar\",\"abbreviation\":\"MG\"},{\"name\":\"Malawi\",\"abbreviation\":\"MW\"},{\"name\":\"Malaysia\",\"abbreviation\":\"MY\"},{\"name\":\"Maldives\",\"abbreviation\":\"MV\"},{\"name\":\"Mali\",\"abbreviation\":\"ML\"},{\"name\":\"Malta\",\"abbreviation\":\"MT\"},{\"name\":\"Marshall Islands\",\"abbreviation\":\"MH\"},{\"name\":\"Martinique\",\"abbreviation\":\"MQ\"},{\"name\":\"Mauritania\",\"abbreviation\":\"MR\"},{\"name\":\"Mauritius\",\"abbreviation\":\"MU\"},{\"name\":\"Mayotte\",\"abbreviation\":\"YT\"},{\"name\":\"Mexico\",\"abbreviation\":\"MX\"},{\"name\":\"Micronesia\",\"abbreviation\":\"FM\"},{\"name\":\"Moldova\",\"abbreviation\":\"MD\"},{\"name\":\"Monaco\",\"abbreviation\":\"MC\"},{\"name\":\"Mongolia\",\"abbreviation\":\"MN\"},{\"name\":\"Montenegro\",\"abbreviation\":\"ME\"},{\"name\":\"Montserrat\",\"abbreviation\":\"MS\"},{\"name\":\"Morocco\",\"abbreviation\":\"MA\"},{\"name\":\"Mozambique\",\"abbreviation\":\"MZ\"},{\"name\":\"Myanmar (Burma)\",\"abbreviation\":\"MM\"},{\"name\":\"Namibia\",\"abbreviation\":\"NA\"},{\"name\":\"Nauru\",\"abbreviation\":\"NR\"},{\"name\":\"Nepal\",\"abbreviation\":\"NP\"},{\"name\":\"Netherlands\",\"abbreviation\":\"NL\"},{\"name\":\"New Caledonia\",\"abbreviation\":\"NC\"},{\"name\":\"New Zealand\",\"abbreviation\":\"NZ\"},{\"name\":\"Nicaragua\",\"abbreviation\":\"NI\"},{\"name\":\"Niger\",\"abbreviation\":\"NE\"},{\"name\":\"Nigeria\",\"abbreviation\":\"NG\"},{\"name\":\"Niue\",\"abbreviation\":\"NU\"},{\"name\":\"Norfolk Island\",\"abbreviation\":\"NF\"},{\"name\":\"North Korea\",\"abbreviation\":\"KP\"},{\"name\":\"Northern Mariana Islands\",\"abbreviation\":\"MP\"},{\"name\":\"Norway\",\"abbreviation\":\"NO\"},{\"name\":\"Oman\",\"abbreviation\":\"OM\"},{\"name\":\"Pakistan\",\"abbreviation\":\"PK\"},{\"name\":\"Palau\",\"abbreviation\":\"PW\"},{\"name\":\"Palestinian Territories\",\"abbreviation\":\"PS\"},{\"name\":\"Panama\",\"abbreviation\":\"PA\"},{\"name\":\"Papua New Guinea\",\"abbreviation\":\"PG\"},{\"name\":\"Paraguay\",\"abbreviation\":\"PY\"},{\"name\":\"Peru\",\"abbreviation\":\"PE\"},{\"name\":\"Philippines\",\"abbreviation\":\"PH\"},{\"name\":\"Pitcairn Islands\",\"abbreviation\":\"PN\"},{\"name\":\"Poland\",\"abbreviation\":\"PL\"},{\"name\":\"Portugal\",\"abbreviation\":\"PT\"},{\"name\":\"Puerto Rico\",\"abbreviation\":\"PR\"},{\"name\":\"Qatar\",\"abbreviation\":\"QA\"},{\"name\":\"Réunion\",\"abbreviation\":\"RE\"},{\"name\":\"Romania\",\"abbreviation\":\"RO\"},{\"name\":\"Russia\",\"abbreviation\":\"RU\"},{\"name\":\"Rwanda\",\"abbreviation\":\"RW\"},{\"name\":\"Samoa\",\"abbreviation\":\"WS\"},{\"name\":\"San Marino\",\"abbreviation\":\"SM\"},{\"name\":\"São Tomé and Príncipe\",\"abbreviation\":\"ST\"},{\"name\":\"Saudi Arabia\",\"abbreviation\":\"SA\"},{\"name\":\"Senegal\",\"abbreviation\":\"SN\"},{\"name\":\"Serbia\",\"abbreviation\":\"RS\"},{\"name\":\"Seychelles\",\"abbreviation\":\"SC\"},{\"name\":\"Sierra Leone\",\"abbreviation\":\"SL\"},{\"name\":\"Singapore\",\"abbreviation\":\"SG\"},{\"name\":\"Sint Maarten\",\"abbreviation\":\"SX\"},{\"name\":\"Slovakia\",\"abbreviation\":\"SK\"},{\"name\":\"Slovenia\",\"abbreviation\":\"SI\"},{\"name\":\"Solomon Islands\",\"abbreviation\":\"SB\"},{\"name\":\"Somalia\",\"abbreviation\":\"SO\"},{\"name\":\"South Africa\",\"abbreviation\":\"ZA\"},{\"name\":\"South Georgia & South Sandwich Islands\",\"abbreviation\":\"GS\"},{\"name\":\"South Korea\",\"abbreviation\":\"KR\"},{\"name\":\"South Sudan\",\"abbreviation\":\"SS\"},{\"name\":\"Spain\",\"abbreviation\":\"ES\"},{\"name\":\"Sri Lanka\",\"abbreviation\":\"LK\"},{\"name\":\"St. Barthélemy\",\"abbreviation\":\"BL\"},{\"name\":\"St. Helena\",\"abbreviation\":\"SH\"},{\"name\":\"St. Kitts & Nevis\",\"abbreviation\":\"KN\"},{\"name\":\"St. Lucia\",\"abbreviation\":\"LC\"},{\"name\":\"St. Martin\",\"abbreviation\":\"MF\"},{\"name\":\"St. Pierre & Miquelon\",\"abbreviation\":\"PM\"},{\"name\":\"St. Vincent & Grenadines\",\"abbreviation\":\"VC\"},{\"name\":\"Sudan\",\"abbreviation\":\"SD\"},{\"name\":\"Suriname\",\"abbreviation\":\"SR\"},{\"name\":\"Svalbard & Jan Mayen\",\"abbreviation\":\"SJ\"},{\"name\":\"Swaziland\",\"abbreviation\":\"SZ\"},{\"name\":\"Sweden\",\"abbreviation\":\"SE\"},{\"name\":\"Switzerland\",\"abbreviation\":\"CH\"},{\"name\":\"Syria\",\"abbreviation\":\"SY\"},{\"name\":\"Taiwan\",\"abbreviation\":\"TW\"},{\"name\":\"Tajikistan\",\"abbreviation\":\"TJ\"},{\"name\":\"Tanzania\",\"abbreviation\":\"TZ\"},{\"name\":\"Thailand\",\"abbreviation\":\"TH\"},{\"name\":\"Timor-Leste\",\"abbreviation\":\"TL\"},{\"name\":\"Togo\",\"abbreviation\":\"TG\"},{\"name\":\"Tokelau\",\"abbreviation\":\"TK\"},{\"name\":\"Tonga\",\"abbreviation\":\"TO\"},{\"name\":\"Trinidad & Tobago\",\"abbreviation\":\"TT\"},{\"name\":\"Tristan da Cunha\",\"abbreviation\":\"TA\"},{\"name\":\"Tunisia\",\"abbreviation\":\"TN\"},{\"name\":\"Turkey\",\"abbreviation\":\"TR\"},{\"name\":\"Turkmenistan\",\"abbreviation\":\"TM\"},{\"name\":\"Turks & Caicos Islands\",\"abbreviation\":\"TC\"},{\"name\":\"Tuvalu\",\"abbreviation\":\"TV\"},{\"name\":\"U.S. Outlying Islands\",\"abbreviation\":\"UM\"},{\"name\":\"U.S. Virgin Islands\",\"abbreviation\":\"VI\"},{\"name\":\"Uganda\",\"abbreviation\":\"UG\"},{\"name\":\"Ukraine\",\"abbreviation\":\"UA\"},{\"name\":\"United Arab Emirates\",\"abbreviation\":\"AE\"},{\"name\":\"United Kingdom\",\"abbreviation\":\"GB\"},{\"name\":\"United States\",\"abbreviation\":\"US\"},{\"name\":\"Uruguay\",\"abbreviation\":\"UY\"},{\"name\":\"Uzbekistan\",\"abbreviation\":\"UZ\"},{\"name\":\"Vanuatu\",\"abbreviation\":\"VU\"},{\"name\":\"Vatican City\",\"abbreviation\":\"VA\"},{\"name\":\"Venezuela\",\"abbreviation\":\"VE\"},{\"name\":\"Vietnam\",\"abbreviation\":\"VN\"},{\"name\":\"Wallis & Futuna\",\"abbreviation\":\"WF\"},{\"name\":\"Western Sahara\",\"abbreviation\":\"EH\"},{\"name\":\"Yemen\",\"abbreviation\":\"YE\"},{\"name\":\"Zambia\",\"abbreviation\":\"ZM\"},{\"name\":\"Zimbabwe\",\"abbreviation\":\"ZW\"}],\n\n                counties: {\n            // Data taken from http://www.downloadexcelfiles.com/gb_en/download-excel-file-list-counties-uk\n            \"uk\": [\n                {name: 'Bath and North East Somerset'},\n                {name: 'Aberdeenshire'},\n                {name: 'Anglesey'},\n                {name: 'Angus'},\n                {name: 'Bedford'},\n                {name: 'Blackburn with Darwen'},\n                {name: 'Blackpool'},\n                {name: 'Bournemouth'},\n                {name: 'Bracknell Forest'},\n                {name: 'Brighton & Hove'},\n                {name: 'Bristol'},\n                {name: 'Buckinghamshire'},\n                {name: 'Cambridgeshire'},\n                {name: 'Carmarthenshire'},\n                {name: 'Central Bedfordshire'},\n                {name: 'Ceredigion'},\n                {name: 'Cheshire East'},\n                {name: 'Cheshire West and Chester'},\n                {name: 'Clackmannanshire'},\n                {name: 'Conwy'},\n                {name: 'Cornwall'},\n                {name: 'County Antrim'},\n                {name: 'County Armagh'},\n                {name: 'County Down'},\n                {name: 'County Durham'},\n                {name: 'County Fermanagh'},\n                {name: 'County Londonderry'},\n                {name: 'County Tyrone'},\n                {name: 'Cumbria'},\n                {name: 'Darlington'},\n                {name: 'Denbighshire'},\n                {name: 'Derby'},\n                {name: 'Derbyshire'},\n                {name: 'Devon'},\n                {name: 'Dorset'},\n                {name: 'Dumfries and Galloway'},\n                {name: 'Dundee'},\n                {name: 'East Lothian'},\n                {name: 'East Riding of Yorkshire'},\n                {name: 'East Sussex'},\n                {name: 'Edinburgh?'},\n                {name: 'Essex'},\n                {name: 'Falkirk'},\n                {name: 'Fife'},\n                {name: 'Flintshire'},\n                {name: 'Gloucestershire'},\n                {name: 'Greater London'},\n                {name: 'Greater Manchester'},\n                {name: 'Gwent'},\n                {name: 'Gwynedd'},\n                {name: 'Halton'},\n                {name: 'Hampshire'},\n                {name: 'Hartlepool'},\n                {name: 'Herefordshire'},\n                {name: 'Hertfordshire'},\n                {name: 'Highlands'},\n                {name: 'Hull'},\n                {name: 'Isle of Wight'},\n                {name: 'Isles of Scilly'},\n                {name: 'Kent'},\n                {name: 'Lancashire'},\n                {name: 'Leicester'},\n                {name: 'Leicestershire'},\n                {name: 'Lincolnshire'},\n                {name: 'Lothian'},\n                {name: 'Luton'},\n                {name: 'Medway'},\n                {name: 'Merseyside'},\n                {name: 'Mid Glamorgan'},\n                {name: 'Middlesbrough'},\n                {name: 'Milton Keynes'},\n                {name: 'Monmouthshire'},\n                {name: 'Moray'},\n                {name: 'Norfolk'},\n                {name: 'North East Lincolnshire'},\n                {name: 'North Lincolnshire'},\n                {name: 'North Somerset'},\n                {name: 'North Yorkshire'},\n                {name: 'Northamptonshire'},\n                {name: 'Northumberland'},\n                {name: 'Nottingham'},\n                {name: 'Nottinghamshire'},\n                {name: 'Oxfordshire'},\n                {name: 'Pembrokeshire'},\n                {name: 'Perth and Kinross'},\n                {name: 'Peterborough'},\n                {name: 'Plymouth'},\n                {name: 'Poole'},\n                {name: 'Portsmouth'},\n                {name: 'Powys'},\n                {name: 'Reading'},\n                {name: 'Redcar and Cleveland'},\n                {name: 'Rutland'},\n                {name: 'Scottish Borders'},\n                {name: 'Shropshire'},\n                {name: 'Slough'},\n                {name: 'Somerset'},\n                {name: 'South Glamorgan'},\n                {name: 'South Gloucestershire'},\n                {name: 'South Yorkshire'},\n                {name: 'Southampton'},\n                {name: 'Southend-on-Sea'},\n                {name: 'Staffordshire'},\n                {name: 'Stirlingshire'},\n                {name: 'Stockton-on-Tees'},\n                {name: 'Stoke-on-Trent'},\n                {name: 'Strathclyde'},\n                {name: 'Suffolk'},\n                {name: 'Surrey'},\n                {name: 'Swindon'},\n                {name: 'Telford and Wrekin'},\n                {name: 'Thurrock'},\n                {name: 'Torbay'},\n                {name: 'Tyne and Wear'},\n                {name: 'Warrington'},\n                {name: 'Warwickshire'},\n                {name: 'West Berkshire'},\n                {name: 'West Glamorgan'},\n                {name: 'West Lothian'},\n                {name: 'West Midlands'},\n                {name: 'West Sussex'},\n                {name: 'West Yorkshire'},\n                {name: 'Western Isles'},\n                {name: 'Wiltshire'},\n                {name: 'Windsor and Maidenhead'},\n                {name: 'Wokingham'},\n                {name: 'Worcestershire'},\n                {name: 'Wrexham'},\n                {name: 'York'}]\n                                },\n        provinces: {\n            \"ca\": [\n                {name: 'Alberta', abbreviation: 'AB'},\n                {name: 'British Columbia', abbreviation: 'BC'},\n                {name: 'Manitoba', abbreviation: 'MB'},\n                {name: 'New Brunswick', abbreviation: 'NB'},\n                {name: 'Newfoundland and Labrador', abbreviation: 'NL'},\n                {name: 'Nova Scotia', abbreviation: 'NS'},\n                {name: 'Ontario', abbreviation: 'ON'},\n                {name: 'Prince Edward Island', abbreviation: 'PE'},\n                {name: 'Quebec', abbreviation: 'QC'},\n                {name: 'Saskatchewan', abbreviation: 'SK'},\n\n                // The case could be made that the following are not actually provinces\n                // since they are technically considered \"territories\" however they all\n                // look the same on an envelope!\n                {name: 'Northwest Territories', abbreviation: 'NT'},\n                {name: 'Nunavut', abbreviation: 'NU'},\n                {name: 'Yukon', abbreviation: 'YT'}\n            ],\n            \"it\": [\n                { name: \"Agrigento\", abbreviation: \"AG\", code: 84 },\n                { name: \"Alessandria\", abbreviation: \"AL\", code: 6 },\n                { name: \"Ancona\", abbreviation: \"AN\", code: 42 },\n                { name: \"Aosta\", abbreviation: \"AO\", code: 7 },\n                { name: \"L'Aquila\", abbreviation: \"AQ\", code: 66 },\n                { name: \"Arezzo\", abbreviation: \"AR\", code: 51 },\n                { name: \"Ascoli-Piceno\", abbreviation: \"AP\", code: 44 },\n                { name: \"Asti\", abbreviation: \"AT\", code: 5 },\n                { name: \"Avellino\", abbreviation: \"AV\", code: 64 },\n                { name: \"Bari\", abbreviation: \"BA\", code: 72 },\n                { name: \"Barletta-Andria-Trani\", abbreviation: \"BT\", code: 72 },\n                { name: \"Belluno\", abbreviation: \"BL\", code: 25 },\n                { name: \"Benevento\", abbreviation: \"BN\", code: 62 },\n                { name: \"Bergamo\", abbreviation: \"BG\", code: 16 },\n                { name: \"Biella\", abbreviation: \"BI\", code: 96 },\n                { name: \"Bologna\", abbreviation: \"BO\", code: 37 },\n                { name: \"Bolzano\", abbreviation: \"BZ\", code: 21 },\n                { name: \"Brescia\", abbreviation: \"BS\", code: 17 },\n                { name: \"Brindisi\", abbreviation: \"BR\", code: 74 },\n                { name: \"Cagliari\", abbreviation: \"CA\", code: 92 },\n                { name: \"Caltanissetta\", abbreviation: \"CL\", code: 85 },\n                { name: \"Campobasso\", abbreviation: \"CB\", code: 70 },\n                { name: \"Carbonia Iglesias\", abbreviation: \"CI\", code: 70 },\n                { name: \"Caserta\", abbreviation: \"CE\", code: 61 },\n                { name: \"Catania\", abbreviation: \"CT\", code: 87 },\n                { name: \"Catanzaro\", abbreviation: \"CZ\", code: 79 },\n                { name: \"Chieti\", abbreviation: \"CH\", code: 69 },\n                { name: \"Como\", abbreviation: \"CO\", code: 13 },\n                { name: \"Cosenza\", abbreviation: \"CS\", code: 78 },\n                { name: \"Cremona\", abbreviation: \"CR\", code: 19 },\n                { name: \"Crotone\", abbreviation: \"KR\", code: 101 },\n                { name: \"Cuneo\", abbreviation: \"CN\", code: 4 },\n                { name: \"Enna\", abbreviation: \"EN\", code: 86 },\n                { name: \"Fermo\", abbreviation: \"FM\", code: 86 },\n                { name: \"Ferrara\", abbreviation: \"FE\", code: 38 },\n                { name: \"Firenze\", abbreviation: \"FI\", code: 48 },\n                { name: \"Foggia\", abbreviation: \"FG\", code: 71 },\n                { name: \"Forli-Cesena\", abbreviation: \"FC\", code: 71 },\n                { name: \"Frosinone\", abbreviation: \"FR\", code: 60 },\n                { name: \"Genova\", abbreviation: \"GE\", code: 10 },\n                { name: \"Gorizia\", abbreviation: \"GO\", code: 31 },\n                { name: \"Grosseto\", abbreviation: \"GR\", code: 53 },\n                { name: \"Imperia\", abbreviation: \"IM\", code: 8 },\n                { name: \"Isernia\", abbreviation: \"IS\", code: 94 },\n                { name: \"La-Spezia\", abbreviation: \"SP\", code: 66 },\n                { name: \"Latina\", abbreviation: \"LT\", code: 59 },\n                { name: \"Lecce\", abbreviation: \"LE\", code: 75 },\n                { name: \"Lecco\", abbreviation: \"LC\", code: 97 },\n                { name: \"Livorno\", abbreviation: \"LI\", code: 49 },\n                { name: \"Lodi\", abbreviation: \"LO\", code: 98 },\n                { name: \"Lucca\", abbreviation: \"LU\", code: 46 },\n                { name: \"Macerata\", abbreviation: \"MC\", code: 43 },\n                { name: \"Mantova\", abbreviation: \"MN\", code: 20 },\n                { name: \"Massa-Carrara\", abbreviation: \"MS\", code: 45 },\n                { name: \"Matera\", abbreviation: \"MT\", code: 77 },\n                { name: \"Medio Campidano\", abbreviation: \"VS\", code: 77 },\n                { name: \"Messina\", abbreviation: \"ME\", code: 83 },\n                { name: \"Milano\", abbreviation: \"MI\", code: 15 },\n                { name: \"Modena\", abbreviation: \"MO\", code: 36 },\n                { name: \"Monza-Brianza\", abbreviation: \"MB\", code: 36 },\n                { name: \"Napoli\", abbreviation: \"NA\", code: 63 },\n                { name: \"Novara\", abbreviation: \"NO\", code: 3 },\n                { name: \"Nuoro\", abbreviation: \"NU\", code: 91 },\n                { name: \"Ogliastra\", abbreviation: \"OG\", code: 91 },\n                { name: \"Olbia Tempio\", abbreviation: \"OT\", code: 91 },\n                { name: \"Oristano\", abbreviation: \"OR\", code: 95 },\n                { name: \"Padova\", abbreviation: \"PD\", code: 28 },\n                { name: \"Palermo\", abbreviation: \"PA\", code: 82 },\n                { name: \"Parma\", abbreviation: \"PR\", code: 34 },\n                { name: \"Pavia\", abbreviation: \"PV\", code: 18 },\n                { name: \"Perugia\", abbreviation: \"PG\", code: 54 },\n                { name: \"Pesaro-Urbino\", abbreviation: \"PU\", code: 41 },\n                { name: \"Pescara\", abbreviation: \"PE\", code: 68 },\n                { name: \"Piacenza\", abbreviation: \"PC\", code: 33 },\n                { name: \"Pisa\", abbreviation: \"PI\", code: 50 },\n                { name: \"Pistoia\", abbreviation: \"PT\", code: 47 },\n                { name: \"Pordenone\", abbreviation: \"PN\", code: 93 },\n                { name: \"Potenza\", abbreviation: \"PZ\", code: 76 },\n                { name: \"Prato\", abbreviation: \"PO\", code: 100 },\n                { name: \"Ragusa\", abbreviation: \"RG\", code: 88 },\n                { name: \"Ravenna\", abbreviation: \"RA\", code: 39 },\n                { name: \"Reggio-Calabria\", abbreviation: \"RC\", code: 35 },\n                { name: \"Reggio-Emilia\", abbreviation: \"RE\", code: 35 },\n                { name: \"Rieti\", abbreviation: \"RI\", code: 57 },\n                { name: \"Rimini\", abbreviation: \"RN\", code: 99 },\n                { name: \"Roma\", abbreviation: \"Roma\", code: 58 },\n                { name: \"Rovigo\", abbreviation: \"RO\", code: 29 },\n                { name: \"Salerno\", abbreviation: \"SA\", code: 65 },\n                { name: \"Sassari\", abbreviation: \"SS\", code: 90 },\n                { name: \"Savona\", abbreviation: \"SV\", code: 9 },\n                { name: \"Siena\", abbreviation: \"SI\", code: 52 },\n                { name: \"Siracusa\", abbreviation: \"SR\", code: 89 },\n                { name: \"Sondrio\", abbreviation: \"SO\", code: 14 },\n                { name: \"Taranto\", abbreviation: \"TA\", code: 73 },\n                { name: \"Teramo\", abbreviation: \"TE\", code: 67 },\n                { name: \"Terni\", abbreviation: \"TR\", code: 55 },\n                { name: \"Torino\", abbreviation: \"TO\", code: 1 },\n                { name: \"Trapani\", abbreviation: \"TP\", code: 81 },\n                { name: \"Trento\", abbreviation: \"TN\", code: 22 },\n                { name: \"Treviso\", abbreviation: \"TV\", code: 26 },\n                { name: \"Trieste\", abbreviation: \"TS\", code: 32 },\n                { name: \"Udine\", abbreviation: \"UD\", code: 30 },\n                { name: \"Varese\", abbreviation: \"VA\", code: 12 },\n                { name: \"Venezia\", abbreviation: \"VE\", code: 27 },\n                { name: \"Verbania\", abbreviation: \"VB\", code: 27 },\n                { name: \"Vercelli\", abbreviation: \"VC\", code: 2 },\n                { name: \"Verona\", abbreviation: \"VR\", code: 23 },\n                { name: \"Vibo-Valentia\", abbreviation: \"VV\", code: 102 },\n                { name: \"Vicenza\", abbreviation: \"VI\", code: 24 },\n                { name: \"Viterbo\", abbreviation: \"VT\", code: 56 }\n            ]\n        },\n\n            // from: https://github.com/samsargent/Useful-Autocomplete-Data/blob/master/data/nationalities.json\n        nationalities: [\n           {name: 'Afghan'},\n           {name: 'Albanian'},\n           {name: 'Algerian'},\n           {name: 'American'},\n           {name: 'Andorran'},\n           {name: 'Angolan'},\n           {name: 'Antiguans'},\n           {name: 'Argentinean'},\n           {name: 'Armenian'},\n           {name: 'Australian'},\n           {name: 'Austrian'},\n           {name: 'Azerbaijani'},\n           {name: 'Bahami'},\n           {name: 'Bahraini'},\n           {name: 'Bangladeshi'},\n           {name: 'Barbadian'},\n           {name: 'Barbudans'},\n           {name: 'Batswana'},\n           {name: 'Belarusian'},\n           {name: 'Belgian'},\n           {name: 'Belizean'},\n           {name: 'Beninese'},\n           {name: 'Bhutanese'},\n           {name: 'Bolivian'},\n           {name: 'Bosnian'},\n           {name: 'Brazilian'},\n           {name: 'British'},\n           {name: 'Bruneian'},\n           {name: 'Bulgarian'},\n           {name: 'Burkinabe'},\n           {name: 'Burmese'},\n           {name: 'Burundian'},\n           {name: 'Cambodian'},\n           {name: 'Cameroonian'},\n           {name: 'Canadian'},\n           {name: 'Cape Verdean'},\n           {name: 'Central African'},\n           {name: 'Chadian'},\n           {name: 'Chilean'},\n           {name: 'Chinese'},\n           {name: 'Colombian'},\n           {name: 'Comoran'},\n           {name: 'Congolese'},\n           {name: 'Costa Rican'},\n           {name: 'Croatian'},\n           {name: 'Cuban'},\n           {name: 'Cypriot'},\n           {name: 'Czech'},\n           {name: 'Danish'},\n           {name: 'Djibouti'},\n           {name: 'Dominican'},\n           {name: 'Dutch'},\n           {name: 'East Timorese'},\n           {name: 'Ecuadorean'},\n           {name: 'Egyptian'},\n           {name: 'Emirian'},\n           {name: 'Equatorial Guinean'},\n           {name: 'Eritrean'},\n           {name: 'Estonian'},\n           {name: 'Ethiopian'},\n           {name: 'Fijian'},\n           {name: 'Filipino'},\n           {name: 'Finnish'},\n           {name: 'French'},\n           {name: 'Gabonese'},\n           {name: 'Gambian'},\n           {name: 'Georgian'},\n           {name: 'German'},\n           {name: 'Ghanaian'},\n           {name: 'Greek'},\n           {name: 'Grenadian'},\n           {name: 'Guatemalan'},\n           {name: 'Guinea-Bissauan'},\n           {name: 'Guinean'},\n           {name: 'Guyanese'},\n           {name: 'Haitian'},\n           {name: 'Herzegovinian'},\n           {name: 'Honduran'},\n           {name: 'Hungarian'},\n           {name: 'I-Kiribati'},\n           {name: 'Icelander'},\n           {name: 'Indian'},\n           {name: 'Indonesian'},\n           {name: 'Iranian'},\n           {name: 'Iraqi'},\n           {name: 'Irish'},\n           {name: 'Israeli'},\n           {name: 'Italian'},\n           {name: 'Ivorian'},\n           {name: 'Jamaican'},\n           {name: 'Japanese'},\n           {name: 'Jordanian'},\n           {name: 'Kazakhstani'},\n           {name: 'Kenyan'},\n           {name: 'Kittian and Nevisian'},\n           {name: 'Kuwaiti'},\n           {name: 'Kyrgyz'},\n           {name: 'Laotian'},\n           {name: 'Latvian'},\n           {name: 'Lebanese'},\n           {name: 'Liberian'},\n           {name: 'Libyan'},\n           {name: 'Liechtensteiner'},\n           {name: 'Lithuanian'},\n           {name: 'Luxembourger'},\n           {name: 'Macedonian'},\n           {name: 'Malagasy'},\n           {name: 'Malawian'},\n           {name: 'Malaysian'},\n           {name: 'Maldivan'},\n           {name: 'Malian'},\n           {name: 'Maltese'},\n           {name: 'Marshallese'},\n           {name: 'Mauritanian'},\n           {name: 'Mauritian'},\n           {name: 'Mexican'},\n           {name: 'Micronesian'},\n           {name: 'Moldovan'},\n           {name: 'Monacan'},\n           {name: 'Mongolian'},\n           {name: 'Moroccan'},\n           {name: 'Mosotho'},\n           {name: 'Motswana'},\n           {name: 'Mozambican'},\n           {name: 'Namibian'},\n           {name: 'Nauruan'},\n           {name: 'Nepalese'},\n           {name: 'New Zealander'},\n           {name: 'Nicaraguan'},\n           {name: 'Nigerian'},\n           {name: 'Nigerien'},\n           {name: 'North Korean'},\n           {name: 'Northern Irish'},\n           {name: 'Norwegian'},\n           {name: 'Omani'},\n           {name: 'Pakistani'},\n           {name: 'Palauan'},\n           {name: 'Panamanian'},\n           {name: 'Papua New Guinean'},\n           {name: 'Paraguayan'},\n           {name: 'Peruvian'},\n           {name: 'Polish'},\n           {name: 'Portuguese'},\n           {name: 'Qatari'},\n           {name: 'Romani'},\n           {name: 'Russian'},\n           {name: 'Rwandan'},\n           {name: 'Saint Lucian'},\n           {name: 'Salvadoran'},\n           {name: 'Samoan'},\n           {name: 'San Marinese'},\n           {name: 'Sao Tomean'},\n           {name: 'Saudi'},\n           {name: 'Scottish'},\n           {name: 'Senegalese'},\n           {name: 'Serbian'},\n           {name: 'Seychellois'},\n           {name: 'Sierra Leonean'},\n           {name: 'Singaporean'},\n           {name: 'Slovakian'},\n           {name: 'Slovenian'},\n           {name: 'Solomon Islander'},\n           {name: 'Somali'},\n           {name: 'South African'},\n           {name: 'South Korean'},\n           {name: 'Spanish'},\n           {name: 'Sri Lankan'},\n           {name: 'Sudanese'},\n           {name: 'Surinamer'},\n           {name: 'Swazi'},\n           {name: 'Swedish'},\n           {name: 'Swiss'},\n           {name: 'Syrian'},\n           {name: 'Taiwanese'},\n           {name: 'Tajik'},\n           {name: 'Tanzanian'},\n           {name: 'Thai'},\n           {name: 'Togolese'},\n           {name: 'Tongan'},\n           {name: 'Trinidadian or Tobagonian'},\n           {name: 'Tunisian'},\n           {name: 'Turkish'},\n           {name: 'Tuvaluan'},\n           {name: 'Ugandan'},\n           {name: 'Ukrainian'},\n           {name: 'Uruguaya'},\n           {name: 'Uzbekistani'},\n           {name: 'Venezuela'},\n           {name: 'Vietnamese'},\n           {name: 'Wels'},\n           {name: 'Yemenit'},\n           {name: 'Zambia'},\n           {name: 'Zimbabwe'},\n        ],\n          // http://www.loc.gov/standards/iso639-2/php/code_list.php (ISO-639-1 codes)\n        locale_languages: [\n          \"aa\",\n          \"ab\",\n          \"ae\",\n          \"af\",\n          \"ak\",\n          \"am\",\n          \"an\",\n          \"ar\",\n          \"as\",\n          \"av\",\n          \"ay\",\n          \"az\",\n          \"ba\",\n          \"be\",\n          \"bg\",\n          \"bh\",\n          \"bi\",\n          \"bm\",\n          \"bn\",\n          \"bo\",\n          \"br\",\n          \"bs\",\n          \"ca\",\n          \"ce\",\n          \"ch\",\n          \"co\",\n          \"cr\",\n          \"cs\",\n          \"cu\",\n          \"cv\",\n          \"cy\",\n          \"da\",\n          \"de\",\n          \"dv\",\n          \"dz\",\n          \"ee\",\n          \"el\",\n          \"en\",\n          \"eo\",\n          \"es\",\n          \"et\",\n          \"eu\",\n          \"fa\",\n          \"ff\",\n          \"fi\",\n          \"fj\",\n          \"fo\",\n          \"fr\",\n          \"fy\",\n          \"ga\",\n          \"gd\",\n          \"gl\",\n          \"gn\",\n          \"gu\",\n          \"gv\",\n          \"ha\",\n          \"he\",\n          \"hi\",\n          \"ho\",\n          \"hr\",\n          \"ht\",\n          \"hu\",\n          \"hy\",\n          \"hz\",\n          \"ia\",\n          \"id\",\n          \"ie\",\n          \"ig\",\n          \"ii\",\n          \"ik\",\n          \"io\",\n          \"is\",\n          \"it\",\n          \"iu\",\n          \"ja\",\n          \"jv\",\n          \"ka\",\n          \"kg\",\n          \"ki\",\n          \"kj\",\n          \"kk\",\n          \"kl\",\n          \"km\",\n          \"kn\",\n          \"ko\",\n          \"kr\",\n          \"ks\",\n          \"ku\",\n          \"kv\",\n          \"kw\",\n          \"ky\",\n          \"la\",\n          \"lb\",\n          \"lg\",\n          \"li\",\n          \"ln\",\n          \"lo\",\n          \"lt\",\n          \"lu\",\n          \"lv\",\n          \"mg\",\n          \"mh\",\n          \"mi\",\n          \"mk\",\n          \"ml\",\n          \"mn\",\n          \"mr\",\n          \"ms\",\n          \"mt\",\n          \"my\",\n          \"na\",\n          \"nb\",\n          \"nd\",\n          \"ne\",\n          \"ng\",\n          \"nl\",\n          \"nn\",\n          \"no\",\n          \"nr\",\n          \"nv\",\n          \"ny\",\n          \"oc\",\n          \"oj\",\n          \"om\",\n          \"or\",\n          \"os\",\n          \"pa\",\n          \"pi\",\n          \"pl\",\n          \"ps\",\n          \"pt\",\n          \"qu\",\n          \"rm\",\n          \"rn\",\n          \"ro\",\n          \"ru\",\n          \"rw\",\n          \"sa\",\n          \"sc\",\n          \"sd\",\n          \"se\",\n          \"sg\",\n          \"si\",\n          \"sk\",\n          \"sl\",\n          \"sm\",\n          \"sn\",\n          \"so\",\n          \"sq\",\n          \"sr\",\n          \"ss\",\n          \"st\",\n          \"su\",\n          \"sv\",\n          \"sw\",\n          \"ta\",\n          \"te\",\n          \"tg\",\n          \"th\",\n          \"ti\",\n          \"tk\",\n          \"tl\",\n          \"tn\",\n          \"to\",\n          \"tr\",\n          \"ts\",\n          \"tt\",\n          \"tw\",\n          \"ty\",\n          \"ug\",\n          \"uk\",\n          \"ur\",\n          \"uz\",\n          \"ve\",\n          \"vi\",\n          \"vo\",\n          \"wa\",\n          \"wo\",\n          \"xh\",\n          \"yi\",\n          \"yo\",\n          \"za\",\n          \"zh\",\n          \"zu\"\n        ],\n\n        // From http://data.okfn.org/data/core/language-codes#resource-language-codes-full (IETF language tags)\n        locale_regions: [\n          \"agq-CM\",\n          \"asa-TZ\",\n          \"ast-ES\",\n          \"bas-CM\",\n          \"bem-ZM\",\n          \"bez-TZ\",\n          \"brx-IN\",\n          \"cgg-UG\",\n          \"chr-US\",\n          \"dav-KE\",\n          \"dje-NE\",\n          \"dsb-DE\",\n          \"dua-CM\",\n          \"dyo-SN\",\n          \"ebu-KE\",\n          \"ewo-CM\",\n          \"fil-PH\",\n          \"fur-IT\",\n          \"gsw-CH\",\n          \"gsw-FR\",\n          \"gsw-LI\",\n          \"guz-KE\",\n          \"haw-US\",\n          \"hsb-DE\",\n          \"jgo-CM\",\n          \"jmc-TZ\",\n          \"kab-DZ\",\n          \"kam-KE\",\n          \"kde-TZ\",\n          \"kea-CV\",\n          \"khq-ML\",\n          \"kkj-CM\",\n          \"kln-KE\",\n          \"kok-IN\",\n          \"ksb-TZ\",\n          \"ksf-CM\",\n          \"ksh-DE\",\n          \"lag-TZ\",\n          \"lkt-US\",\n          \"luo-KE\",\n          \"luy-KE\",\n          \"mas-KE\",\n          \"mas-TZ\",\n          \"mer-KE\",\n          \"mfe-MU\",\n          \"mgh-MZ\",\n          \"mgo-CM\",\n          \"mua-CM\",\n          \"naq-NA\",\n          \"nmg-CM\",\n          \"nnh-CM\",\n          \"nus-SD\",\n          \"nyn-UG\",\n          \"rof-TZ\",\n          \"rwk-TZ\",\n          \"sah-RU\",\n          \"saq-KE\",\n          \"sbp-TZ\",\n          \"seh-MZ\",\n          \"ses-ML\",\n          \"shi-Latn\",\n          \"shi-Latn-MA\",\n          \"shi-Tfng\",\n          \"shi-Tfng-MA\",\n          \"smn-FI\",\n          \"teo-KE\",\n          \"teo-UG\",\n          \"twq-NE\",\n          \"tzm-Latn\",\n          \"tzm-Latn-MA\",\n          \"vai-Latn\",\n          \"vai-Latn-LR\",\n          \"vai-Vaii\",\n          \"vai-Vaii-LR\",\n          \"vun-TZ\",\n          \"wae-CH\",\n          \"xog-UG\",\n          \"yav-CM\",\n          \"zgh-MA\",\n          \"af-NA\",\n          \"af-ZA\",\n          \"ak-GH\",\n          \"am-ET\",\n          \"ar-001\",\n          \"ar-AE\",\n          \"ar-BH\",\n          \"ar-DJ\",\n          \"ar-DZ\",\n          \"ar-EG\",\n          \"ar-EH\",\n          \"ar-ER\",\n          \"ar-IL\",\n          \"ar-IQ\",\n          \"ar-JO\",\n          \"ar-KM\",\n          \"ar-KW\",\n          \"ar-LB\",\n          \"ar-LY\",\n          \"ar-MA\",\n          \"ar-MR\",\n          \"ar-OM\",\n          \"ar-PS\",\n          \"ar-QA\",\n          \"ar-SA\",\n          \"ar-SD\",\n          \"ar-SO\",\n          \"ar-SS\",\n          \"ar-SY\",\n          \"ar-TD\",\n          \"ar-TN\",\n          \"ar-YE\",\n          \"as-IN\",\n          \"az-Cyrl\",\n          \"az-Cyrl-AZ\",\n          \"az-Latn\",\n          \"az-Latn-AZ\",\n          \"be-BY\",\n          \"bg-BG\",\n          \"bm-Latn\",\n          \"bm-Latn-ML\",\n          \"bn-BD\",\n          \"bn-IN\",\n          \"bo-CN\",\n          \"bo-IN\",\n          \"br-FR\",\n          \"bs-Cyrl\",\n          \"bs-Cyrl-BA\",\n          \"bs-Latn\",\n          \"bs-Latn-BA\",\n          \"ca-AD\",\n          \"ca-ES\",\n          \"ca-ES-VALENCIA\",\n          \"ca-FR\",\n          \"ca-IT\",\n          \"cs-CZ\",\n          \"cy-GB\",\n          \"da-DK\",\n          \"da-GL\",\n          \"de-AT\",\n          \"de-BE\",\n          \"de-CH\",\n          \"de-DE\",\n          \"de-LI\",\n          \"de-LU\",\n          \"dz-BT\",\n          \"ee-GH\",\n          \"ee-TG\",\n          \"el-CY\",\n          \"el-GR\",\n          \"en-001\",\n          \"en-150\",\n          \"en-AG\",\n          \"en-AI\",\n          \"en-AS\",\n          \"en-AU\",\n          \"en-BB\",\n          \"en-BE\",\n          \"en-BM\",\n          \"en-BS\",\n          \"en-BW\",\n          \"en-BZ\",\n          \"en-CA\",\n          \"en-CC\",\n          \"en-CK\",\n          \"en-CM\",\n          \"en-CX\",\n          \"en-DG\",\n          \"en-DM\",\n          \"en-ER\",\n          \"en-FJ\",\n          \"en-FK\",\n          \"en-FM\",\n          \"en-GB\",\n          \"en-GD\",\n          \"en-GG\",\n          \"en-GH\",\n          \"en-GI\",\n          \"en-GM\",\n          \"en-GU\",\n          \"en-GY\",\n          \"en-HK\",\n          \"en-IE\",\n          \"en-IM\",\n          \"en-IN\",\n          \"en-IO\",\n          \"en-JE\",\n          \"en-JM\",\n          \"en-KE\",\n          \"en-KI\",\n          \"en-KN\",\n          \"en-KY\",\n          \"en-LC\",\n          \"en-LR\",\n          \"en-LS\",\n          \"en-MG\",\n          \"en-MH\",\n          \"en-MO\",\n          \"en-MP\",\n          \"en-MS\",\n          \"en-MT\",\n          \"en-MU\",\n          \"en-MW\",\n          \"en-MY\",\n          \"en-NA\",\n          \"en-NF\",\n          \"en-NG\",\n          \"en-NR\",\n          \"en-NU\",\n          \"en-NZ\",\n          \"en-PG\",\n          \"en-PH\",\n          \"en-PK\",\n          \"en-PN\",\n          \"en-PR\",\n          \"en-PW\",\n          \"en-RW\",\n          \"en-SB\",\n          \"en-SC\",\n          \"en-SD\",\n          \"en-SG\",\n          \"en-SH\",\n          \"en-SL\",\n          \"en-SS\",\n          \"en-SX\",\n          \"en-SZ\",\n          \"en-TC\",\n          \"en-TK\",\n          \"en-TO\",\n          \"en-TT\",\n          \"en-TV\",\n          \"en-TZ\",\n          \"en-UG\",\n          \"en-UM\",\n          \"en-US\",\n          \"en-US-POSIX\",\n          \"en-VC\",\n          \"en-VG\",\n          \"en-VI\",\n          \"en-VU\",\n          \"en-WS\",\n          \"en-ZA\",\n          \"en-ZM\",\n          \"en-ZW\",\n          \"eo-001\",\n          \"es-419\",\n          \"es-AR\",\n          \"es-BO\",\n          \"es-CL\",\n          \"es-CO\",\n          \"es-CR\",\n          \"es-CU\",\n          \"es-DO\",\n          \"es-EA\",\n          \"es-EC\",\n          \"es-ES\",\n          \"es-GQ\",\n          \"es-GT\",\n          \"es-HN\",\n          \"es-IC\",\n          \"es-MX\",\n          \"es-NI\",\n          \"es-PA\",\n          \"es-PE\",\n          \"es-PH\",\n          \"es-PR\",\n          \"es-PY\",\n          \"es-SV\",\n          \"es-US\",\n          \"es-UY\",\n          \"es-VE\",\n          \"et-EE\",\n          \"eu-ES\",\n          \"fa-AF\",\n          \"fa-IR\",\n          \"ff-CM\",\n          \"ff-GN\",\n          \"ff-MR\",\n          \"ff-SN\",\n          \"fi-FI\",\n          \"fo-FO\",\n          \"fr-BE\",\n          \"fr-BF\",\n          \"fr-BI\",\n          \"fr-BJ\",\n          \"fr-BL\",\n          \"fr-CA\",\n          \"fr-CD\",\n          \"fr-CF\",\n          \"fr-CG\",\n          \"fr-CH\",\n          \"fr-CI\",\n          \"fr-CM\",\n          \"fr-DJ\",\n          \"fr-DZ\",\n          \"fr-FR\",\n          \"fr-GA\",\n          \"fr-GF\",\n          \"fr-GN\",\n          \"fr-GP\",\n          \"fr-GQ\",\n          \"fr-HT\",\n          \"fr-KM\",\n          \"fr-LU\",\n          \"fr-MA\",\n          \"fr-MC\",\n          \"fr-MF\",\n          \"fr-MG\",\n          \"fr-ML\",\n          \"fr-MQ\",\n          \"fr-MR\",\n          \"fr-MU\",\n          \"fr-NC\",\n          \"fr-NE\",\n          \"fr-PF\",\n          \"fr-PM\",\n          \"fr-RE\",\n          \"fr-RW\",\n          \"fr-SC\",\n          \"fr-SN\",\n          \"fr-SY\",\n          \"fr-TD\",\n          \"fr-TG\",\n          \"fr-TN\",\n          \"fr-VU\",\n          \"fr-WF\",\n          \"fr-YT\",\n          \"fy-NL\",\n          \"ga-IE\",\n          \"gd-GB\",\n          \"gl-ES\",\n          \"gu-IN\",\n          \"gv-IM\",\n          \"ha-Latn\",\n          \"ha-Latn-GH\",\n          \"ha-Latn-NE\",\n          \"ha-Latn-NG\",\n          \"he-IL\",\n          \"hi-IN\",\n          \"hr-BA\",\n          \"hr-HR\",\n          \"hu-HU\",\n          \"hy-AM\",\n          \"id-ID\",\n          \"ig-NG\",\n          \"ii-CN\",\n          \"is-IS\",\n          \"it-CH\",\n          \"it-IT\",\n          \"it-SM\",\n          \"ja-JP\",\n          \"ka-GE\",\n          \"ki-KE\",\n          \"kk-Cyrl\",\n          \"kk-Cyrl-KZ\",\n          \"kl-GL\",\n          \"km-KH\",\n          \"kn-IN\",\n          \"ko-KP\",\n          \"ko-KR\",\n          \"ks-Arab\",\n          \"ks-Arab-IN\",\n          \"kw-GB\",\n          \"ky-Cyrl\",\n          \"ky-Cyrl-KG\",\n          \"lb-LU\",\n          \"lg-UG\",\n          \"ln-AO\",\n          \"ln-CD\",\n          \"ln-CF\",\n          \"ln-CG\",\n          \"lo-LA\",\n          \"lt-LT\",\n          \"lu-CD\",\n          \"lv-LV\",\n          \"mg-MG\",\n          \"mk-MK\",\n          \"ml-IN\",\n          \"mn-Cyrl\",\n          \"mn-Cyrl-MN\",\n          \"mr-IN\",\n          \"ms-Latn\",\n          \"ms-Latn-BN\",\n          \"ms-Latn-MY\",\n          \"ms-Latn-SG\",\n          \"mt-MT\",\n          \"my-MM\",\n          \"nb-NO\",\n          \"nb-SJ\",\n          \"nd-ZW\",\n          \"ne-IN\",\n          \"ne-NP\",\n          \"nl-AW\",\n          \"nl-BE\",\n          \"nl-BQ\",\n          \"nl-CW\",\n          \"nl-NL\",\n          \"nl-SR\",\n          \"nl-SX\",\n          \"nn-NO\",\n          \"om-ET\",\n          \"om-KE\",\n          \"or-IN\",\n          \"os-GE\",\n          \"os-RU\",\n          \"pa-Arab\",\n          \"pa-Arab-PK\",\n          \"pa-Guru\",\n          \"pa-Guru-IN\",\n          \"pl-PL\",\n          \"ps-AF\",\n          \"pt-AO\",\n          \"pt-BR\",\n          \"pt-CV\",\n          \"pt-GW\",\n          \"pt-MO\",\n          \"pt-MZ\",\n          \"pt-PT\",\n          \"pt-ST\",\n          \"pt-TL\",\n          \"qu-BO\",\n          \"qu-EC\",\n          \"qu-PE\",\n          \"rm-CH\",\n          \"rn-BI\",\n          \"ro-MD\",\n          \"ro-RO\",\n          \"ru-BY\",\n          \"ru-KG\",\n          \"ru-KZ\",\n          \"ru-MD\",\n          \"ru-RU\",\n          \"ru-UA\",\n          \"rw-RW\",\n          \"se-FI\",\n          \"se-NO\",\n          \"se-SE\",\n          \"sg-CF\",\n          \"si-LK\",\n          \"sk-SK\",\n          \"sl-SI\",\n          \"sn-ZW\",\n          \"so-DJ\",\n          \"so-ET\",\n          \"so-KE\",\n          \"so-SO\",\n          \"sq-AL\",\n          \"sq-MK\",\n          \"sq-XK\",\n          \"sr-Cyrl\",\n          \"sr-Cyrl-BA\",\n          \"sr-Cyrl-ME\",\n          \"sr-Cyrl-RS\",\n          \"sr-Cyrl-XK\",\n          \"sr-Latn\",\n          \"sr-Latn-BA\",\n          \"sr-Latn-ME\",\n          \"sr-Latn-RS\",\n          \"sr-Latn-XK\",\n          \"sv-AX\",\n          \"sv-FI\",\n          \"sv-SE\",\n          \"sw-CD\",\n          \"sw-KE\",\n          \"sw-TZ\",\n          \"sw-UG\",\n          \"ta-IN\",\n          \"ta-LK\",\n          \"ta-MY\",\n          \"ta-SG\",\n          \"te-IN\",\n          \"th-TH\",\n          \"ti-ER\",\n          \"ti-ET\",\n          \"to-TO\",\n          \"tr-CY\",\n          \"tr-TR\",\n          \"ug-Arab\",\n          \"ug-Arab-CN\",\n          \"uk-UA\",\n          \"ur-IN\",\n          \"ur-PK\",\n          \"uz-Arab\",\n          \"uz-Arab-AF\",\n          \"uz-Cyrl\",\n          \"uz-Cyrl-UZ\",\n          \"uz-Latn\",\n          \"uz-Latn-UZ\",\n          \"vi-VN\",\n          \"yi-001\",\n          \"yo-BJ\",\n          \"yo-NG\",\n          \"zh-Hans\",\n          \"zh-Hans-CN\",\n          \"zh-Hans-HK\",\n          \"zh-Hans-MO\",\n          \"zh-Hans-SG\",\n          \"zh-Hant\",\n          \"zh-Hant-HK\",\n          \"zh-Hant-MO\",\n          \"zh-Hant-TW\",\n          \"zu-ZA\"\n        ],\n\n        us_states_and_dc: [\n            {name: 'Alabama', abbreviation: 'AL'},\n            {name: 'Alaska', abbreviation: 'AK'},\n            {name: 'Arizona', abbreviation: 'AZ'},\n            {name: 'Arkansas', abbreviation: 'AR'},\n            {name: 'California', abbreviation: 'CA'},\n            {name: 'Colorado', abbreviation: 'CO'},\n            {name: 'Connecticut', abbreviation: 'CT'},\n            {name: 'Delaware', abbreviation: 'DE'},\n            {name: 'District of Columbia', abbreviation: 'DC'},\n            {name: 'Florida', abbreviation: 'FL'},\n            {name: 'Georgia', abbreviation: 'GA'},\n            {name: 'Hawaii', abbreviation: 'HI'},\n            {name: 'Idaho', abbreviation: 'ID'},\n            {name: 'Illinois', abbreviation: 'IL'},\n            {name: 'Indiana', abbreviation: 'IN'},\n            {name: 'Iowa', abbreviation: 'IA'},\n            {name: 'Kansas', abbreviation: 'KS'},\n            {name: 'Kentucky', abbreviation: 'KY'},\n            {name: 'Louisiana', abbreviation: 'LA'},\n            {name: 'Maine', abbreviation: 'ME'},\n            {name: 'Maryland', abbreviation: 'MD'},\n            {name: 'Massachusetts', abbreviation: 'MA'},\n            {name: 'Michigan', abbreviation: 'MI'},\n            {name: 'Minnesota', abbreviation: 'MN'},\n            {name: 'Mississippi', abbreviation: 'MS'},\n            {name: 'Missouri', abbreviation: 'MO'},\n            {name: 'Montana', abbreviation: 'MT'},\n            {name: 'Nebraska', abbreviation: 'NE'},\n            {name: 'Nevada', abbreviation: 'NV'},\n            {name: 'New Hampshire', abbreviation: 'NH'},\n            {name: 'New Jersey', abbreviation: 'NJ'},\n            {name: 'New Mexico', abbreviation: 'NM'},\n            {name: 'New York', abbreviation: 'NY'},\n            {name: 'North Carolina', abbreviation: 'NC'},\n            {name: 'North Dakota', abbreviation: 'ND'},\n            {name: 'Ohio', abbreviation: 'OH'},\n            {name: 'Oklahoma', abbreviation: 'OK'},\n            {name: 'Oregon', abbreviation: 'OR'},\n            {name: 'Pennsylvania', abbreviation: 'PA'},\n            {name: 'Rhode Island', abbreviation: 'RI'},\n            {name: 'South Carolina', abbreviation: 'SC'},\n            {name: 'South Dakota', abbreviation: 'SD'},\n            {name: 'Tennessee', abbreviation: 'TN'},\n            {name: 'Texas', abbreviation: 'TX'},\n            {name: 'Utah', abbreviation: 'UT'},\n            {name: 'Vermont', abbreviation: 'VT'},\n            {name: 'Virginia', abbreviation: 'VA'},\n            {name: 'Washington', abbreviation: 'WA'},\n            {name: 'West Virginia', abbreviation: 'WV'},\n            {name: 'Wisconsin', abbreviation: 'WI'},\n            {name: 'Wyoming', abbreviation: 'WY'}\n        ],\n\n        territories: [\n            {name: 'American Samoa', abbreviation: 'AS'},\n            {name: 'Federated States of Micronesia', abbreviation: 'FM'},\n            {name: 'Guam', abbreviation: 'GU'},\n            {name: 'Marshall Islands', abbreviation: 'MH'},\n            {name: 'Northern Mariana Islands', abbreviation: 'MP'},\n            {name: 'Puerto Rico', abbreviation: 'PR'},\n            {name: 'Virgin Islands, U.S.', abbreviation: 'VI'}\n        ],\n\n        armed_forces: [\n            {name: 'Armed Forces Europe', abbreviation: 'AE'},\n            {name: 'Armed Forces Pacific', abbreviation: 'AP'},\n            {name: 'Armed Forces the Americas', abbreviation: 'AA'}\n        ],\n\n        country_regions: {\n            it: [\n                { name: \"Valle d'Aosta\", abbreviation: \"VDA\" },\n                { name: \"Piemonte\", abbreviation: \"PIE\" },\n                { name: \"Lombardia\", abbreviation: \"LOM\" },\n                { name: \"Veneto\", abbreviation: \"VEN\" },\n                { name: \"Trentino Alto Adige\", abbreviation: \"TAA\" },\n                { name: \"Friuli Venezia Giulia\", abbreviation: \"FVG\" },\n                { name: \"Liguria\", abbreviation: \"LIG\" },\n                { name: \"Emilia Romagna\", abbreviation: \"EMR\" },\n                { name: \"Toscana\", abbreviation: \"TOS\" },\n                { name: \"Umbria\", abbreviation: \"UMB\" },\n                { name: \"Marche\", abbreviation: \"MAR\" },\n                { name: \"Abruzzo\", abbreviation: \"ABR\" },\n                { name: \"Lazio\", abbreviation: \"LAZ\" },\n                { name: \"Campania\", abbreviation: \"CAM\" },\n                { name: \"Puglia\", abbreviation: \"PUG\" },\n                { name: \"Basilicata\", abbreviation: \"BAS\" },\n                { name: \"Molise\", abbreviation: \"MOL\" },\n                { name: \"Calabria\", abbreviation: \"CAL\" },\n                { name: \"Sicilia\", abbreviation: \"SIC\" },\n                { name: \"Sardegna\", abbreviation: \"SAR\" }\n            ],\n            mx: [\n                { name: 'Aguascalientes', abbreviation: 'AGU' },\n                { name: 'Baja California', abbreviation: 'BCN' },\n                { name: 'Baja California Sur', abbreviation: 'BCS' },\n                { name: 'Campeche', abbreviation: 'CAM' },\n                { name: 'Chiapas', abbreviation: 'CHP' },\n                { name: 'Chihuahua', abbreviation: 'CHH' },\n                { name: 'Ciudad de México', abbreviation: 'DIF' },\n                { name: 'Coahuila', abbreviation: 'COA' },\n                { name: 'Colima', abbreviation: 'COL' },\n                { name: 'Durango', abbreviation: 'DUR' },\n                { name: 'Guanajuato', abbreviation: 'GUA' },\n                { name: 'Guerrero', abbreviation: 'GRO' },\n                { name: 'Hidalgo', abbreviation: 'HID' },\n                { name: 'Jalisco', abbreviation: 'JAL' },\n                { name: 'México', abbreviation: 'MEX' },\n                { name: 'Michoacán', abbreviation: 'MIC' },\n                { name: 'Morelos', abbreviation: 'MOR' },\n                { name: 'Nayarit', abbreviation: 'NAY' },\n                { name: 'Nuevo León', abbreviation: 'NLE' },\n                { name: 'Oaxaca', abbreviation: 'OAX' },\n                { name: 'Puebla', abbreviation: 'PUE' },\n                { name: 'Querétaro', abbreviation: 'QUE' },\n                { name: 'Quintana Roo', abbreviation: 'ROO' },\n                { name: 'San Luis Potosí', abbreviation: 'SLP' },\n                { name: 'Sinaloa', abbreviation: 'SIN' },\n                { name: 'Sonora', abbreviation: 'SON' },\n                { name: 'Tabasco', abbreviation: 'TAB' },\n                { name: 'Tamaulipas', abbreviation: 'TAM' },\n                { name: 'Tlaxcala', abbreviation: 'TLA' },\n                { name: 'Veracruz', abbreviation: 'VER' },\n                { name: 'Yucatán', abbreviation: 'YUC' },\n                { name: 'Zacatecas', abbreviation: 'ZAC' }\n            ]\n        },\n\n        street_suffixes: {\n            'us': [\n                {name: 'Avenue', abbreviation: 'Ave'},\n                {name: 'Boulevard', abbreviation: 'Blvd'},\n                {name: 'Center', abbreviation: 'Ctr'},\n                {name: 'Circle', abbreviation: 'Cir'},\n                {name: 'Court', abbreviation: 'Ct'},\n                {name: 'Drive', abbreviation: 'Dr'},\n                {name: 'Extension', abbreviation: 'Ext'},\n                {name: 'Glen', abbreviation: 'Gln'},\n                {name: 'Grove', abbreviation: 'Grv'},\n                {name: 'Heights', abbreviation: 'Hts'},\n                {name: 'Highway', abbreviation: 'Hwy'},\n                {name: 'Junction', abbreviation: 'Jct'},\n                {name: 'Key', abbreviation: 'Key'},\n                {name: 'Lane', abbreviation: 'Ln'},\n                {name: 'Loop', abbreviation: 'Loop'},\n                {name: 'Manor', abbreviation: 'Mnr'},\n                {name: 'Mill', abbreviation: 'Mill'},\n                {name: 'Park', abbreviation: 'Park'},\n                {name: 'Parkway', abbreviation: 'Pkwy'},\n                {name: 'Pass', abbreviation: 'Pass'},\n                {name: 'Path', abbreviation: 'Path'},\n                {name: 'Pike', abbreviation: 'Pike'},\n                {name: 'Place', abbreviation: 'Pl'},\n                {name: 'Plaza', abbreviation: 'Plz'},\n                {name: 'Point', abbreviation: 'Pt'},\n                {name: 'Ridge', abbreviation: 'Rdg'},\n                {name: 'River', abbreviation: 'Riv'},\n                {name: 'Road', abbreviation: 'Rd'},\n                {name: 'Square', abbreviation: 'Sq'},\n                {name: 'Street', abbreviation: 'St'},\n                {name: 'Terrace', abbreviation: 'Ter'},\n                {name: 'Trail', abbreviation: 'Trl'},\n                {name: 'Turnpike', abbreviation: 'Tpke'},\n                {name: 'View', abbreviation: 'Vw'},\n                {name: 'Way', abbreviation: 'Way'}\n            ],\n            'it': [\n                { name: 'Accesso', abbreviation: 'Acc.' },\n                { name: 'Alzaia', abbreviation: 'Alz.' },\n                { name: 'Arco', abbreviation: 'Arco' },\n                { name: 'Archivolto', abbreviation: 'Acv.' },\n                { name: 'Arena', abbreviation: 'Arena' },\n                { name: 'Argine', abbreviation: 'Argine' },\n                { name: 'Bacino', abbreviation: 'Bacino' },\n                { name: 'Banchi', abbreviation: 'Banchi' },\n                { name: 'Banchina', abbreviation: 'Ban.' },\n                { name: 'Bastioni', abbreviation: 'Bas.' },\n                { name: 'Belvedere', abbreviation: 'Belv.' },\n                { name: 'Borgata', abbreviation: 'B.ta' },\n                { name: 'Borgo', abbreviation: 'B.go' },\n                { name: 'Calata', abbreviation: 'Cal.' },\n                { name: 'Calle', abbreviation: 'Calle' },\n                { name: 'Campiello', abbreviation: 'Cam.' },\n                { name: 'Campo', abbreviation: 'Cam.' },\n                { name: 'Canale', abbreviation: 'Can.' },\n                { name: 'Carraia', abbreviation: 'Carr.' },\n                { name: 'Cascina', abbreviation: 'Cascina' },\n                { name: 'Case sparse', abbreviation: 'c.s.' },\n                { name: 'Cavalcavia', abbreviation: 'Cv.' },\n                { name: 'Circonvallazione', abbreviation: 'Cv.' },\n                { name: 'Complanare', abbreviation: 'C.re' },\n                { name: 'Contrada', abbreviation: 'C.da' },\n                { name: 'Corso', abbreviation: 'C.so' },\n                { name: 'Corte', abbreviation: 'C.te' },\n                { name: 'Cortile', abbreviation: 'C.le' },\n                { name: 'Diramazione', abbreviation: 'Dir.' },\n                { name: 'Fondaco', abbreviation: 'F.co' },\n                { name: 'Fondamenta', abbreviation: 'F.ta' },\n                { name: 'Fondo', abbreviation: 'F.do' },\n                { name: 'Frazione', abbreviation: 'Fr.' },\n                { name: 'Isola', abbreviation: 'Is.' },\n                { name: 'Largo', abbreviation: 'L.go' },\n                { name: 'Litoranea', abbreviation: 'Lit.' },\n                { name: 'Lungolago', abbreviation: 'L.go lago' },\n                { name: 'Lungo Po', abbreviation: 'l.go Po' },\n                { name: 'Molo', abbreviation: 'Molo' },\n                { name: 'Mura', abbreviation: 'Mura' },\n                { name: 'Passaggio privato', abbreviation: 'pass. priv.' },\n                { name: 'Passeggiata', abbreviation: 'Pass.' },\n                { name: 'Piazza', abbreviation: 'P.zza' },\n                { name: 'Piazzale', abbreviation: 'P.le' },\n                { name: 'Ponte', abbreviation: 'P.te' },\n                { name: 'Portico', abbreviation: 'P.co' },\n                { name: 'Rampa', abbreviation: 'Rampa' },\n                { name: 'Regione', abbreviation: 'Reg.' },\n                { name: 'Rione', abbreviation: 'R.ne' },\n                { name: 'Rio', abbreviation: 'Rio' },\n                { name: 'Ripa', abbreviation: 'Ripa' },\n                { name: 'Riva', abbreviation: 'Riva' },\n                { name: 'Rondò', abbreviation: 'Rondò' },\n                { name: 'Rotonda', abbreviation: 'Rot.' },\n                { name: 'Sagrato', abbreviation: 'Sagr.' },\n                { name: 'Salita', abbreviation: 'Sal.' },\n                { name: 'Scalinata', abbreviation: 'Scal.' },\n                { name: 'Scalone', abbreviation: 'Scal.' },\n                { name: 'Slargo', abbreviation: 'Sl.' },\n                { name: 'Sottoportico', abbreviation: 'Sott.' },\n                { name: 'Strada', abbreviation: 'Str.' },\n                { name: 'Stradale', abbreviation: 'Str.le' },\n                { name: 'Strettoia', abbreviation: 'Strett.' },\n                { name: 'Traversa', abbreviation: 'Trav.' },\n                { name: 'Via', abbreviation: 'V.' },\n                { name: 'Viale', abbreviation: 'V.le' },\n                { name: 'Vicinale', abbreviation: 'Vic.le' },\n                { name: 'Vicolo', abbreviation: 'Vic.' }\n            ],\n            'uk' : [\n                {name: 'Avenue', abbreviation: 'Ave'},\n                {name: 'Close', abbreviation: 'Cl'},\n                {name: 'Court', abbreviation: 'Ct'},\n                {name: 'Crescent', abbreviation: 'Cr'},\n                {name: 'Drive', abbreviation: 'Dr'},\n                {name: 'Garden', abbreviation: 'Gdn'},\n                {name: 'Gardens', abbreviation: 'Gdns'},\n                {name: 'Green', abbreviation: 'Gn'},\n                {name: 'Grove', abbreviation: 'Gr'},\n                {name: 'Lane', abbreviation: 'Ln'},\n                {name: 'Mount', abbreviation: 'Mt'},\n                {name: 'Place', abbreviation: 'Pl'},\n                {name: 'Park', abbreviation: 'Pk'},\n                {name: 'Ridge', abbreviation: 'Rdg'},\n                {name: 'Road', abbreviation: 'Rd'},\n                {name: 'Square', abbreviation: 'Sq'},\n                {name: 'Street', abbreviation: 'St'},\n                {name: 'Terrace', abbreviation: 'Ter'},\n                {name: 'Valley', abbreviation: 'Val'}\n            ]\n        },\n\n        months: [\n            {name: 'January', short_name: 'Jan', numeric: '01', days: 31},\n            // Not messing with leap years...\n            {name: 'February', short_name: 'Feb', numeric: '02', days: 28},\n            {name: 'March', short_name: 'Mar', numeric: '03', days: 31},\n            {name: 'April', short_name: 'Apr', numeric: '04', days: 30},\n            {name: 'May', short_name: 'May', numeric: '05', days: 31},\n            {name: 'June', short_name: 'Jun', numeric: '06', days: 30},\n            {name: 'July', short_name: 'Jul', numeric: '07', days: 31},\n            {name: 'August', short_name: 'Aug', numeric: '08', days: 31},\n            {name: 'September', short_name: 'Sep', numeric: '09', days: 30},\n            {name: 'October', short_name: 'Oct', numeric: '10', days: 31},\n            {name: 'November', short_name: 'Nov', numeric: '11', days: 30},\n            {name: 'December', short_name: 'Dec', numeric: '12', days: 31}\n        ],\n\n        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n        cc_types: [\n            {name: \"American Express\", short_name: 'amex', prefix: '34', length: 15},\n            {name: \"Bankcard\", short_name: 'bankcard', prefix: '5610', length: 16},\n            {name: \"China UnionPay\", short_name: 'chinaunion', prefix: '62', length: 16},\n            {name: \"Diners Club Carte Blanche\", short_name: 'dccarte', prefix: '300', length: 14},\n            {name: \"Diners Club enRoute\", short_name: 'dcenroute', prefix: '2014', length: 15},\n            {name: \"Diners Club International\", short_name: 'dcintl', prefix: '36', length: 14},\n            {name: \"Diners Club United States & Canada\", short_name: 'dcusc', prefix: '54', length: 16},\n            {name: \"Discover Card\", short_name: 'discover', prefix: '6011', length: 16},\n            {name: \"InstaPayment\", short_name: 'instapay', prefix: '637', length: 16},\n            {name: \"JCB\", short_name: 'jcb', prefix: '3528', length: 16},\n            {name: \"Laser\", short_name: 'laser', prefix: '6304', length: 16},\n            {name: \"Maestro\", short_name: 'maestro', prefix: '5018', length: 16},\n            {name: \"Mastercard\", short_name: 'mc', prefix: '51', length: 16},\n            {name: \"Solo\", short_name: 'solo', prefix: '6334', length: 16},\n            {name: \"Switch\", short_name: 'switch', prefix: '4903', length: 16},\n            {name: \"Visa\", short_name: 'visa', prefix: '4', length: 16},\n            {name: \"Visa Electron\", short_name: 'electron', prefix: '4026', length: 16}\n        ],\n\n        //return all world currency by ISO 4217\n        currency_types: [\n            {'code' : 'AED', 'name' : 'United Arab Emirates Dirham'},\n            {'code' : 'AFN', 'name' : 'Afghanistan Afghani'},\n            {'code' : 'ALL', 'name' : 'Albania Lek'},\n            {'code' : 'AMD', 'name' : 'Armenia Dram'},\n            {'code' : 'ANG', 'name' : 'Netherlands Antilles Guilder'},\n            {'code' : 'AOA', 'name' : 'Angola Kwanza'},\n            {'code' : 'ARS', 'name' : 'Argentina Peso'},\n            {'code' : 'AUD', 'name' : 'Australia Dollar'},\n            {'code' : 'AWG', 'name' : 'Aruba Guilder'},\n            {'code' : 'AZN', 'name' : 'Azerbaijan New Manat'},\n            {'code' : 'BAM', 'name' : 'Bosnia and Herzegovina Convertible Marka'},\n            {'code' : 'BBD', 'name' : 'Barbados Dollar'},\n            {'code' : 'BDT', 'name' : 'Bangladesh Taka'},\n            {'code' : 'BGN', 'name' : 'Bulgaria Lev'},\n            {'code' : 'BHD', 'name' : 'Bahrain Dinar'},\n            {'code' : 'BIF', 'name' : 'Burundi Franc'},\n            {'code' : 'BMD', 'name' : 'Bermuda Dollar'},\n            {'code' : 'BND', 'name' : 'Brunei Darussalam Dollar'},\n            {'code' : 'BOB', 'name' : 'Bolivia Boliviano'},\n            {'code' : 'BRL', 'name' : 'Brazil Real'},\n            {'code' : 'BSD', 'name' : 'Bahamas Dollar'},\n            {'code' : 'BTN', 'name' : 'Bhutan Ngultrum'},\n            {'code' : 'BWP', 'name' : 'Botswana Pula'},\n            {'code' : 'BYR', 'name' : 'Belarus Ruble'},\n            {'code' : 'BZD', 'name' : 'Belize Dollar'},\n            {'code' : 'CAD', 'name' : 'Canada Dollar'},\n            {'code' : 'CDF', 'name' : 'Congo/Kinshasa Franc'},\n            {'code' : 'CHF', 'name' : 'Switzerland Franc'},\n            {'code' : 'CLP', 'name' : 'Chile Peso'},\n            {'code' : 'CNY', 'name' : 'China Yuan Renminbi'},\n            {'code' : 'COP', 'name' : 'Colombia Peso'},\n            {'code' : 'CRC', 'name' : 'Costa Rica Colon'},\n            {'code' : 'CUC', 'name' : 'Cuba Convertible Peso'},\n            {'code' : 'CUP', 'name' : 'Cuba Peso'},\n            {'code' : 'CVE', 'name' : 'Cape Verde Escudo'},\n            {'code' : 'CZK', 'name' : 'Czech Republic Koruna'},\n            {'code' : 'DJF', 'name' : 'Djibouti Franc'},\n            {'code' : 'DKK', 'name' : 'Denmark Krone'},\n            {'code' : 'DOP', 'name' : 'Dominican Republic Peso'},\n            {'code' : 'DZD', 'name' : 'Algeria Dinar'},\n            {'code' : 'EGP', 'name' : 'Egypt Pound'},\n            {'code' : 'ERN', 'name' : 'Eritrea Nakfa'},\n            {'code' : 'ETB', 'name' : 'Ethiopia Birr'},\n            {'code' : 'EUR', 'name' : 'Euro Member Countries'},\n            {'code' : 'FJD', 'name' : 'Fiji Dollar'},\n            {'code' : 'FKP', 'name' : 'Falkland Islands (Malvinas) Pound'},\n            {'code' : 'GBP', 'name' : 'United Kingdom Pound'},\n            {'code' : 'GEL', 'name' : 'Georgia Lari'},\n            {'code' : 'GGP', 'name' : 'Guernsey Pound'},\n            {'code' : 'GHS', 'name' : 'Ghana Cedi'},\n            {'code' : 'GIP', 'name' : 'Gibraltar Pound'},\n            {'code' : 'GMD', 'name' : 'Gambia Dalasi'},\n            {'code' : 'GNF', 'name' : 'Guinea Franc'},\n            {'code' : 'GTQ', 'name' : 'Guatemala Quetzal'},\n            {'code' : 'GYD', 'name' : 'Guyana Dollar'},\n            {'code' : 'HKD', 'name' : 'Hong Kong Dollar'},\n            {'code' : 'HNL', 'name' : 'Honduras Lempira'},\n            {'code' : 'HRK', 'name' : 'Croatia Kuna'},\n            {'code' : 'HTG', 'name' : 'Haiti Gourde'},\n            {'code' : 'HUF', 'name' : 'Hungary Forint'},\n            {'code' : 'IDR', 'name' : 'Indonesia Rupiah'},\n            {'code' : 'ILS', 'name' : 'Israel Shekel'},\n            {'code' : 'IMP', 'name' : 'Isle of Man Pound'},\n            {'code' : 'INR', 'name' : 'India Rupee'},\n            {'code' : 'IQD', 'name' : 'Iraq Dinar'},\n            {'code' : 'IRR', 'name' : 'Iran Rial'},\n            {'code' : 'ISK', 'name' : 'Iceland Krona'},\n            {'code' : 'JEP', 'name' : 'Jersey Pound'},\n            {'code' : 'JMD', 'name' : 'Jamaica Dollar'},\n            {'code' : 'JOD', 'name' : 'Jordan Dinar'},\n            {'code' : 'JPY', 'name' : 'Japan Yen'},\n            {'code' : 'KES', 'name' : 'Kenya Shilling'},\n            {'code' : 'KGS', 'name' : 'Kyrgyzstan Som'},\n            {'code' : 'KHR', 'name' : 'Cambodia Riel'},\n            {'code' : 'KMF', 'name' : 'Comoros Franc'},\n            {'code' : 'KPW', 'name' : 'Korea (North) Won'},\n            {'code' : 'KRW', 'name' : 'Korea (South) Won'},\n            {'code' : 'KWD', 'name' : 'Kuwait Dinar'},\n            {'code' : 'KYD', 'name' : 'Cayman Islands Dollar'},\n            {'code' : 'KZT', 'name' : 'Kazakhstan Tenge'},\n            {'code' : 'LAK', 'name' : 'Laos Kip'},\n            {'code' : 'LBP', 'name' : 'Lebanon Pound'},\n            {'code' : 'LKR', 'name' : 'Sri Lanka Rupee'},\n            {'code' : 'LRD', 'name' : 'Liberia Dollar'},\n            {'code' : 'LSL', 'name' : 'Lesotho Loti'},\n            {'code' : 'LTL', 'name' : 'Lithuania Litas'},\n            {'code' : 'LYD', 'name' : 'Libya Dinar'},\n            {'code' : 'MAD', 'name' : 'Morocco Dirham'},\n            {'code' : 'MDL', 'name' : 'Moldova Leu'},\n            {'code' : 'MGA', 'name' : 'Madagascar Ariary'},\n            {'code' : 'MKD', 'name' : 'Macedonia Denar'},\n            {'code' : 'MMK', 'name' : 'Myanmar (Burma) Kyat'},\n            {'code' : 'MNT', 'name' : 'Mongolia Tughrik'},\n            {'code' : 'MOP', 'name' : 'Macau Pataca'},\n            {'code' : 'MRO', 'name' : 'Mauritania Ouguiya'},\n            {'code' : 'MUR', 'name' : 'Mauritius Rupee'},\n            {'code' : 'MVR', 'name' : 'Maldives (Maldive Islands) Rufiyaa'},\n            {'code' : 'MWK', 'name' : 'Malawi Kwacha'},\n            {'code' : 'MXN', 'name' : 'Mexico Peso'},\n            {'code' : 'MYR', 'name' : 'Malaysia Ringgit'},\n            {'code' : 'MZN', 'name' : 'Mozambique Metical'},\n            {'code' : 'NAD', 'name' : 'Namibia Dollar'},\n            {'code' : 'NGN', 'name' : 'Nigeria Naira'},\n            {'code' : 'NIO', 'name' : 'Nicaragua Cordoba'},\n            {'code' : 'NOK', 'name' : 'Norway Krone'},\n            {'code' : 'NPR', 'name' : 'Nepal Rupee'},\n            {'code' : 'NZD', 'name' : 'New Zealand Dollar'},\n            {'code' : 'OMR', 'name' : 'Oman Rial'},\n            {'code' : 'PAB', 'name' : 'Panama Balboa'},\n            {'code' : 'PEN', 'name' : 'Peru Nuevo Sol'},\n            {'code' : 'PGK', 'name' : 'Papua New Guinea Kina'},\n            {'code' : 'PHP', 'name' : 'Philippines Peso'},\n            {'code' : 'PKR', 'name' : 'Pakistan Rupee'},\n            {'code' : 'PLN', 'name' : 'Poland Zloty'},\n            {'code' : 'PYG', 'name' : 'Paraguay Guarani'},\n            {'code' : 'QAR', 'name' : 'Qatar Riyal'},\n            {'code' : 'RON', 'name' : 'Romania New Leu'},\n            {'code' : 'RSD', 'name' : 'Serbia Dinar'},\n            {'code' : 'RUB', 'name' : 'Russia Ruble'},\n            {'code' : 'RWF', 'name' : 'Rwanda Franc'},\n            {'code' : 'SAR', 'name' : 'Saudi Arabia Riyal'},\n            {'code' : 'SBD', 'name' : 'Solomon Islands Dollar'},\n            {'code' : 'SCR', 'name' : 'Seychelles Rupee'},\n            {'code' : 'SDG', 'name' : 'Sudan Pound'},\n            {'code' : 'SEK', 'name' : 'Sweden Krona'},\n            {'code' : 'SGD', 'name' : 'Singapore Dollar'},\n            {'code' : 'SHP', 'name' : 'Saint Helena Pound'},\n            {'code' : 'SLL', 'name' : 'Sierra Leone Leone'},\n            {'code' : 'SOS', 'name' : 'Somalia Shilling'},\n            {'code' : 'SPL', 'name' : 'Seborga Luigino'},\n            {'code' : 'SRD', 'name' : 'Suriname Dollar'},\n            {'code' : 'STD', 'name' : 'São Tomé and Príncipe Dobra'},\n            {'code' : 'SVC', 'name' : 'El Salvador Colon'},\n            {'code' : 'SYP', 'name' : 'Syria Pound'},\n            {'code' : 'SZL', 'name' : 'Swaziland Lilangeni'},\n            {'code' : 'THB', 'name' : 'Thailand Baht'},\n            {'code' : 'TJS', 'name' : 'Tajikistan Somoni'},\n            {'code' : 'TMT', 'name' : 'Turkmenistan Manat'},\n            {'code' : 'TND', 'name' : 'Tunisia Dinar'},\n            {'code' : 'TOP', 'name' : 'Tonga Pa\\'anga'},\n            {'code' : 'TRY', 'name' : 'Turkey Lira'},\n            {'code' : 'TTD', 'name' : 'Trinidad and Tobago Dollar'},\n            {'code' : 'TVD', 'name' : 'Tuvalu Dollar'},\n            {'code' : 'TWD', 'name' : 'Taiwan New Dollar'},\n            {'code' : 'TZS', 'name' : 'Tanzania Shilling'},\n            {'code' : 'UAH', 'name' : 'Ukraine Hryvnia'},\n            {'code' : 'UGX', 'name' : 'Uganda Shilling'},\n            {'code' : 'USD', 'name' : 'United States Dollar'},\n            {'code' : 'UYU', 'name' : 'Uruguay Peso'},\n            {'code' : 'UZS', 'name' : 'Uzbekistan Som'},\n            {'code' : 'VEF', 'name' : 'Venezuela Bolivar'},\n            {'code' : 'VND', 'name' : 'Viet Nam Dong'},\n            {'code' : 'VUV', 'name' : 'Vanuatu Vatu'},\n            {'code' : 'WST', 'name' : 'Samoa Tala'},\n            {'code' : 'XAF', 'name' : 'Communauté Financière Africaine (BEAC) CFA Franc BEAC'},\n            {'code' : 'XCD', 'name' : 'East Caribbean Dollar'},\n            {'code' : 'XDR', 'name' : 'International Monetary Fund (IMF) Special Drawing Rights'},\n            {'code' : 'XOF', 'name' : 'Communauté Financière Africaine (BCEAO) Franc'},\n            {'code' : 'XPF', 'name' : 'Comptoirs Français du Pacifique (CFP) Franc'},\n            {'code' : 'YER', 'name' : 'Yemen Rial'},\n            {'code' : 'ZAR', 'name' : 'South Africa Rand'},\n            {'code' : 'ZMW', 'name' : 'Zambia Kwacha'},\n            {'code' : 'ZWD', 'name' : 'Zimbabwe Dollar'}\n        ],\n\n        // return the names of all valide colors\n        colorNames : [  \"AliceBlue\", \"Black\", \"Navy\", \"DarkBlue\", \"MediumBlue\", \"Blue\", \"DarkGreen\", \"Green\", \"Teal\", \"DarkCyan\", \"DeepSkyBlue\", \"DarkTurquoise\", \"MediumSpringGreen\", \"Lime\", \"SpringGreen\",\n            \"Aqua\", \"Cyan\", \"MidnightBlue\", \"DodgerBlue\", \"LightSeaGreen\", \"ForestGreen\", \"SeaGreen\", \"DarkSlateGray\", \"LimeGreen\", \"MediumSeaGreen\", \"Turquoise\", \"RoyalBlue\", \"SteelBlue\", \"DarkSlateBlue\", \"MediumTurquoise\",\n            \"Indigo\", \"DarkOliveGreen\", \"CadetBlue\", \"CornflowerBlue\", \"RebeccaPurple\", \"MediumAquaMarine\", \"DimGray\", \"SlateBlue\", \"OliveDrab\", \"SlateGray\", \"LightSlateGray\", \"MediumSlateBlue\", \"LawnGreen\", \"Chartreuse\",\n            \"Aquamarine\", \"Maroon\", \"Purple\", \"Olive\", \"Gray\", \"SkyBlue\", \"LightSkyBlue\", \"BlueViolet\", \"DarkRed\", \"DarkMagenta\", \"SaddleBrown\", \"Ivory\", \"White\",\n            \"DarkSeaGreen\", \"LightGreen\", \"MediumPurple\", \"DarkViolet\", \"PaleGreen\", \"DarkOrchid\", \"YellowGreen\", \"Sienna\", \"Brown\", \"DarkGray\", \"LightBlue\", \"GreenYellow\", \"PaleTurquoise\", \"LightSteelBlue\", \"PowderBlue\",\n            \"FireBrick\", \"DarkGoldenRod\", \"MediumOrchid\", \"RosyBrown\", \"DarkKhaki\", \"Silver\", \"MediumVioletRed\", \"IndianRed\", \"Peru\", \"Chocolate\", \"Tan\", \"LightGray\", \"Thistle\", \"Orchid\", \"GoldenRod\", \"PaleVioletRed\",\n            \"Crimson\", \"Gainsboro\", \"Plum\", \"BurlyWood\", \"LightCyan\", \"Lavender\", \"DarkSalmon\", \"Violet\", \"PaleGoldenRod\", \"LightCoral\", \"Khaki\", \"AliceBlue\", \"HoneyDew\", \"Azure\", \"SandyBrown\", \"Wheat\", \"Beige\", \"WhiteSmoke\",\n            \"MintCream\", \"GhostWhite\", \"Salmon\", \"AntiqueWhite\", \"Linen\", \"LightGoldenRodYellow\", \"OldLace\", \"Red\", \"Fuchsia\", \"Magenta\", \"DeepPink\", \"OrangeRed\", \"Tomato\", \"HotPink\", \"Coral\", \"DarkOrange\", \"LightSalmon\", \"Orange\",\n            \"LightPink\", \"Pink\", \"Gold\", \"PeachPuff\", \"NavajoWhite\", \"Moccasin\", \"Bisque\", \"MistyRose\", \"BlanchedAlmond\", \"PapayaWhip\", \"LavenderBlush\", \"SeaShell\", \"Cornsilk\", \"LemonChiffon\", \"FloralWhite\", \"Snow\", \"Yellow\", \"LightYellow\"\n        ],\n\n        // Data taken from https://www.sec.gov/rules/other/4-460list.htm\n        company: [ \"3Com Corp\",\n        \"3M Company\",\n        \"A.G. Edwards Inc.\",\n        \"Abbott Laboratories\",\n        \"Abercrombie & Fitch Co.\",\n        \"ABM Industries Incorporated\",\n        \"Ace Hardware Corporation\",\n        \"ACT Manufacturing Inc.\",\n        \"Acterna Corp.\",\n        \"Adams Resources & Energy, Inc.\",\n        \"ADC Telecommunications, Inc.\",\n        \"Adelphia Communications Corporation\",\n        \"Administaff, Inc.\",\n        \"Adobe Systems Incorporated\",\n        \"Adolph Coors Company\",\n        \"Advance Auto Parts, Inc.\",\n        \"Advanced Micro Devices, Inc.\",\n        \"AdvancePCS, Inc.\",\n        \"Advantica Restaurant Group, Inc.\",\n        \"The AES Corporation\",\n        \"Aetna Inc.\",\n        \"Affiliated Computer Services, Inc.\",\n        \"AFLAC Incorporated\",\n        \"AGCO Corporation\",\n        \"Agilent Technologies, Inc.\",\n        \"Agway Inc.\",\n        \"Apartment Investment and Management Company\",\n        \"Air Products and Chemicals, Inc.\",\n        \"Airborne, Inc.\",\n        \"Airgas, Inc.\",\n        \"AK Steel Holding Corporation\",\n        \"Alaska Air Group, Inc.\",\n        \"Alberto-Culver Company\",\n        \"Albertson's, Inc.\",\n        \"Alcoa Inc.\",\n        \"Alleghany Corporation\",\n        \"Allegheny Energy, Inc.\",\n        \"Allegheny Technologies Incorporated\",\n        \"Allergan, Inc.\",\n        \"ALLETE, Inc.\",\n        \"Alliant Energy Corporation\",\n        \"Allied Waste Industries, Inc.\",\n        \"Allmerica Financial Corporation\",\n        \"The Allstate Corporation\",\n        \"ALLTEL Corporation\",\n        \"The Alpine Group, Inc.\",\n        \"Amazon.com, Inc.\",\n        \"AMC Entertainment Inc.\",\n        \"American Power Conversion Corporation\",\n        \"Amerada Hess Corporation\",\n        \"AMERCO\",\n        \"Ameren Corporation\",\n        \"America West Holdings Corporation\",\n        \"American Axle & Manufacturing Holdings, Inc.\",\n        \"American Eagle Outfitters, Inc.\",\n        \"American Electric Power Company, Inc.\",\n        \"American Express Company\",\n        \"American Financial Group, Inc.\",\n        \"American Greetings Corporation\",\n        \"American International Group, Inc.\",\n        \"American Standard Companies Inc.\",\n        \"American Water Works Company, Inc.\",\n        \"AmerisourceBergen Corporation\",\n        \"Ames Department Stores, Inc.\",\n        \"Amgen Inc.\",\n        \"Amkor Technology, Inc.\",\n        \"AMR Corporation\",\n        \"AmSouth Bancorp.\",\n        \"Amtran, Inc.\",\n        \"Anadarko Petroleum Corporation\",\n        \"Analog Devices, Inc.\",\n        \"Anheuser-Busch Companies, Inc.\",\n        \"Anixter International Inc.\",\n        \"AnnTaylor Inc.\",\n        \"Anthem, Inc.\",\n        \"AOL Time Warner Inc.\",\n        \"Aon Corporation\",\n        \"Apache Corporation\",\n        \"Apple Computer, Inc.\",\n        \"Applera Corporation\",\n        \"Applied Industrial Technologies, Inc.\",\n        \"Applied Materials, Inc.\",\n        \"Aquila, Inc.\",\n        \"ARAMARK Corporation\",\n        \"Arch Coal, Inc.\",\n        \"Archer Daniels Midland Company\",\n        \"Arkansas Best Corporation\",\n        \"Armstrong Holdings, Inc.\",\n        \"Arrow Electronics, Inc.\",\n        \"ArvinMeritor, Inc.\",\n        \"Ashland Inc.\",\n        \"Astoria Financial Corporation\",\n        \"AT&T Corp.\",\n        \"Atmel Corporation\",\n        \"Atmos Energy Corporation\",\n        \"Audiovox Corporation\",\n        \"Autoliv, Inc.\",\n        \"Automatic Data Processing, Inc.\",\n        \"AutoNation, Inc.\",\n        \"AutoZone, Inc.\",\n        \"Avaya Inc.\",\n        \"Avery Dennison Corporation\",\n        \"Avista Corporation\",\n        \"Avnet, Inc.\",\n        \"Avon Products, Inc.\",\n        \"Baker Hughes Incorporated\",\n        \"Ball Corporation\",\n        \"Bank of America Corporation\",\n        \"The Bank of New York Company, Inc.\",\n        \"Bank One Corporation\",\n        \"Banknorth Group, Inc.\",\n        \"Banta Corporation\",\n        \"Barnes & Noble, Inc.\",\n        \"Bausch & Lomb Incorporated\",\n        \"Baxter International Inc.\",\n        \"BB&T Corporation\",\n        \"The Bear Stearns Companies Inc.\",\n        \"Beazer Homes USA, Inc.\",\n        \"Beckman Coulter, Inc.\",\n        \"Becton, Dickinson and Company\",\n        \"Bed Bath & Beyond Inc.\",\n        \"Belk, Inc.\",\n        \"Bell Microproducts Inc.\",\n        \"BellSouth Corporation\",\n        \"Belo Corp.\",\n        \"Bemis Company, Inc.\",\n        \"Benchmark Electronics, Inc.\",\n        \"Berkshire Hathaway Inc.\",\n        \"Best Buy Co., Inc.\",\n        \"Bethlehem Steel Corporation\",\n        \"Beverly Enterprises, Inc.\",\n        \"Big Lots, Inc.\",\n        \"BJ Services Company\",\n        \"BJ's Wholesale Club, Inc.\",\n        \"The Black & Decker Corporation\",\n        \"Black Hills Corporation\",\n        \"BMC Software, Inc.\",\n        \"The Boeing Company\",\n        \"Boise Cascade Corporation\",\n        \"Borders Group, Inc.\",\n        \"BorgWarner Inc.\",\n        \"Boston Scientific Corporation\",\n        \"Bowater Incorporated\",\n        \"Briggs & Stratton Corporation\",\n        \"Brightpoint, Inc.\",\n        \"Brinker International, Inc.\",\n        \"Bristol-Myers Squibb Company\",\n        \"Broadwing, Inc.\",\n        \"Brown Shoe Company, Inc.\",\n        \"Brown-Forman Corporation\",\n        \"Brunswick Corporation\",\n        \"Budget Group, Inc.\",\n        \"Burlington Coat Factory Warehouse Corporation\",\n        \"Burlington Industries, Inc.\",\n        \"Burlington Northern Santa Fe Corporation\",\n        \"Burlington Resources Inc.\",\n        \"C. H. Robinson Worldwide Inc.\",\n        \"Cablevision Systems Corp\",\n        \"Cabot Corp\",\n        \"Cadence Design Systems, Inc.\",\n        \"Calpine Corp.\",\n        \"Campbell Soup Co.\",\n        \"Capital One Financial Corp.\",\n        \"Cardinal Health Inc.\",\n        \"Caremark Rx Inc.\",\n        \"Carlisle Cos. Inc.\",\n        \"Carpenter Technology Corp.\",\n        \"Casey's General Stores Inc.\",\n        \"Caterpillar Inc.\",\n        \"CBRL Group Inc.\",\n        \"CDI Corp.\",\n        \"CDW Computer Centers Inc.\",\n        \"CellStar Corp.\",\n        \"Cendant Corp\",\n        \"Cenex Harvest States Cooperatives\",\n        \"Centex Corp.\",\n        \"CenturyTel Inc.\",\n        \"Ceridian Corp.\",\n        \"CH2M Hill Cos. Ltd.\",\n        \"Champion Enterprises Inc.\",\n        \"Charles Schwab Corp.\",\n        \"Charming Shoppes Inc.\",\n        \"Charter Communications Inc.\",\n        \"Charter One Financial Inc.\",\n        \"ChevronTexaco Corp.\",\n        \"Chiquita Brands International Inc.\",\n        \"Chubb Corp\",\n        \"Ciena Corp.\",\n        \"Cigna Corp\",\n        \"Cincinnati Financial Corp.\",\n        \"Cinergy Corp.\",\n        \"Cintas Corp.\",\n        \"Circuit City Stores Inc.\",\n        \"Cisco Systems Inc.\",\n        \"Citigroup, Inc\",\n        \"Citizens Communications Co.\",\n        \"CKE Restaurants Inc.\",\n        \"Clear Channel Communications Inc.\",\n        \"The Clorox Co.\",\n        \"CMGI Inc.\",\n        \"CMS Energy Corp.\",\n        \"CNF Inc.\",\n        \"Coca-Cola Co.\",\n        \"Coca-Cola Enterprises Inc.\",\n        \"Colgate-Palmolive Co.\",\n        \"Collins & Aikman Corp.\",\n        \"Comcast Corp.\",\n        \"Comdisco Inc.\",\n        \"Comerica Inc.\",\n        \"Comfort Systems USA Inc.\",\n        \"Commercial Metals Co.\",\n        \"Community Health Systems Inc.\",\n        \"Compass Bancshares Inc\",\n        \"Computer Associates International Inc.\",\n        \"Computer Sciences Corp.\",\n        \"Compuware Corp.\",\n        \"Comverse Technology Inc.\",\n        \"ConAgra Foods Inc.\",\n        \"Concord EFS Inc.\",\n        \"Conectiv, Inc\",\n        \"Conoco Inc\",\n        \"Conseco Inc.\",\n        \"Consolidated Freightways Corp.\",\n        \"Consolidated Edison Inc.\",\n        \"Constellation Brands Inc.\",\n        \"Constellation Emergy Group Inc.\",\n        \"Continental Airlines Inc.\",\n        \"Convergys Corp.\",\n        \"Cooper Cameron Corp.\",\n        \"Cooper Industries Ltd.\",\n        \"Cooper Tire & Rubber Co.\",\n        \"Corn Products International Inc.\",\n        \"Corning Inc.\",\n        \"Costco Wholesale Corp.\",\n        \"Countrywide Credit Industries Inc.\",\n        \"Coventry Health Care Inc.\",\n        \"Cox Communications Inc.\",\n        \"Crane Co.\",\n        \"Crompton Corp.\",\n        \"Crown Cork & Seal Co. Inc.\",\n        \"CSK Auto Corp.\",\n        \"CSX Corp.\",\n        \"Cummins Inc.\",\n        \"CVS Corp.\",\n        \"Cytec Industries Inc.\",\n        \"D&K Healthcare Resources, Inc.\",\n        \"D.R. Horton Inc.\",\n        \"Dana Corporation\",\n        \"Danaher Corporation\",\n        \"Darden Restaurants Inc.\",\n        \"DaVita Inc.\",\n        \"Dean Foods Company\",\n        \"Deere & Company\",\n        \"Del Monte Foods Co\",\n        \"Dell Computer Corporation\",\n        \"Delphi Corp.\",\n        \"Delta Air Lines Inc.\",\n        \"Deluxe Corporation\",\n        \"Devon Energy Corporation\",\n        \"Di Giorgio Corporation\",\n        \"Dial Corporation\",\n        \"Diebold Incorporated\",\n        \"Dillard's Inc.\",\n        \"DIMON Incorporated\",\n        \"Dole Food Company, Inc.\",\n        \"Dollar General Corporation\",\n        \"Dollar Tree Stores, Inc.\",\n        \"Dominion Resources, Inc.\",\n        \"Domino's Pizza LLC\",\n        \"Dover Corporation, Inc.\",\n        \"Dow Chemical Company\",\n        \"Dow Jones & Company, Inc.\",\n        \"DPL Inc.\",\n        \"DQE Inc.\",\n        \"Dreyer's Grand Ice Cream, Inc.\",\n        \"DST Systems, Inc.\",\n        \"DTE Energy Co.\",\n        \"E.I. Du Pont de Nemours and Company\",\n        \"Duke Energy Corp\",\n        \"Dun & Bradstreet Inc.\",\n        \"DURA Automotive Systems Inc.\",\n        \"DynCorp\",\n        \"Dynegy Inc.\",\n        \"E*Trade Group, Inc.\",\n        \"E.W. Scripps Company\",\n        \"Earthlink, Inc.\",\n        \"Eastman Chemical Company\",\n        \"Eastman Kodak Company\",\n        \"Eaton Corporation\",\n        \"Echostar Communications Corporation\",\n        \"Ecolab Inc.\",\n        \"Edison International\",\n        \"EGL Inc.\",\n        \"El Paso Corporation\",\n        \"Electronic Arts Inc.\",\n        \"Electronic Data Systems Corp.\",\n        \"Eli Lilly and Company\",\n        \"EMC Corporation\",\n        \"Emcor Group Inc.\",\n        \"Emerson Electric Co.\",\n        \"Encompass Services Corporation\",\n        \"Energizer Holdings Inc.\",\n        \"Energy East Corporation\",\n        \"Engelhard Corporation\",\n        \"Enron Corp.\",\n        \"Entergy Corporation\",\n        \"Enterprise Products Partners L.P.\",\n        \"EOG Resources, Inc.\",\n        \"Equifax Inc.\",\n        \"Equitable Resources Inc.\",\n        \"Equity Office Properties Trust\",\n        \"Equity Residential Properties Trust\",\n        \"Estee Lauder Companies Inc.\",\n        \"Exelon Corporation\",\n        \"Exide Technologies\",\n        \"Expeditors International of Washington Inc.\",\n        \"Express Scripts Inc.\",\n        \"ExxonMobil Corporation\",\n        \"Fairchild Semiconductor International Inc.\",\n        \"Family Dollar Stores Inc.\",\n        \"Farmland Industries Inc.\",\n        \"Federal Mogul Corp.\",\n        \"Federated Department Stores Inc.\",\n        \"Federal Express Corp.\",\n        \"Felcor Lodging Trust Inc.\",\n        \"Ferro Corp.\",\n        \"Fidelity National Financial Inc.\",\n        \"Fifth Third Bancorp\",\n        \"First American Financial Corp.\",\n        \"First Data Corp.\",\n        \"First National of Nebraska Inc.\",\n        \"First Tennessee National Corp.\",\n        \"FirstEnergy Corp.\",\n        \"Fiserv Inc.\",\n        \"Fisher Scientific International Inc.\",\n        \"FleetBoston Financial Co.\",\n        \"Fleetwood Enterprises Inc.\",\n        \"Fleming Companies Inc.\",\n        \"Flowers Foods Inc.\",\n        \"Flowserv Corp\",\n        \"Fluor Corp\",\n        \"FMC Corp\",\n        \"Foamex International Inc\",\n        \"Foot Locker Inc\",\n        \"Footstar Inc.\",\n        \"Ford Motor Co\",\n        \"Forest Laboratories Inc.\",\n        \"Fortune Brands Inc.\",\n        \"Foster Wheeler Ltd.\",\n        \"FPL Group Inc.\",\n        \"Franklin Resources Inc.\",\n        \"Freeport McMoran Copper & Gold Inc.\",\n        \"Frontier Oil Corp\",\n        \"Furniture Brands International Inc.\",\n        \"Gannett Co., Inc.\",\n        \"Gap Inc.\",\n        \"Gateway Inc.\",\n        \"GATX Corporation\",\n        \"Gemstar-TV Guide International Inc.\",\n        \"GenCorp Inc.\",\n        \"General Cable Corporation\",\n        \"General Dynamics Corporation\",\n        \"General Electric Company\",\n        \"General Mills Inc\",\n        \"General Motors Corporation\",\n        \"Genesis Health Ventures Inc.\",\n        \"Gentek Inc.\",\n        \"Gentiva Health Services Inc.\",\n        \"Genuine Parts Company\",\n        \"Genuity Inc.\",\n        \"Genzyme Corporation\",\n        \"Georgia Gulf Corporation\",\n        \"Georgia-Pacific Corporation\",\n        \"Gillette Company\",\n        \"Gold Kist Inc.\",\n        \"Golden State Bancorp Inc.\",\n        \"Golden West Financial Corporation\",\n        \"Goldman Sachs Group Inc.\",\n        \"Goodrich Corporation\",\n        \"The Goodyear Tire & Rubber Company\",\n        \"Granite Construction Incorporated\",\n        \"Graybar Electric Company Inc.\",\n        \"Great Lakes Chemical Corporation\",\n        \"Great Plains Energy Inc.\",\n        \"GreenPoint Financial Corp.\",\n        \"Greif Bros. Corporation\",\n        \"Grey Global Group Inc.\",\n        \"Group 1 Automotive Inc.\",\n        \"Guidant Corporation\",\n        \"H&R Block Inc.\",\n        \"H.B. Fuller Company\",\n        \"H.J. Heinz Company\",\n        \"Halliburton Co.\",\n        \"Harley-Davidson Inc.\",\n        \"Harman International Industries Inc.\",\n        \"Harrah's Entertainment Inc.\",\n        \"Harris Corp.\",\n        \"Harsco Corp.\",\n        \"Hartford Financial Services Group Inc.\",\n        \"Hasbro Inc.\",\n        \"Hawaiian Electric Industries Inc.\",\n        \"HCA Inc.\",\n        \"Health Management Associates Inc.\",\n        \"Health Net Inc.\",\n        \"Healthsouth Corp\",\n        \"Henry Schein Inc.\",\n        \"Hercules Inc.\",\n        \"Herman Miller Inc.\",\n        \"Hershey Foods Corp.\",\n        \"Hewlett-Packard Company\",\n        \"Hibernia Corp.\",\n        \"Hillenbrand Industries Inc.\",\n        \"Hilton Hotels Corp.\",\n        \"Hollywood Entertainment Corp.\",\n        \"Home Depot Inc.\",\n        \"Hon Industries Inc.\",\n        \"Honeywell International Inc.\",\n        \"Hormel Foods Corp.\",\n        \"Host Marriott Corp.\",\n        \"Household International Corp.\",\n        \"Hovnanian Enterprises Inc.\",\n        \"Hub Group Inc.\",\n        \"Hubbell Inc.\",\n        \"Hughes Supply Inc.\",\n        \"Humana Inc.\",\n        \"Huntington Bancshares Inc.\",\n        \"Idacorp Inc.\",\n        \"IDT Corporation\",\n        \"IKON Office Solutions Inc.\",\n        \"Illinois Tool Works Inc.\",\n        \"IMC Global Inc.\",\n        \"Imperial Sugar Company\",\n        \"IMS Health Inc.\",\n        \"Ingles Market Inc\",\n        \"Ingram Micro Inc.\",\n        \"Insight Enterprises Inc.\",\n        \"Integrated Electrical Services Inc.\",\n        \"Intel Corporation\",\n        \"International Paper Co.\",\n        \"Interpublic Group of Companies Inc.\",\n        \"Interstate Bakeries Corporation\",\n        \"International Business Machines Corp.\",\n        \"International Flavors & Fragrances Inc.\",\n        \"International Multifoods Corporation\",\n        \"Intuit Inc.\",\n        \"IT Group Inc.\",\n        \"ITT Industries Inc.\",\n        \"Ivax Corp.\",\n        \"J.B. Hunt Transport Services Inc.\",\n        \"J.C. Penny Co.\",\n        \"J.P. Morgan Chase & Co.\",\n        \"Jabil Circuit Inc.\",\n        \"Jack In The Box Inc.\",\n        \"Jacobs Engineering Group Inc.\",\n        \"JDS Uniphase Corp.\",\n        \"Jefferson-Pilot Co.\",\n        \"John Hancock Financial Services Inc.\",\n        \"Johnson & Johnson\",\n        \"Johnson Controls Inc.\",\n        \"Jones Apparel Group Inc.\",\n        \"KB Home\",\n        \"Kellogg Company\",\n        \"Kellwood Company\",\n        \"Kelly Services Inc.\",\n        \"Kemet Corp.\",\n        \"Kennametal Inc.\",\n        \"Kerr-McGee Corporation\",\n        \"KeyCorp\",\n        \"KeySpan Corp.\",\n        \"Kimball International Inc.\",\n        \"Kimberly-Clark Corporation\",\n        \"Kindred Healthcare Inc.\",\n        \"KLA-Tencor Corporation\",\n        \"K-Mart Corp.\",\n        \"Knight-Ridder Inc.\",\n        \"Kohl's Corp.\",\n        \"KPMG Consulting Inc.\",\n        \"Kroger Co.\",\n        \"L-3 Communications Holdings Inc.\",\n        \"Laboratory Corporation of America Holdings\",\n        \"Lam Research Corporation\",\n        \"LandAmerica Financial Group Inc.\",\n        \"Lands' End Inc.\",\n        \"Landstar System Inc.\",\n        \"La-Z-Boy Inc.\",\n        \"Lear Corporation\",\n        \"Legg Mason Inc.\",\n        \"Leggett & Platt Inc.\",\n        \"Lehman Brothers Holdings Inc.\",\n        \"Lennar Corporation\",\n        \"Lennox International Inc.\",\n        \"Level 3 Communications Inc.\",\n        \"Levi Strauss & Co.\",\n        \"Lexmark International Inc.\",\n        \"Limited Inc.\",\n        \"Lincoln National Corporation\",\n        \"Linens 'n Things Inc.\",\n        \"Lithia Motors Inc.\",\n        \"Liz Claiborne Inc.\",\n        \"Lockheed Martin Corporation\",\n        \"Loews Corporation\",\n        \"Longs Drug Stores Corporation\",\n        \"Louisiana-Pacific Corporation\",\n        \"Lowe's Companies Inc.\",\n        \"LSI Logic Corporation\",\n        \"The LTV Corporation\",\n        \"The Lubrizol Corporation\",\n        \"Lucent Technologies Inc.\",\n        \"Lyondell Chemical Company\",\n        \"M & T Bank Corporation\",\n        \"Magellan Health Services Inc.\",\n        \"Mail-Well Inc.\",\n        \"Mandalay Resort Group\",\n        \"Manor Care Inc.\",\n        \"Manpower Inc.\",\n        \"Marathon Oil Corporation\",\n        \"Mariner Health Care Inc.\",\n        \"Markel Corporation\",\n        \"Marriott International Inc.\",\n        \"Marsh & McLennan Companies Inc.\",\n        \"Marsh Supermarkets Inc.\",\n        \"Marshall & Ilsley Corporation\",\n        \"Martin Marietta Materials Inc.\",\n        \"Masco Corporation\",\n        \"Massey Energy Company\",\n        \"MasTec Inc.\",\n        \"Mattel Inc.\",\n        \"Maxim Integrated Products Inc.\",\n        \"Maxtor Corporation\",\n        \"Maxxam Inc.\",\n        \"The May Department Stores Company\",\n        \"Maytag Corporation\",\n        \"MBNA Corporation\",\n        \"McCormick & Company Incorporated\",\n        \"McDonald's Corporation\",\n        \"The McGraw-Hill Companies Inc.\",\n        \"McKesson Corporation\",\n        \"McLeodUSA Incorporated\",\n        \"M.D.C. Holdings Inc.\",\n        \"MDU Resources Group Inc.\",\n        \"MeadWestvaco Corporation\",\n        \"Medtronic Inc.\",\n        \"Mellon Financial Corporation\",\n        \"The Men's Wearhouse Inc.\",\n        \"Merck & Co., Inc.\",\n        \"Mercury General Corporation\",\n        \"Merrill Lynch & Co. Inc.\",\n        \"Metaldyne Corporation\",\n        \"Metals USA Inc.\",\n        \"MetLife Inc.\",\n        \"Metris Companies Inc\",\n        \"MGIC Investment Corporation\",\n        \"MGM Mirage\",\n        \"Michaels Stores Inc.\",\n        \"Micron Technology Inc.\",\n        \"Microsoft Corporation\",\n        \"Milacron Inc.\",\n        \"Millennium Chemicals Inc.\",\n        \"Mirant Corporation\",\n        \"Mohawk Industries Inc.\",\n        \"Molex Incorporated\",\n        \"The MONY Group Inc.\",\n        \"Morgan Stanley Dean Witter & Co.\",\n        \"Motorola Inc.\",\n        \"MPS Group Inc.\",\n        \"Murphy Oil Corporation\",\n        \"Nabors Industries Inc\",\n        \"Nacco Industries Inc\",\n        \"Nash Finch Company\",\n        \"National City Corp.\",\n        \"National Commerce Financial Corporation\",\n        \"National Fuel Gas Company\",\n        \"National Oilwell Inc\",\n        \"National Rural Utilities Cooperative Finance Corporation\",\n        \"National Semiconductor Corporation\",\n        \"National Service Industries Inc\",\n        \"Navistar International Corporation\",\n        \"NCR Corporation\",\n        \"The Neiman Marcus Group Inc.\",\n        \"New Jersey Resources Corporation\",\n        \"New York Times Company\",\n        \"Newell Rubbermaid Inc\",\n        \"Newmont Mining Corporation\",\n        \"Nextel Communications Inc\",\n        \"Nicor Inc\",\n        \"Nike Inc\",\n        \"NiSource Inc\",\n        \"Noble Energy Inc\",\n        \"Nordstrom Inc\",\n        \"Norfolk Southern Corporation\",\n        \"Nortek Inc\",\n        \"North Fork Bancorporation Inc\",\n        \"Northeast Utilities System\",\n        \"Northern Trust Corporation\",\n        \"Northrop Grumman Corporation\",\n        \"NorthWestern Corporation\",\n        \"Novellus Systems Inc\",\n        \"NSTAR\",\n        \"NTL Incorporated\",\n        \"Nucor Corp\",\n        \"Nvidia Corp\",\n        \"NVR Inc\",\n        \"Northwest Airlines Corp\",\n        \"Occidental Petroleum Corp\",\n        \"Ocean Energy Inc\",\n        \"Office Depot Inc.\",\n        \"OfficeMax Inc\",\n        \"OGE Energy Corp\",\n        \"Oglethorpe Power Corp.\",\n        \"Ohio Casualty Corp.\",\n        \"Old Republic International Corp.\",\n        \"Olin Corp.\",\n        \"OM Group Inc\",\n        \"Omnicare Inc\",\n        \"Omnicom Group\",\n        \"On Semiconductor Corp\",\n        \"ONEOK Inc\",\n        \"Oracle Corp\",\n        \"Oshkosh Truck Corp\",\n        \"Outback Steakhouse Inc.\",\n        \"Owens & Minor Inc.\",\n        \"Owens Corning\",\n        \"Owens-Illinois Inc\",\n        \"Oxford Health Plans Inc\",\n        \"Paccar Inc\",\n        \"PacifiCare Health Systems Inc\",\n        \"Packaging Corp. of America\",\n        \"Pactiv Corp\",\n        \"Pall Corp\",\n        \"Pantry Inc\",\n        \"Park Place Entertainment Corp\",\n        \"Parker Hannifin Corp.\",\n        \"Pathmark Stores Inc.\",\n        \"Paychex Inc\",\n        \"Payless Shoesource Inc\",\n        \"Penn Traffic Co.\",\n        \"Pennzoil-Quaker State Company\",\n        \"Pentair Inc\",\n        \"Peoples Energy Corp.\",\n        \"PeopleSoft Inc\",\n        \"Pep Boys Manny, Moe & Jack\",\n        \"Potomac Electric Power Co.\",\n        \"Pepsi Bottling Group Inc.\",\n        \"PepsiAmericas Inc.\",\n        \"PepsiCo Inc.\",\n        \"Performance Food Group Co.\",\n        \"Perini Corp\",\n        \"PerkinElmer Inc\",\n        \"Perot Systems Corp\",\n        \"Petco Animal Supplies Inc.\",\n        \"Peter Kiewit Sons', Inc.\",\n        \"PETsMART Inc\",\n        \"Pfizer Inc\",\n        \"Pacific Gas & Electric Corp.\",\n        \"Pharmacia Corp\",\n        \"Phar Mor Inc.\",\n        \"Phelps Dodge Corp.\",\n        \"Philip Morris Companies Inc.\",\n        \"Phillips Petroleum Co\",\n        \"Phillips Van Heusen Corp.\",\n        \"Phoenix Companies Inc\",\n        \"Pier 1 Imports Inc.\",\n        \"Pilgrim's Pride Corporation\",\n        \"Pinnacle West Capital Corp\",\n        \"Pioneer-Standard Electronics Inc.\",\n        \"Pitney Bowes Inc.\",\n        \"Pittston Brinks Group\",\n        \"Plains All American Pipeline LP\",\n        \"PNC Financial Services Group Inc.\",\n        \"PNM Resources Inc\",\n        \"Polaris Industries Inc.\",\n        \"Polo Ralph Lauren Corp\",\n        \"PolyOne Corp\",\n        \"Popular Inc\",\n        \"Potlatch Corp\",\n        \"PPG Industries Inc\",\n        \"PPL Corp\",\n        \"Praxair Inc\",\n        \"Precision Castparts Corp\",\n        \"Premcor Inc.\",\n        \"Pride International Inc\",\n        \"Primedia Inc\",\n        \"Principal Financial Group Inc.\",\n        \"Procter & Gamble Co.\",\n        \"Pro-Fac Cooperative Inc.\",\n        \"Progress Energy Inc\",\n        \"Progressive Corporation\",\n        \"Protective Life Corp\",\n        \"Provident Financial Group\",\n        \"Providian Financial Corp.\",\n        \"Prudential Financial Inc.\",\n        \"PSS World Medical Inc\",\n        \"Public Service Enterprise Group Inc.\",\n        \"Publix Super Markets Inc.\",\n        \"Puget Energy Inc.\",\n        \"Pulte Homes Inc\",\n        \"Qualcomm Inc\",\n        \"Quanta Services Inc.\",\n        \"Quantum Corp\",\n        \"Quest Diagnostics Inc.\",\n        \"Questar Corp\",\n        \"Quintiles Transnational\",\n        \"Qwest Communications Intl Inc\",\n        \"R.J. Reynolds Tobacco Company\",\n        \"R.R. Donnelley & Sons Company\",\n        \"Radio Shack Corporation\",\n        \"Raymond James Financial Inc.\",\n        \"Raytheon Company\",\n        \"Reader's Digest Association Inc.\",\n        \"Reebok International Ltd.\",\n        \"Regions Financial Corp.\",\n        \"Regis Corporation\",\n        \"Reliance Steel & Aluminum Co.\",\n        \"Reliant Energy Inc.\",\n        \"Rent A Center Inc\",\n        \"Republic Services Inc\",\n        \"Revlon Inc\",\n        \"RGS Energy Group Inc\",\n        \"Rite Aid Corp\",\n        \"Riverwood Holding Inc.\",\n        \"RoadwayCorp\",\n        \"Robert Half International Inc.\",\n        \"Rock-Tenn Co\",\n        \"Rockwell Automation Inc\",\n        \"Rockwell Collins Inc\",\n        \"Rohm & Haas Co.\",\n        \"Ross Stores Inc\",\n        \"RPM Inc.\",\n        \"Ruddick Corp\",\n        \"Ryder System Inc\",\n        \"Ryerson Tull Inc\",\n        \"Ryland Group Inc.\",\n        \"Sabre Holdings Corp\",\n        \"Safeco Corp\",\n        \"Safeguard Scientifics Inc.\",\n        \"Safeway Inc\",\n        \"Saks Inc\",\n        \"Sanmina-SCI Inc\",\n        \"Sara Lee Corp\",\n        \"SBC Communications Inc\",\n        \"Scana Corp.\",\n        \"Schering-Plough Corp\",\n        \"Scholastic Corp\",\n        \"SCI Systems Onc.\",\n        \"Science Applications Intl. Inc.\",\n        \"Scientific-Atlanta Inc\",\n        \"Scotts Company\",\n        \"Seaboard Corp\",\n        \"Sealed Air Corp\",\n        \"Sears Roebuck & Co\",\n        \"Sempra Energy\",\n        \"Sequa Corp\",\n        \"Service Corp. International\",\n        \"ServiceMaster Co\",\n        \"Shaw Group Inc\",\n        \"Sherwin-Williams Company\",\n        \"Shopko Stores Inc\",\n        \"Siebel Systems Inc\",\n        \"Sierra Health Services Inc\",\n        \"Sierra Pacific Resources\",\n        \"Silgan Holdings Inc.\",\n        \"Silicon Graphics Inc\",\n        \"Simon Property Group Inc\",\n        \"SLM Corporation\",\n        \"Smith International Inc\",\n        \"Smithfield Foods Inc\",\n        \"Smurfit-Stone Container Corp\",\n        \"Snap-On Inc\",\n        \"Solectron Corp\",\n        \"Solutia Inc\",\n        \"Sonic Automotive Inc.\",\n        \"Sonoco Products Co.\",\n        \"Southern Company\",\n        \"Southern Union Company\",\n        \"SouthTrust Corp.\",\n        \"Southwest Airlines Co\",\n        \"Southwest Gas Corp\",\n        \"Sovereign Bancorp Inc.\",\n        \"Spartan Stores Inc\",\n        \"Spherion Corp\",\n        \"Sports Authority Inc\",\n        \"Sprint Corp.\",\n        \"SPX Corp\",\n        \"St. Jude Medical Inc\",\n        \"St. Paul Cos.\",\n        \"Staff Leasing Inc.\",\n        \"StanCorp Financial Group Inc\",\n        \"Standard Pacific Corp.\",\n        \"Stanley Works\",\n        \"Staples Inc\",\n        \"Starbucks Corp\",\n        \"Starwood Hotels & Resorts Worldwide Inc\",\n        \"State Street Corp.\",\n        \"Stater Bros. Holdings Inc.\",\n        \"Steelcase Inc\",\n        \"Stein Mart Inc\",\n        \"Stewart & Stevenson Services Inc\",\n        \"Stewart Information Services Corp\",\n        \"Stilwell Financial Inc\",\n        \"Storage Technology Corporation\",\n        \"Stryker Corp\",\n        \"Sun Healthcare Group Inc.\",\n        \"Sun Microsystems Inc.\",\n        \"SunGard Data Systems Inc.\",\n        \"Sunoco Inc.\",\n        \"SunTrust Banks Inc\",\n        \"Supervalu Inc\",\n        \"Swift Transportation, Co., Inc\",\n        \"Symbol Technologies Inc\",\n        \"Synovus Financial Corp.\",\n        \"Sysco Corp\",\n        \"Systemax Inc.\",\n        \"Target Corp.\",\n        \"Tech Data Corporation\",\n        \"TECO Energy Inc\",\n        \"Tecumseh Products Company\",\n        \"Tektronix Inc\",\n        \"Teleflex Incorporated\",\n        \"Telephone & Data Systems Inc\",\n        \"Tellabs Inc.\",\n        \"Temple-Inland Inc\",\n        \"Tenet Healthcare Corporation\",\n        \"Tenneco Automotive Inc.\",\n        \"Teradyne Inc\",\n        \"Terex Corp\",\n        \"Tesoro Petroleum Corp.\",\n        \"Texas Industries Inc.\",\n        \"Texas Instruments Incorporated\",\n        \"Textron Inc\",\n        \"Thermo Electron Corporation\",\n        \"Thomas & Betts Corporation\",\n        \"Tiffany & Co\",\n        \"Timken Company\",\n        \"TJX Companies Inc\",\n        \"TMP Worldwide Inc\",\n        \"Toll Brothers Inc\",\n        \"Torchmark Corporation\",\n        \"Toro Company\",\n        \"Tower Automotive Inc.\",\n        \"Toys 'R' Us Inc\",\n        \"Trans World Entertainment Corp.\",\n        \"TransMontaigne Inc\",\n        \"Transocean Inc\",\n        \"TravelCenters of America Inc.\",\n        \"Triad Hospitals Inc\",\n        \"Tribune Company\",\n        \"Trigon Healthcare Inc.\",\n        \"Trinity Industries Inc\",\n        \"Trump Hotels & Casino Resorts Inc.\",\n        \"TruServ Corporation\",\n        \"TRW Inc\",\n        \"TXU Corp\",\n        \"Tyson Foods Inc\",\n        \"U.S. Bancorp\",\n        \"U.S. Industries Inc.\",\n        \"UAL Corporation\",\n        \"UGI Corporation\",\n        \"Unified Western Grocers Inc\",\n        \"Union Pacific Corporation\",\n        \"Union Planters Corp\",\n        \"Unisource Energy Corp\",\n        \"Unisys Corporation\",\n        \"United Auto Group Inc\",\n        \"United Defense Industries Inc.\",\n        \"United Parcel Service Inc\",\n        \"United Rentals Inc\",\n        \"United Stationers Inc\",\n        \"United Technologies Corporation\",\n        \"UnitedHealth Group Incorporated\",\n        \"Unitrin Inc\",\n        \"Universal Corporation\",\n        \"Universal Forest Products Inc\",\n        \"Universal Health Services Inc\",\n        \"Unocal Corporation\",\n        \"Unova Inc\",\n        \"UnumProvident Corporation\",\n        \"URS Corporation\",\n        \"US Airways Group Inc\",\n        \"US Oncology Inc\",\n        \"USA Interactive\",\n        \"USFreighways Corporation\",\n        \"USG Corporation\",\n        \"UST Inc\",\n        \"Valero Energy Corporation\",\n        \"Valspar Corporation\",\n        \"Value City Department Stores Inc\",\n        \"Varco International Inc\",\n        \"Vectren Corporation\",\n        \"Veritas Software Corporation\",\n        \"Verizon Communications Inc\",\n        \"VF Corporation\",\n        \"Viacom Inc\",\n        \"Viad Corp\",\n        \"Viasystems Group Inc\",\n        \"Vishay Intertechnology Inc\",\n        \"Visteon Corporation\",\n        \"Volt Information Sciences Inc\",\n        \"Vulcan Materials Company\",\n        \"W.R. Berkley Corporation\",\n        \"W.R. Grace & Co\",\n        \"W.W. Grainger Inc\",\n        \"Wachovia Corporation\",\n        \"Wakenhut Corporation\",\n        \"Walgreen Co\",\n        \"Wallace Computer Services Inc\",\n        \"Wal-Mart Stores Inc\",\n        \"Walt Disney Co\",\n        \"Walter Industries Inc\",\n        \"Washington Mutual Inc\",\n        \"Washington Post Co.\",\n        \"Waste Management Inc\",\n        \"Watsco Inc\",\n        \"Weatherford International Inc\",\n        \"Weis Markets Inc.\",\n        \"Wellpoint Health Networks Inc\",\n        \"Wells Fargo & Company\",\n        \"Wendy's International Inc\",\n        \"Werner Enterprises Inc\",\n        \"WESCO International Inc\",\n        \"Western Digital Inc\",\n        \"Western Gas Resources Inc\",\n        \"WestPoint Stevens Inc\",\n        \"Weyerhauser Company\",\n        \"WGL Holdings Inc\",\n        \"Whirlpool Corporation\",\n        \"Whole Foods Market Inc\",\n        \"Willamette Industries Inc.\",\n        \"Williams Companies Inc\",\n        \"Williams Sonoma Inc\",\n        \"Winn Dixie Stores Inc\",\n        \"Wisconsin Energy Corporation\",\n        \"Wm Wrigley Jr Company\",\n        \"World Fuel Services Corporation\",\n        \"WorldCom Inc\",\n        \"Worthington Industries Inc\",\n        \"WPS Resources Corporation\",\n        \"Wyeth\",\n        \"Wyndham International Inc\",\n        \"Xcel Energy Inc\",\n        \"Xerox Corp\",\n        \"Xilinx Inc\",\n        \"XO Communications Inc\",\n        \"Yellow Corporation\",\n        \"York International Corp\",\n        \"Yum Brands Inc.\",\n        \"Zale Corporation\",\n        \"Zions Bancorporation\"\n      ],\n\n        fileExtension : {\n            \"raster\"    : [\"bmp\", \"gif\", \"gpl\", \"ico\", \"jpeg\", \"psd\", \"png\", \"psp\", \"raw\", \"tiff\"],\n            \"vector\"    : [\"3dv\", \"amf\", \"awg\", \"ai\", \"cgm\", \"cdr\", \"cmx\", \"dxf\", \"e2d\", \"egt\", \"eps\", \"fs\", \"odg\", \"svg\", \"xar\"],\n            \"3d\"        : [\"3dmf\", \"3dm\", \"3mf\", \"3ds\", \"an8\", \"aoi\", \"blend\", \"cal3d\", \"cob\", \"ctm\", \"iob\", \"jas\", \"max\", \"mb\", \"mdx\", \"obj\", \"x\", \"x3d\"],\n            \"document\"  : [\"doc\", \"docx\", \"dot\", \"html\", \"xml\", \"odt\", \"odm\", \"ott\", \"csv\", \"rtf\", \"tex\", \"xhtml\", \"xps\"]\n        },\n\n        // Data taken from https://github.com/dmfilipenko/timezones.json/blob/master/timezones.json\n        timezones: [\n                  {\n                    \"name\": \"Dateline Standard Time\",\n                    \"abbr\": \"DST\",\n                    \"offset\": -12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-12:00) International Date Line West\",\n                    \"utc\": [\n                      \"Etc/GMT+12\"\n                    ]\n                  },\n                  {\n                    \"name\": \"UTC-11\",\n                    \"abbr\": \"U\",\n                    \"offset\": -11,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n                    \"utc\": [\n                      \"Etc/GMT+11\",\n                      \"Pacific/Midway\",\n                      \"Pacific/Niue\",\n                      \"Pacific/Pago_Pago\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Hawaiian Standard Time\",\n                    \"abbr\": \"HST\",\n                    \"offset\": -10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-10:00) Hawaii\",\n                    \"utc\": [\n                      \"Etc/GMT+10\",\n                      \"Pacific/Honolulu\",\n                      \"Pacific/Johnston\",\n                      \"Pacific/Rarotonga\",\n                      \"Pacific/Tahiti\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Alaskan Standard Time\",\n                    \"abbr\": \"AKDT\",\n                    \"offset\": -8,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-09:00) Alaska\",\n                    \"utc\": [\n                      \"America/Anchorage\",\n                      \"America/Juneau\",\n                      \"America/Nome\",\n                      \"America/Sitka\",\n                      \"America/Yakutat\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pacific Standard Time (Mexico)\",\n                    \"abbr\": \"PDT\",\n                    \"offset\": -7,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-08:00) Baja California\",\n                    \"utc\": [\n                      \"America/Santa_Isabel\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pacific Daylight Time\",\n                    \"abbr\": \"PDT\",\n                    \"offset\": -7,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Dawson\",\n                      \"America/Los_Angeles\",\n                      \"America/Tijuana\",\n                      \"America/Vancouver\",\n                      \"America/Whitehorse\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pacific Standard Time\",\n                    \"abbr\": \"PST\",\n                    \"offset\": -8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Dawson\",\n                      \"America/Los_Angeles\",\n                      \"America/Tijuana\",\n                      \"America/Vancouver\",\n                      \"America/Whitehorse\",\n                      \"PST8PDT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"US Mountain Standard Time\",\n                    \"abbr\": \"UMST\",\n                    \"offset\": -7,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-07:00) Arizona\",\n                    \"utc\": [\n                      \"America/Creston\",\n                      \"America/Dawson_Creek\",\n                      \"America/Hermosillo\",\n                      \"America/Phoenix\",\n                      \"Etc/GMT+7\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Mountain Standard Time (Mexico)\",\n                    \"abbr\": \"MDT\",\n                    \"offset\": -6,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n                    \"utc\": [\n                      \"America/Chihuahua\",\n                      \"America/Mazatlan\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Mountain Standard Time\",\n                    \"abbr\": \"MDT\",\n                    \"offset\": -6,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Boise\",\n                      \"America/Cambridge_Bay\",\n                      \"America/Denver\",\n                      \"America/Edmonton\",\n                      \"America/Inuvik\",\n                      \"America/Ojinaga\",\n                      \"America/Yellowknife\",\n                      \"MST7MDT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central America Standard Time\",\n                    \"abbr\": \"CAST\",\n                    \"offset\": -6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-06:00) Central America\",\n                    \"utc\": [\n                      \"America/Belize\",\n                      \"America/Costa_Rica\",\n                      \"America/El_Salvador\",\n                      \"America/Guatemala\",\n                      \"America/Managua\",\n                      \"America/Tegucigalpa\",\n                      \"Etc/GMT+6\",\n                      \"Pacific/Galapagos\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Standard Time\",\n                    \"abbr\": \"CDT\",\n                    \"offset\": -5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Chicago\",\n                      \"America/Indiana/Knox\",\n                      \"America/Indiana/Tell_City\",\n                      \"America/Matamoros\",\n                      \"America/Menominee\",\n                      \"America/North_Dakota/Beulah\",\n                      \"America/North_Dakota/Center\",\n                      \"America/North_Dakota/New_Salem\",\n                      \"America/Rainy_River\",\n                      \"America/Rankin_Inlet\",\n                      \"America/Resolute\",\n                      \"America/Winnipeg\",\n                      \"CST6CDT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Standard Time (Mexico)\",\n                    \"abbr\": \"CDT\",\n                    \"offset\": -5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n                    \"utc\": [\n                      \"America/Bahia_Banderas\",\n                      \"America/Cancun\",\n                      \"America/Merida\",\n                      \"America/Mexico_City\",\n                      \"America/Monterrey\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Canada Central Standard Time\",\n                    \"abbr\": \"CCST\",\n                    \"offset\": -6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-06:00) Saskatchewan\",\n                    \"utc\": [\n                      \"America/Regina\",\n                      \"America/Swift_Current\"\n                    ]\n                  },\n                  {\n                    \"name\": \"SA Pacific Standard Time\",\n                    \"abbr\": \"SPST\",\n                    \"offset\": -5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n                    \"utc\": [\n                      \"America/Bogota\",\n                      \"America/Cayman\",\n                      \"America/Coral_Harbour\",\n                      \"America/Eirunepe\",\n                      \"America/Guayaquil\",\n                      \"America/Jamaica\",\n                      \"America/Lima\",\n                      \"America/Panama\",\n                      \"America/Rio_Branco\",\n                      \"Etc/GMT+5\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Eastern Standard Time\",\n                    \"abbr\": \"EDT\",\n                    \"offset\": -4,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Detroit\",\n                      \"America/Havana\",\n                      \"America/Indiana/Petersburg\",\n                      \"America/Indiana/Vincennes\",\n                      \"America/Indiana/Winamac\",\n                      \"America/Iqaluit\",\n                      \"America/Kentucky/Monticello\",\n                      \"America/Louisville\",\n                      \"America/Montreal\",\n                      \"America/Nassau\",\n                      \"America/New_York\",\n                      \"America/Nipigon\",\n                      \"America/Pangnirtung\",\n                      \"America/Port-au-Prince\",\n                      \"America/Thunder_Bay\",\n                      \"America/Toronto\",\n                      \"EST5EDT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"US Eastern Standard Time\",\n                    \"abbr\": \"UEDT\",\n                    \"offset\": -4,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-05:00) Indiana (East)\",\n                    \"utc\": [\n                      \"America/Indiana/Marengo\",\n                      \"America/Indiana/Vevay\",\n                      \"America/Indianapolis\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Venezuela Standard Time\",\n                    \"abbr\": \"VST\",\n                    \"offset\": -4.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:30) Caracas\",\n                    \"utc\": [\n                      \"America/Caracas\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Paraguay Standard Time\",\n                    \"abbr\": \"PYT\",\n                    \"offset\": -4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:00) Asuncion\",\n                    \"utc\": [\n                      \"America/Asuncion\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Atlantic Standard Time\",\n                    \"abbr\": \"ADT\",\n                    \"offset\": -3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n                    \"utc\": [\n                      \"America/Glace_Bay\",\n                      \"America/Goose_Bay\",\n                      \"America/Halifax\",\n                      \"America/Moncton\",\n                      \"America/Thule\",\n                      \"Atlantic/Bermuda\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Brazilian Standard Time\",\n                    \"abbr\": \"CBST\",\n                    \"offset\": -4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:00) Cuiaba\",\n                    \"utc\": [\n                      \"America/Campo_Grande\",\n                      \"America/Cuiaba\"\n                    ]\n                  },\n                  {\n                    \"name\": \"SA Western Standard Time\",\n                    \"abbr\": \"SWST\",\n                    \"offset\": -4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n                    \"utc\": [\n                      \"America/Anguilla\",\n                      \"America/Antigua\",\n                      \"America/Aruba\",\n                      \"America/Barbados\",\n                      \"America/Blanc-Sablon\",\n                      \"America/Boa_Vista\",\n                      \"America/Curacao\",\n                      \"America/Dominica\",\n                      \"America/Grand_Turk\",\n                      \"America/Grenada\",\n                      \"America/Guadeloupe\",\n                      \"America/Guyana\",\n                      \"America/Kralendijk\",\n                      \"America/La_Paz\",\n                      \"America/Lower_Princes\",\n                      \"America/Manaus\",\n                      \"America/Marigot\",\n                      \"America/Martinique\",\n                      \"America/Montserrat\",\n                      \"America/Port_of_Spain\",\n                      \"America/Porto_Velho\",\n                      \"America/Puerto_Rico\",\n                      \"America/Santo_Domingo\",\n                      \"America/St_Barthelemy\",\n                      \"America/St_Kitts\",\n                      \"America/St_Lucia\",\n                      \"America/St_Thomas\",\n                      \"America/St_Vincent\",\n                      \"America/Tortola\",\n                      \"Etc/GMT+4\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pacific SA Standard Time\",\n                    \"abbr\": \"PSST\",\n                    \"offset\": -4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:00) Santiago\",\n                    \"utc\": [\n                      \"America/Santiago\",\n                      \"Antarctica/Palmer\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Newfoundland Standard Time\",\n                    \"abbr\": \"NDT\",\n                    \"offset\": -2.5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-03:30) Newfoundland\",\n                    \"utc\": [\n                      \"America/St_Johns\"\n                    ]\n                  },\n                  {\n                    \"name\": \"E. South America Standard Time\",\n                    \"abbr\": \"ESAST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Brasilia\",\n                    \"utc\": [\n                      \"America/Sao_Paulo\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Argentina Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Buenos Aires\",\n                    \"utc\": [\n                      \"America/Argentina/La_Rioja\",\n                      \"America/Argentina/Rio_Gallegos\",\n                      \"America/Argentina/Salta\",\n                      \"America/Argentina/San_Juan\",\n                      \"America/Argentina/San_Luis\",\n                      \"America/Argentina/Tucuman\",\n                      \"America/Argentina/Ushuaia\",\n                      \"America/Buenos_Aires\",\n                      \"America/Catamarca\",\n                      \"America/Cordoba\",\n                      \"America/Jujuy\",\n                      \"America/Mendoza\"\n                    ]\n                  },\n                  {\n                    \"name\": \"SA Eastern Standard Time\",\n                    \"abbr\": \"SEST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n                    \"utc\": [\n                      \"America/Araguaina\",\n                      \"America/Belem\",\n                      \"America/Cayenne\",\n                      \"America/Fortaleza\",\n                      \"America/Maceio\",\n                      \"America/Paramaribo\",\n                      \"America/Recife\",\n                      \"America/Santarem\",\n                      \"Antarctica/Rothera\",\n                      \"Atlantic/Stanley\",\n                      \"Etc/GMT+3\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Greenland Standard Time\",\n                    \"abbr\": \"GDT\",\n                    \"offset\": -3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-03:00) Greenland\",\n                    \"utc\": [\n                      \"America/Godthab\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Montevideo Standard Time\",\n                    \"abbr\": \"MST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Montevideo\",\n                    \"utc\": [\n                      \"America/Montevideo\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Bahia Standard Time\",\n                    \"abbr\": \"BST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Salvador\",\n                    \"utc\": [\n                      \"America/Bahia\"\n                    ]\n                  },\n                  {\n                    \"name\": \"UTC-02\",\n                    \"abbr\": \"U\",\n                    \"offset\": -2,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n                    \"utc\": [\n                      \"America/Noronha\",\n                      \"Atlantic/South_Georgia\",\n                      \"Etc/GMT+2\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Mid-Atlantic Standard Time\",\n                    \"abbr\": \"MDT\",\n                    \"offset\": -1,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n                    \"utc\": []\n                  },\n                  {\n                    \"name\": \"Azores Standard Time\",\n                    \"abbr\": \"ADT\",\n                    \"offset\": 0,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-01:00) Azores\",\n                    \"utc\": [\n                      \"America/Scoresbysund\",\n                      \"Atlantic/Azores\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Cape Verde Standard Time\",\n                    \"abbr\": \"CVST\",\n                    \"offset\": -1,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-01:00) Cape Verde Is.\",\n                    \"utc\": [\n                      \"Atlantic/Cape_Verde\",\n                      \"Etc/GMT+1\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Morocco Standard Time\",\n                    \"abbr\": \"MDT\",\n                    \"offset\": 1,\n                    \"isdst\": true,\n                    \"text\": \"(UTC) Casablanca\",\n                    \"utc\": [\n                      \"Africa/Casablanca\",\n                      \"Africa/El_Aaiun\"\n                    ]\n                  },\n                  {\n                    \"name\": \"UTC\",\n                    \"abbr\": \"UTC\",\n                    \"offset\": 0,\n                    \"isdst\": false,\n                    \"text\": \"(UTC) Coordinated Universal Time\",\n                    \"utc\": [\n                      \"America/Danmarkshavn\",\n                      \"Etc/GMT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"GMT Standard Time\",\n                    \"abbr\": \"GMT\",\n                    \"offset\": 0,\n                    \"isdst\": false,\n                    \"text\": \"(UTC) Edinburgh, London\",\n                    \"utc\": [\n                      \"Europe/Isle_of_Man\",\n                      \"Europe/Guernsey\",\n                      \"Europe/Jersey\",\n                      \"Europe/London\"\n                    ]\n                  },\n                  {\n                    \"name\": \"British Summer Time\",\n                    \"abbr\": \"BST\",\n                    \"offset\": 1,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Edinburgh, London\",\n                    \"utc\": [\n                      \"Europe/Isle_of_Man\",\n                      \"Europe/Guernsey\",\n                      \"Europe/Jersey\",\n                      \"Europe/London\"\n                    ]\n                  },\n                  {\n                    \"name\": \"GMT Standard Time\",\n                    \"abbr\": \"GDT\",\n                    \"offset\": 1,\n                    \"isdst\": true,\n                    \"text\": \"(UTC) Dublin, Lisbon\",\n                    \"utc\": [\n                      \"Atlantic/Canary\",\n                      \"Atlantic/Faeroe\",\n                      \"Atlantic/Madeira\",\n                      \"Europe/Dublin\",\n                      \"Europe/Lisbon\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Greenwich Standard Time\",\n                    \"abbr\": \"GST\",\n                    \"offset\": 0,\n                    \"isdst\": false,\n                    \"text\": \"(UTC) Monrovia, Reykjavik\",\n                    \"utc\": [\n                      \"Africa/Abidjan\",\n                      \"Africa/Accra\",\n                      \"Africa/Bamako\",\n                      \"Africa/Banjul\",\n                      \"Africa/Bissau\",\n                      \"Africa/Conakry\",\n                      \"Africa/Dakar\",\n                      \"Africa/Freetown\",\n                      \"Africa/Lome\",\n                      \"Africa/Monrovia\",\n                      \"Africa/Nouakchott\",\n                      \"Africa/Ouagadougou\",\n                      \"Africa/Sao_Tome\",\n                      \"Atlantic/Reykjavik\",\n                      \"Atlantic/St_Helena\"\n                    ]\n                  },\n                  {\n                    \"name\": \"W. Europe Standard Time\",\n                    \"abbr\": \"WEDT\",\n                    \"offset\": 2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n                    \"utc\": [\n                      \"Arctic/Longyearbyen\",\n                      \"Europe/Amsterdam\",\n                      \"Europe/Andorra\",\n                      \"Europe/Berlin\",\n                      \"Europe/Busingen\",\n                      \"Europe/Gibraltar\",\n                      \"Europe/Luxembourg\",\n                      \"Europe/Malta\",\n                      \"Europe/Monaco\",\n                      \"Europe/Oslo\",\n                      \"Europe/Rome\",\n                      \"Europe/San_Marino\",\n                      \"Europe/Stockholm\",\n                      \"Europe/Vaduz\",\n                      \"Europe/Vatican\",\n                      \"Europe/Vienna\",\n                      \"Europe/Zurich\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Europe Standard Time\",\n                    \"abbr\": \"CEDT\",\n                    \"offset\": 2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n                    \"utc\": [\n                      \"Europe/Belgrade\",\n                      \"Europe/Bratislava\",\n                      \"Europe/Budapest\",\n                      \"Europe/Ljubljana\",\n                      \"Europe/Podgorica\",\n                      \"Europe/Prague\",\n                      \"Europe/Tirane\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Romance Standard Time\",\n                    \"abbr\": \"RDT\",\n                    \"offset\": 2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n                    \"utc\": [\n                      \"Africa/Ceuta\",\n                      \"Europe/Brussels\",\n                      \"Europe/Copenhagen\",\n                      \"Europe/Madrid\",\n                      \"Europe/Paris\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central European Standard Time\",\n                    \"abbr\": \"CEDT\",\n                    \"offset\": 2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n                    \"utc\": [\n                      \"Europe/Sarajevo\",\n                      \"Europe/Skopje\",\n                      \"Europe/Warsaw\",\n                      \"Europe/Zagreb\"\n                    ]\n                  },\n                  {\n                    \"name\": \"W. Central Africa Standard Time\",\n                    \"abbr\": \"WCAST\",\n                    \"offset\": 1,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+01:00) West Central Africa\",\n                    \"utc\": [\n                      \"Africa/Algiers\",\n                      \"Africa/Bangui\",\n                      \"Africa/Brazzaville\",\n                      \"Africa/Douala\",\n                      \"Africa/Kinshasa\",\n                      \"Africa/Lagos\",\n                      \"Africa/Libreville\",\n                      \"Africa/Luanda\",\n                      \"Africa/Malabo\",\n                      \"Africa/Ndjamena\",\n                      \"Africa/Niamey\",\n                      \"Africa/Porto-Novo\",\n                      \"Africa/Tunis\",\n                      \"Etc/GMT-1\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Namibia Standard Time\",\n                    \"abbr\": \"NST\",\n                    \"offset\": 1,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+01:00) Windhoek\",\n                    \"utc\": [\n                      \"Africa/Windhoek\"\n                    ]\n                  },\n                  {\n                    \"name\": \"GTB Standard Time\",\n                    \"abbr\": \"GDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Athens, Bucharest\",\n                    \"utc\": [\n                      \"Asia/Nicosia\",\n                      \"Europe/Athens\",\n                      \"Europe/Bucharest\",\n                      \"Europe/Chisinau\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Middle East Standard Time\",\n                    \"abbr\": \"MEDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Beirut\",\n                    \"utc\": [\n                      \"Asia/Beirut\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Egypt Standard Time\",\n                    \"abbr\": \"EST\",\n                    \"offset\": 2,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+02:00) Cairo\",\n                    \"utc\": [\n                      \"Africa/Cairo\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Syria Standard Time\",\n                    \"abbr\": \"SDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Damascus\",\n                    \"utc\": [\n                      \"Asia/Damascus\"\n                    ]\n                  },\n                  {\n                    \"name\": \"E. Europe Standard Time\",\n                    \"abbr\": \"EEDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) E. Europe\",\n                    \"utc\": [\n                      \"Asia/Nicosia\",\n                      \"Europe/Athens\",\n                      \"Europe/Bucharest\",\n                      \"Europe/Chisinau\",\n                      \"Europe/Helsinki\",\n                      \"Europe/Kiev\",\n                      \"Europe/Mariehamn\",\n                      \"Europe/Nicosia\",\n                      \"Europe/Riga\",\n                      \"Europe/Sofia\",\n                      \"Europe/Tallinn\",\n                      \"Europe/Uzhgorod\",\n                      \"Europe/Vilnius\",\n                      \"Europe/Zaporozhye\"\n                    ]\n                  },\n                  {\n                    \"name\": \"South Africa Standard Time\",\n                    \"abbr\": \"SAST\",\n                    \"offset\": 2,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+02:00) Harare, Pretoria\",\n                    \"utc\": [\n                      \"Africa/Blantyre\",\n                      \"Africa/Bujumbura\",\n                      \"Africa/Gaborone\",\n                      \"Africa/Harare\",\n                      \"Africa/Johannesburg\",\n                      \"Africa/Kigali\",\n                      \"Africa/Lubumbashi\",\n                      \"Africa/Lusaka\",\n                      \"Africa/Maputo\",\n                      \"Africa/Maseru\",\n                      \"Africa/Mbabane\",\n                      \"Etc/GMT-2\"\n                    ]\n                  },\n                  {\n                    \"name\": \"FLE Standard Time\",\n                    \"abbr\": \"FDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n                    \"utc\": [\n                      \"Europe/Helsinki\",\n                      \"Europe/Kiev\",\n                      \"Europe/Mariehamn\",\n                      \"Europe/Riga\",\n                      \"Europe/Sofia\",\n                      \"Europe/Tallinn\",\n                      \"Europe/Uzhgorod\",\n                      \"Europe/Vilnius\",\n                      \"Europe/Zaporozhye\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Turkey Standard Time\",\n                    \"abbr\": \"TDT\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Istanbul\",\n                    \"utc\": [\n                      \"Europe/Istanbul\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Israel Standard Time\",\n                    \"abbr\": \"JDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Jerusalem\",\n                    \"utc\": [\n                      \"Asia/Jerusalem\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Libya Standard Time\",\n                    \"abbr\": \"LST\",\n                    \"offset\": 2,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+02:00) Tripoli\",\n                    \"utc\": [\n                      \"Africa/Tripoli\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Jordan Standard Time\",\n                    \"abbr\": \"JST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Amman\",\n                    \"utc\": [\n                      \"Asia/Amman\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Arabic Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Baghdad\",\n                    \"utc\": [\n                      \"Asia/Baghdad\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Kaliningrad Standard Time\",\n                    \"abbr\": \"KST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+02:00) Kaliningrad\",\n                    \"utc\": [\n                      \"Europe/Kaliningrad\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Arab Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n                    \"utc\": [\n                      \"Asia/Aden\",\n                      \"Asia/Bahrain\",\n                      \"Asia/Kuwait\",\n                      \"Asia/Qatar\",\n                      \"Asia/Riyadh\"\n                    ]\n                  },\n                  {\n                    \"name\": \"E. Africa Standard Time\",\n                    \"abbr\": \"EAST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Nairobi\",\n                    \"utc\": [\n                      \"Africa/Addis_Ababa\",\n                      \"Africa/Asmera\",\n                      \"Africa/Dar_es_Salaam\",\n                      \"Africa/Djibouti\",\n                      \"Africa/Juba\",\n                      \"Africa/Kampala\",\n                      \"Africa/Khartoum\",\n                      \"Africa/Mogadishu\",\n                      \"Africa/Nairobi\",\n                      \"Antarctica/Syowa\",\n                      \"Etc/GMT-3\",\n                      \"Indian/Antananarivo\",\n                      \"Indian/Comoro\",\n                      \"Indian/Mayotte\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Moscow Standard Time\",\n                    \"abbr\": \"MSK\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n                    \"utc\": [\n                        \"Europe/Kirov\",\n                      \"Europe/Moscow\",\n                      \"Europe/Simferopol\",\n                      \"Europe/Volgograd\",\n                      \"Europe/Minsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Samara Time\",\n                    \"abbr\": \"SAMT\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n                    \"utc\": [\n                        \"Europe/Astrakhan\",\n                      \"Europe/Samara\",\n                        \"Europe/Ulyanovsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Iran Standard Time\",\n                    \"abbr\": \"IDT\",\n                    \"offset\": 4.5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+03:30) Tehran\",\n                    \"utc\": [\n                      \"Asia/Tehran\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Arabian Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n                    \"utc\": [\n                      \"Asia/Dubai\",\n                      \"Asia/Muscat\",\n                      \"Etc/GMT-4\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Azerbaijan Standard Time\",\n                    \"abbr\": \"ADT\",\n                    \"offset\": 5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+04:00) Baku\",\n                    \"utc\": [\n                      \"Asia/Baku\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Mauritius Standard Time\",\n                    \"abbr\": \"MST\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Port Louis\",\n                    \"utc\": [\n                      \"Indian/Mahe\",\n                      \"Indian/Mauritius\",\n                      \"Indian/Reunion\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Georgian Standard Time\",\n                    \"abbr\": \"GET\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Tbilisi\",\n                    \"utc\": [\n                      \"Asia/Tbilisi\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Caucasus Standard Time\",\n                    \"abbr\": \"CST\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Yerevan\",\n                    \"utc\": [\n                      \"Asia/Yerevan\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Afghanistan Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": 4.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:30) Kabul\",\n                    \"utc\": [\n                      \"Asia/Kabul\"\n                    ]\n                  },\n                  {\n                    \"name\": \"West Asia Standard Time\",\n                    \"abbr\": \"WAST\",\n                    \"offset\": 5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n                    \"utc\": [\n                      \"Antarctica/Mawson\",\n                      \"Asia/Aqtau\",\n                      \"Asia/Aqtobe\",\n                      \"Asia/Ashgabat\",\n                      \"Asia/Dushanbe\",\n                      \"Asia/Oral\",\n                      \"Asia/Samarkand\",\n                      \"Asia/Tashkent\",\n                      \"Etc/GMT-5\",\n                      \"Indian/Kerguelen\",\n                      \"Indian/Maldives\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Yekaterinburg Time\",\n                    \"abbr\": \"YEKT\",\n                    \"offset\": 5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:00) Yekaterinburg\",\n                    \"utc\": [\n                      \"Asia/Yekaterinburg\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pakistan Standard Time\",\n                    \"abbr\": \"PKT\",\n                    \"offset\": 5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n                    \"utc\": [\n                      \"Asia/Karachi\"\n                    ]\n                  },\n                  {\n                    \"name\": \"India Standard Time\",\n                    \"abbr\": \"IST\",\n                    \"offset\": 5.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n                    \"utc\": [\n                      \"Asia/Kolkata\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Sri Lanka Standard Time\",\n                    \"abbr\": \"SLST\",\n                    \"offset\": 5.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n                    \"utc\": [\n                      \"Asia/Colombo\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Nepal Standard Time\",\n                    \"abbr\": \"NST\",\n                    \"offset\": 5.75,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:45) Kathmandu\",\n                    \"utc\": [\n                      \"Asia/Kathmandu\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Asia Standard Time\",\n                    \"abbr\": \"CAST\",\n                    \"offset\": 6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n                    \"utc\": [\n                      \"Antarctica/Vostok\",\n                      \"Asia/Almaty\",\n                      \"Asia/Bishkek\",\n                      \"Asia/Qyzylorda\",\n                      \"Asia/Urumqi\",\n                      \"Etc/GMT-6\",\n                      \"Indian/Chagos\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Bangladesh Standard Time\",\n                    \"abbr\": \"BST\",\n                    \"offset\": 6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+06:00) Dhaka\",\n                    \"utc\": [\n                      \"Asia/Dhaka\",\n                      \"Asia/Thimphu\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Myanmar Standard Time\",\n                    \"abbr\": \"MST\",\n                    \"offset\": 6.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n                    \"utc\": [\n                      \"Asia/Rangoon\",\n                      \"Indian/Cocos\"\n                    ]\n                  },\n                  {\n                    \"name\": \"SE Asia Standard Time\",\n                    \"abbr\": \"SAST\",\n                    \"offset\": 7,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n                    \"utc\": [\n                      \"Antarctica/Davis\",\n                      \"Asia/Bangkok\",\n                      \"Asia/Hovd\",\n                      \"Asia/Jakarta\",\n                      \"Asia/Phnom_Penh\",\n                      \"Asia/Pontianak\",\n                      \"Asia/Saigon\",\n                      \"Asia/Vientiane\",\n                      \"Etc/GMT-7\",\n                      \"Indian/Christmas\"\n                    ]\n                  },\n                  {\n                    \"name\": \"N. Central Asia Standard Time\",\n                    \"abbr\": \"NCAST\",\n                    \"offset\": 7,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+07:00) Novosibirsk\",\n                    \"utc\": [\n                      \"Asia/Novokuznetsk\",\n                      \"Asia/Novosibirsk\",\n                      \"Asia/Omsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"China Standard Time\",\n                    \"abbr\": \"CST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n                    \"utc\": [\n                      \"Asia/Hong_Kong\",\n                      \"Asia/Macau\",\n                      \"Asia/Shanghai\"\n                    ]\n                  },\n                  {\n                    \"name\": \"North Asia Standard Time\",\n                    \"abbr\": \"NAST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Krasnoyarsk\",\n                    \"utc\": [\n                      \"Asia/Krasnoyarsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Singapore Standard Time\",\n                    \"abbr\": \"MPST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n                    \"utc\": [\n                      \"Asia/Brunei\",\n                      \"Asia/Kuala_Lumpur\",\n                      \"Asia/Kuching\",\n                      \"Asia/Makassar\",\n                      \"Asia/Manila\",\n                      \"Asia/Singapore\",\n                      \"Etc/GMT-8\"\n                    ]\n                  },\n                  {\n                    \"name\": \"W. Australia Standard Time\",\n                    \"abbr\": \"WAST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Perth\",\n                    \"utc\": [\n                      \"Antarctica/Casey\",\n                      \"Australia/Perth\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Taipei Standard Time\",\n                    \"abbr\": \"TST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Taipei\",\n                    \"utc\": [\n                      \"Asia/Taipei\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Ulaanbaatar Standard Time\",\n                    \"abbr\": \"UST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Ulaanbaatar\",\n                    \"utc\": [\n                      \"Asia/Choibalsan\",\n                      \"Asia/Ulaanbaatar\"\n                    ]\n                  },\n                  {\n                    \"name\": \"North Asia East Standard Time\",\n                    \"abbr\": \"NAEST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Irkutsk\",\n                    \"utc\": [\n                      \"Asia/Irkutsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Japan Standard Time\",\n                    \"abbr\": \"JST\",\n                    \"offset\": 9,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n                    \"utc\": [\n                      \"Asia/Dili\",\n                      \"Asia/Jayapura\",\n                      \"Asia/Tokyo\",\n                      \"Etc/GMT-9\",\n                      \"Pacific/Palau\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Korea Standard Time\",\n                    \"abbr\": \"KST\",\n                    \"offset\": 9,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:00) Seoul\",\n                    \"utc\": [\n                      \"Asia/Pyongyang\",\n                      \"Asia/Seoul\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Cen. Australia Standard Time\",\n                    \"abbr\": \"CAST\",\n                    \"offset\": 9.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:30) Adelaide\",\n                    \"utc\": [\n                      \"Australia/Adelaide\",\n                      \"Australia/Broken_Hill\"\n                    ]\n                  },\n                  {\n                    \"name\": \"AUS Central Standard Time\",\n                    \"abbr\": \"ACST\",\n                    \"offset\": 9.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:30) Darwin\",\n                    \"utc\": [\n                      \"Australia/Darwin\"\n                    ]\n                  },\n                  {\n                    \"name\": \"E. Australia Standard Time\",\n                    \"abbr\": \"EAST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Brisbane\",\n                    \"utc\": [\n                      \"Australia/Brisbane\",\n                      \"Australia/Lindeman\"\n                    ]\n                  },\n                  {\n                    \"name\": \"AUS Eastern Standard Time\",\n                    \"abbr\": \"AEST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n                    \"utc\": [\n                      \"Australia/Melbourne\",\n                      \"Australia/Sydney\"\n                    ]\n                  },\n                  {\n                    \"name\": \"West Pacific Standard Time\",\n                    \"abbr\": \"WPST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n                    \"utc\": [\n                      \"Antarctica/DumontDUrville\",\n                      \"Etc/GMT-10\",\n                      \"Pacific/Guam\",\n                      \"Pacific/Port_Moresby\",\n                      \"Pacific/Saipan\",\n                      \"Pacific/Truk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Tasmania Standard Time\",\n                    \"abbr\": \"TST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Hobart\",\n                    \"utc\": [\n                      \"Australia/Currie\",\n                      \"Australia/Hobart\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Yakutsk Standard Time\",\n                    \"abbr\": \"YST\",\n                    \"offset\": 9,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:00) Yakutsk\",\n                    \"utc\": [\n                      \"Asia/Chita\",\n                      \"Asia/Khandyga\",\n                      \"Asia/Yakutsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Pacific Standard Time\",\n                    \"abbr\": \"CPST\",\n                    \"offset\": 11,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n                    \"utc\": [\n                      \"Antarctica/Macquarie\",\n                      \"Etc/GMT-11\",\n                      \"Pacific/Efate\",\n                      \"Pacific/Guadalcanal\",\n                      \"Pacific/Kosrae\",\n                      \"Pacific/Noumea\",\n                      \"Pacific/Ponape\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Vladivostok Standard Time\",\n                    \"abbr\": \"VST\",\n                    \"offset\": 11,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+11:00) Vladivostok\",\n                    \"utc\": [\n                      \"Asia/Sakhalin\",\n                      \"Asia/Ust-Nera\",\n                      \"Asia/Vladivostok\"\n                    ]\n                  },\n                  {\n                    \"name\": \"New Zealand Standard Time\",\n                    \"abbr\": \"NZST\",\n                    \"offset\": 12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+12:00) Auckland, Wellington\",\n                    \"utc\": [\n                      \"Antarctica/McMurdo\",\n                      \"Pacific/Auckland\"\n                    ]\n                  },\n                  {\n                    \"name\": \"UTC+12\",\n                    \"abbr\": \"U\",\n                    \"offset\": 12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n                    \"utc\": [\n                      \"Etc/GMT-12\",\n                      \"Pacific/Funafuti\",\n                      \"Pacific/Kwajalein\",\n                      \"Pacific/Majuro\",\n                      \"Pacific/Nauru\",\n                      \"Pacific/Tarawa\",\n                      \"Pacific/Wake\",\n                      \"Pacific/Wallis\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Fiji Standard Time\",\n                    \"abbr\": \"FST\",\n                    \"offset\": 12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+12:00) Fiji\",\n                    \"utc\": [\n                      \"Pacific/Fiji\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Magadan Standard Time\",\n                    \"abbr\": \"MST\",\n                    \"offset\": 12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+12:00) Magadan\",\n                    \"utc\": [\n                      \"Asia/Anadyr\",\n                      \"Asia/Kamchatka\",\n                      \"Asia/Magadan\",\n                      \"Asia/Srednekolymsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Kamchatka Standard Time\",\n                    \"abbr\": \"KDT\",\n                    \"offset\": 13,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n                    \"utc\": [\n                      \"Asia/Kamchatka\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Tonga Standard Time\",\n                    \"abbr\": \"TST\",\n                    \"offset\": 13,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+13:00) Nuku'alofa\",\n                    \"utc\": [\n                      \"Etc/GMT-13\",\n                      \"Pacific/Enderbury\",\n                      \"Pacific/Fakaofo\",\n                      \"Pacific/Tongatapu\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Samoa Standard Time\",\n                    \"abbr\": \"SST\",\n                    \"offset\": 13,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+13:00) Samoa\",\n                    \"utc\": [\n                      \"Pacific/Apia\"\n                    ]\n                  }\n                ],\n        //List source: http://answers.google.com/answers/threadview/id/589312.html\n        profession: [\n            \"Airline Pilot\",\n            \"Academic Team\",\n            \"Accountant\",\n            \"Account Executive\",\n            \"Actor\",\n            \"Actuary\",\n            \"Acquisition Analyst\",\n            \"Administrative Asst.\",\n            \"Administrative Analyst\",\n            \"Administrator\",\n            \"Advertising Director\",\n            \"Aerospace Engineer\",\n            \"Agent\",\n            \"Agricultural Inspector\",\n            \"Agricultural Scientist\",\n            \"Air Traffic Controller\",\n            \"Animal Trainer\",\n            \"Anthropologist\",\n            \"Appraiser\",\n            \"Architect\",\n            \"Art Director\",\n            \"Artist\",\n            \"Astronomer\",\n            \"Athletic Coach\",\n            \"Auditor\",\n            \"Author\",\n            \"Baker\",\n            \"Banker\",\n            \"Bankruptcy Attorney\",\n            \"Benefits Manager\",\n            \"Biologist\",\n            \"Bio-feedback Specialist\",\n            \"Biomedical Engineer\",\n            \"Biotechnical Researcher\",\n            \"Broadcaster\",\n            \"Broker\",\n            \"Building Manager\",\n            \"Building Contractor\",\n            \"Building Inspector\",\n            \"Business Analyst\",\n            \"Business Planner\",\n            \"Business Manager\",\n            \"Buyer\",\n            \"Call Center Manager\",\n            \"Career Counselor\",\n            \"Cash Manager\",\n            \"Ceramic Engineer\",\n            \"Chief Executive Officer\",\n            \"Chief Operation Officer\",\n            \"Chef\",\n            \"Chemical Engineer\",\n            \"Chemist\",\n            \"Child Care Manager\",\n            \"Chief Medical Officer\",\n            \"Chiropractor\",\n            \"Cinematographer\",\n            \"City Housing Manager\",\n            \"City Manager\",\n            \"Civil Engineer\",\n            \"Claims Manager\",\n            \"Clinical Research Assistant\",\n            \"Collections Manager\",\n            \"Compliance Manager\",\n            \"Comptroller\",\n            \"Computer Manager\",\n            \"Commercial Artist\",\n            \"Communications Affairs Director\",\n            \"Communications Director\",\n            \"Communications Engineer\",\n            \"Compensation Analyst\",\n            \"Computer Programmer\",\n            \"Computer Ops. Manager\",\n            \"Computer Engineer\",\n            \"Computer Operator\",\n            \"Computer Graphics Specialist\",\n            \"Construction Engineer\",\n            \"Construction Manager\",\n            \"Consultant\",\n            \"Consumer Relations Manager\",\n            \"Contract Administrator\",\n            \"Copyright Attorney\",\n            \"Copywriter\",\n            \"Corporate Planner\",\n            \"Corrections Officer\",\n            \"Cosmetologist\",\n            \"Credit Analyst\",\n            \"Cruise Director\",\n            \"Chief Information Officer\",\n            \"Chief Technology Officer\",\n            \"Customer Service Manager\",\n            \"Cryptologist\",\n            \"Dancer\",\n            \"Data Security Manager\",\n            \"Database Manager\",\n            \"Day Care Instructor\",\n            \"Dentist\",\n            \"Designer\",\n            \"Design Engineer\",\n            \"Desktop Publisher\",\n            \"Developer\",\n            \"Development Officer\",\n            \"Diamond Merchant\",\n            \"Dietitian\",\n            \"Direct Marketer\",\n            \"Director\",\n            \"Distribution Manager\",\n            \"Diversity Manager\",\n            \"Economist\",\n            \"EEO Compliance Manager\",\n            \"Editor\",\n            \"Education Adminator\",\n            \"Electrical Engineer\",\n            \"Electro Optical Engineer\",\n            \"Electronics Engineer\",\n            \"Embassy Management\",\n            \"Employment Agent\",\n            \"Engineer Technician\",\n            \"Entrepreneur\",\n            \"Environmental Analyst\",\n            \"Environmental Attorney\",\n            \"Environmental Engineer\",\n            \"Environmental Specialist\",\n            \"Escrow Officer\",\n            \"Estimator\",\n            \"Executive Assistant\",\n            \"Executive Director\",\n            \"Executive Recruiter\",\n            \"Facilities Manager\",\n            \"Family Counselor\",\n            \"Fashion Events Manager\",\n            \"Fashion Merchandiser\",\n            \"Fast Food Manager\",\n            \"Film Producer\",\n            \"Film Production Assistant\",\n            \"Financial Analyst\",\n            \"Financial Planner\",\n            \"Financier\",\n            \"Fine Artist\",\n            \"Wildlife Specialist\",\n            \"Fitness Consultant\",\n            \"Flight Attendant\",\n            \"Flight Engineer\",\n            \"Floral Designer\",\n            \"Food & Beverage Director\",\n            \"Food Service Manager\",\n            \"Forestry Technician\",\n            \"Franchise Management\",\n            \"Franchise Sales\",\n            \"Fraud Investigator\",\n            \"Freelance Writer\",\n            \"Fund Raiser\",\n            \"General Manager\",\n            \"Geologist\",\n            \"General Counsel\",\n            \"Geriatric Specialist\",\n            \"Gerontologist\",\n            \"Glamour Photographer\",\n            \"Golf Club Manager\",\n            \"Gourmet Chef\",\n            \"Graphic Designer\",\n            \"Grounds Keeper\",\n            \"Hazardous Waste Manager\",\n            \"Health Care Manager\",\n            \"Health Therapist\",\n            \"Health Service Administrator\",\n            \"Hearing Officer\",\n            \"Home Economist\",\n            \"Horticulturist\",\n            \"Hospital Administrator\",\n            \"Hotel Manager\",\n            \"Human Resources Manager\",\n            \"Importer\",\n            \"Industrial Designer\",\n            \"Industrial Engineer\",\n            \"Information Director\",\n            \"Inside Sales\",\n            \"Insurance Adjuster\",\n            \"Interior Decorator\",\n            \"Internal Controls Director\",\n            \"International Acct.\",\n            \"International Courier\",\n            \"International Lawyer\",\n            \"Interpreter\",\n            \"Investigator\",\n            \"Investment Banker\",\n            \"Investment Manager\",\n            \"IT Architect\",\n            \"IT Project Manager\",\n            \"IT Systems Analyst\",\n            \"Jeweler\",\n            \"Joint Venture Manager\",\n            \"Journalist\",\n            \"Labor Negotiator\",\n            \"Labor Organizer\",\n            \"Labor Relations Manager\",\n            \"Lab Services Director\",\n            \"Lab Technician\",\n            \"Land Developer\",\n            \"Landscape Architect\",\n            \"Law Enforcement Officer\",\n            \"Lawyer\",\n            \"Lead Software Engineer\",\n            \"Lead Software Test Engineer\",\n            \"Leasing Manager\",\n            \"Legal Secretary\",\n            \"Library Manager\",\n            \"Litigation Attorney\",\n            \"Loan Officer\",\n            \"Lobbyist\",\n            \"Logistics Manager\",\n            \"Maintenance Manager\",\n            \"Management Consultant\",\n            \"Managed Care Director\",\n            \"Managing Partner\",\n            \"Manufacturing Director\",\n            \"Manpower Planner\",\n            \"Marine Biologist\",\n            \"Market Res. Analyst\",\n            \"Marketing Director\",\n            \"Materials Manager\",\n            \"Mathematician\",\n            \"Membership Chairman\",\n            \"Mechanic\",\n            \"Mechanical Engineer\",\n            \"Media Buyer\",\n            \"Medical Investor\",\n            \"Medical Secretary\",\n            \"Medical Technician\",\n            \"Mental Health Counselor\",\n            \"Merchandiser\",\n            \"Metallurgical Engineering\",\n            \"Meteorologist\",\n            \"Microbiologist\",\n            \"MIS Manager\",\n            \"Motion Picture Director\",\n            \"Multimedia Director\",\n            \"Musician\",\n            \"Network Administrator\",\n            \"Network Specialist\",\n            \"Network Operator\",\n            \"New Product Manager\",\n            \"Novelist\",\n            \"Nuclear Engineer\",\n            \"Nuclear Specialist\",\n            \"Nutritionist\",\n            \"Nursing Administrator\",\n            \"Occupational Therapist\",\n            \"Oceanographer\",\n            \"Office Manager\",\n            \"Operations Manager\",\n            \"Operations Research Director\",\n            \"Optical Technician\",\n            \"Optometrist\",\n            \"Organizational Development Manager\",\n            \"Outplacement Specialist\",\n            \"Paralegal\",\n            \"Park Ranger\",\n            \"Patent Attorney\",\n            \"Payroll Specialist\",\n            \"Personnel Specialist\",\n            \"Petroleum Engineer\",\n            \"Pharmacist\",\n            \"Photographer\",\n            \"Physical Therapist\",\n            \"Physician\",\n            \"Physician Assistant\",\n            \"Physicist\",\n            \"Planning Director\",\n            \"Podiatrist\",\n            \"Political Analyst\",\n            \"Political Scientist\",\n            \"Politician\",\n            \"Portfolio Manager\",\n            \"Preschool Management\",\n            \"Preschool Teacher\",\n            \"Principal\",\n            \"Private Banker\",\n            \"Private Investigator\",\n            \"Probation Officer\",\n            \"Process Engineer\",\n            \"Producer\",\n            \"Product Manager\",\n            \"Product Engineer\",\n            \"Production Engineer\",\n            \"Production Planner\",\n            \"Professional Athlete\",\n            \"Professional Coach\",\n            \"Professor\",\n            \"Project Engineer\",\n            \"Project Manager\",\n            \"Program Manager\",\n            \"Property Manager\",\n            \"Public Administrator\",\n            \"Public Safety Director\",\n            \"PR Specialist\",\n            \"Publisher\",\n            \"Purchasing Agent\",\n            \"Publishing Director\",\n            \"Quality Assurance Specialist\",\n            \"Quality Control Engineer\",\n            \"Quality Control Inspector\",\n            \"Radiology Manager\",\n            \"Railroad Engineer\",\n            \"Real Estate Broker\",\n            \"Recreational Director\",\n            \"Recruiter\",\n            \"Redevelopment Specialist\",\n            \"Regulatory Affairs Manager\",\n            \"Registered Nurse\",\n            \"Rehabilitation Counselor\",\n            \"Relocation Manager\",\n            \"Reporter\",\n            \"Research Specialist\",\n            \"Restaurant Manager\",\n            \"Retail Store Manager\",\n            \"Risk Analyst\",\n            \"Safety Engineer\",\n            \"Sales Engineer\",\n            \"Sales Trainer\",\n            \"Sales Promotion Manager\",\n            \"Sales Representative\",\n            \"Sales Manager\",\n            \"Service Manager\",\n            \"Sanitation Engineer\",\n            \"Scientific Programmer\",\n            \"Scientific Writer\",\n            \"Securities Analyst\",\n            \"Security Consultant\",\n            \"Security Director\",\n            \"Seminar Presenter\",\n            \"Ship's Officer\",\n            \"Singer\",\n            \"Social Director\",\n            \"Social Program Planner\",\n            \"Social Research\",\n            \"Social Scientist\",\n            \"Social Worker\",\n            \"Sociologist\",\n            \"Software Developer\",\n            \"Software Engineer\",\n            \"Software Test Engineer\",\n            \"Soil Scientist\",\n            \"Special Events Manager\",\n            \"Special Education Teacher\",\n            \"Special Projects Director\",\n            \"Speech Pathologist\",\n            \"Speech Writer\",\n            \"Sports Event Manager\",\n            \"Statistician\",\n            \"Store Manager\",\n            \"Strategic Alliance Director\",\n            \"Strategic Planning Director\",\n            \"Stress Reduction Specialist\",\n            \"Stockbroker\",\n            \"Surveyor\",\n            \"Structural Engineer\",\n            \"Superintendent\",\n            \"Supply Chain Director\",\n            \"System Engineer\",\n            \"Systems Analyst\",\n            \"Systems Programmer\",\n            \"System Administrator\",\n            \"Tax Specialist\",\n            \"Teacher\",\n            \"Technical Support Specialist\",\n            \"Technical Illustrator\",\n            \"Technical Writer\",\n            \"Technology Director\",\n            \"Telecom Analyst\",\n            \"Telemarketer\",\n            \"Theatrical Director\",\n            \"Title Examiner\",\n            \"Tour Escort\",\n            \"Tour Guide Director\",\n            \"Traffic Manager\",\n            \"Trainer Translator\",\n            \"Transportation Manager\",\n            \"Travel Agent\",\n            \"Treasurer\",\n            \"TV Programmer\",\n            \"Underwriter\",\n            \"Union Representative\",\n            \"University Administrator\",\n            \"University Dean\",\n            \"Urban Planner\",\n            \"Veterinarian\",\n            \"Vendor Relations Director\",\n            \"Viticulturist\",\n            \"Warehouse Manager\"\n        ],\n        animals : {\n          //list of ocean animals comes from https://owlcation.com/stem/list-of-ocean-animals\n          \"ocean\" : [\"Acantharea\",\"Anemone\",\"Angelfish King\",\"Ahi Tuna\",\"Albacore\",\"American Oyster\",\"Anchovy\",\"Armored Snail\",\"Arctic Char\",\"Atlantic Bluefin Tuna\",\"Atlantic Cod\",\"Atlantic Goliath Grouper\",\"Atlantic Trumpetfish\",\"Atlantic Wolffish\",\"Baleen Whale\",\"Banded Butterflyfish\",\"Banded Coral Shrimp\",\"Banded Sea Krait\",\"Barnacle\",\"Barndoor Skate\",\"Barracuda\",\"Basking Shark\",\"Bass\",\"Beluga Whale\",\"Bluebanded Goby\",\"Bluehead Wrasse\",\"Bluefish\",\"Bluestreak Cleaner-Wrasse\",\"Blue Marlin\",\"Blue Shark\",\"Blue Spiny Lobster\",\"Blue Tang\",\"Blue Whale\",\"Broadclub Cuttlefish\",\"Bull Shark\",\"Chambered Nautilus\",\"Chilean Basket Star\",\"Chilean Jack Mackerel\",\"Chinook Salmon\",\"Christmas Tree Worm\",\"Clam\",\"Clown Anemonefish\",\"Clown Triggerfish\",\"Cod\",\"Coelacanth\",\"Cockscomb Cup Coral\",\"Common Fangtooth\",\"Conch\",\"Cookiecutter Shark\",\"Copepod\",\"Coral\",\"Corydoras\",\"Cownose Ray\",\"Crab\",\"Crown-of-Thorns Starfish\",\"Cushion Star\",\"Cuttlefish\",\"California Sea Otters\",\"Dolphin\",\"Dolphinfish\",\"Dory\",\"Devil Fish\",\"Dugong\",\"Dumbo Octopus\",\"Dungeness Crab\",\"Eccentric Sand Dollar\",\"Edible Sea Cucumber\",\"Eel\",\"Elephant Seal\",\"Elkhorn Coral\",\"Emperor Shrimp\",\"Estuarine Crocodile\",\"Fathead Sculpin\",\"Fiddler Crab\",\"Fin Whale\",\"Flameback\",\"Flamingo Tongue Snail\",\"Flashlight Fish\",\"Flatback Turtle\",\"Flatfish\",\"Flying Fish\",\"Flounder\",\"Fluke\",\"French Angelfish\",\"Frilled Shark\",\"Fugu (also called Pufferfish)\",\"Gar\",\"Geoduck\",\"Giant Barrel Sponge\",\"Giant Caribbean Sea Anemone\",\"Giant Clam\",\"Giant Isopod\",\"Giant Kingfish\",\"Giant Oarfish\",\"Giant Pacific Octopus\",\"Giant Pyrosome\",\"Giant Sea Star\",\"Giant Squid\",\"Glowing Sucker Octopus\",\"Giant Tube Worm\",\"Goblin Shark\",\"Goosefish\",\"Great White Shark\",\"Greenland Shark\",\"Grey Atlantic Seal\",\"Grouper\",\"Grunion\",\"Guineafowl Puffer\",\"Haddock\",\"Hake\",\"Halibut\",\"Hammerhead Shark\",\"Hapuka\",\"Harbor Porpoise\",\"Harbor Seal\",\"Hatchetfish\",\"Hawaiian Monk Seal\",\"Hawksbill Turtle\",\"Hector's Dolphin\",\"Hermit Crab\",\"Herring\",\"Hoki\",\"Horn Shark\",\"Horseshoe Crab\",\"Humpback Anglerfish\",\"Humpback Whale\",\"Icefish\",\"Imperator Angelfish\",\"Irukandji Jellyfish\",\"Isopod\",\"Ivory Bush Coral\",\"Japanese Spider Crab\",\"Jellyfish\",\"John Dory\",\"Juan Fernandez Fur Seal\",\"Killer Whale\",\"Kiwa Hirsuta\",\"Krill\",\"Lagoon Triggerfish\",\"Lamprey\",\"Leafy Seadragon\",\"Leopard Seal\",\"Limpet\",\"Ling\",\"Lionfish\",\"Lions Mane Jellyfish\",\"Lobe Coral\",\"Lobster\",\"Loggerhead Turtle\",\"Longnose Sawshark\",\"Longsnout Seahorse\",\"Lophelia Coral\",\"Marrus Orthocanna\",\"Manatee\",\"Manta Ray\",\"Marlin\",\"Megamouth Shark\",\"Mexican Lookdown\",\"Mimic Octopus\",\"Moon Jelly\",\"Mollusk\",\"Monkfish\",\"Moray Eel\",\"Mullet\",\"Mussel\",\"Megaladon\",\"Napoleon Wrasse\",\"Nassau Grouper\",\"Narwhal\",\"Nautilus\",\"Needlefish\",\"Northern Seahorse\",\"North Atlantic Right Whale\",\"Northern Red Snapper\",\"Norway Lobster\",\"Nudibranch\",\"Nurse Shark\",\"Oarfish\",\"Ocean Sunfish\",\"Oceanic Whitetip Shark\",\"Octopus\",\"Olive Sea Snake\",\"Orange Roughy\",\"Ostracod\",\"Otter\",\"Oyster\",\"Pacific Angelshark\",\"Pacific Blackdragon\",\"Pacific Halibut\",\"Pacific Sardine\",\"Pacific Sea Nettle Jellyfish\",\"Pacific White Sided Dolphin\",\"Pantropical Spotted Dolphin\",\"Patagonian Toothfish\",\"Peacock Mantis Shrimp\",\"Pelagic Thresher Shark\",\"Penguin\",\"Peruvian Anchoveta\",\"Pilchard\",\"Pink Salmon\",\"Pinniped\",\"Plankton\",\"Porpoise\",\"Polar Bear\",\"Portuguese Man o' War\",\"Pycnogonid Sea Spider\",\"Quahog\",\"Queen Angelfish\",\"Queen Conch\",\"Queen Parrotfish\",\"Queensland Grouper\",\"Ragfish\",\"Ratfish\",\"Rattail Fish\",\"Ray\",\"Red Drum\",\"Red King Crab\",\"Ringed Seal\",\"Risso's Dolphin\",\"Ross Seals\",\"Sablefish\",\"Salmon\",\"Sand Dollar\",\"Sandbar Shark\",\"Sawfish\",\"Sarcastic Fringehead\",\"Scalloped Hammerhead Shark\",\"Seahorse\",\"Sea Cucumber\",\"Sea Lion\",\"Sea Urchin\",\"Seal\",\"Shark\",\"Shortfin Mako Shark\",\"Shovelnose Guitarfish\",\"Shrimp\",\"Silverside Fish\",\"Skipjack Tuna\",\"Slender Snipe Eel\",\"Smalltooth Sawfish\",\"Smelts\",\"Sockeye Salmon\",\"Southern Stingray\",\"Sponge\",\"Spotted Porcupinefish\",\"Spotted Dolphin\",\"Spotted Eagle Ray\",\"Spotted Moray\",\"Squid\",\"Squidworm\",\"Starfish\",\"Stickleback\",\"Stonefish\",\"Stoplight Loosejaw\",\"Sturgeon\",\"Swordfish\",\"Tan Bristlemouth\",\"Tasseled Wobbegong\",\"Terrible Claw Lobster\",\"Threespot Damselfish\",\"Tiger Prawn\",\"Tiger Shark\",\"Tilefish\",\"Toadfish\",\"Tropical Two-Wing Flyfish\",\"Tuna\",\"Umbrella Squid\",\"Velvet Crab\",\"Venus Flytrap Sea Anemone\",\"Vigtorniella Worm\",\"Viperfish\",\"Vampire Squid\",\"Vaquita\",\"Wahoo\",\"Walrus\",\"West Indian Manatee\",\"Whale\",\"Whale Shark\",\"Whiptail Gulper\",\"White-Beaked Dolphin\",\"White-Ring Garden Eel\",\"White Shrimp\",\"Wobbegong\",\"Wrasse\",\"Wreckfish\",\"Xiphosura\",\"Yellowtail Damselfish\",\"Yelloweye Rockfish\",\"Yellow Cup Black Coral\",\"Yellow Tube Sponge\",\"Yellowfin Tuna\",\"Zebrashark\",\"Zooplankton\"],\n          //list of desert, grassland, and forest animals comes from http://www.skyenimals.com/\n          \"desert\" : [\"Aardwolf\",\"Addax\",\"African Wild Ass\",\"Ant\",\"Antelope\",\"Armadillo\",\"Baboon\",\"Badger\",\"Bat\",\"Bearded Dragon\",\"Beetle\",\"Bird\",\"Black-footed Cat\",\"Boa\",\"Brown Bear\",\"Bustard\",\"Butterfly\",\"Camel\",\"Caracal\",\"Caracara\",\"Caterpillar\",\"Centipede\",\"Cheetah\",\"Chipmunk\",\"Chuckwalla\",\"Climbing Mouse\",\"Coati\",\"Cobra\",\"Cotton Rat\",\"Cougar\",\"Courser\",\"Crane Fly\",\"Crow\",\"Dassie Rat\",\"Dove\",\"Dunnart\",\"Eagle\",\"Echidna\",\"Elephant\",\"Emu\",\"Falcon\",\"Fly\",\"Fox\",\"Frogmouth\",\"Gecko\",\"Geoffroy's Cat\",\"Gerbil\",\"Grasshopper\",\"Guanaco\",\"Gundi\",\"Hamster\",\"Hawk\",\"Hedgehog\",\"Hyena\",\"Hyrax\",\"Jackal\",\"Kangaroo\",\"Kangaroo Rat\",\"Kestrel\",\"Kowari\",\"Kultarr\",\"Leopard\",\"Lion\",\"Macaw\",\"Meerkat\",\"Mouse\",\"Oryx\",\"Ostrich\",\"Owl\",\"Pronghorn\",\"Python\",\"Rabbit\",\"Raccoon\",\"Rattlesnake\",\"Rhinoceros\",\"Sand Cat\",\"Spectacled Bear\",\"Spiny Mouse\",\"Starling\",\"Stick Bug\",\"Tarantula\",\"Tit\",\"Toad\",\"Tortoise\",\"Tyrant Flycatcher\",\"Viper\",\"Vulture\",\"Waxwing\",\"Xerus\",\"Zebra\"],\n          \"grassland\" : [\"Aardvark\",\"Aardwolf\",\"Accentor\",\"African Buffalo\",\"African Wild Dog\",\"Alpaca\",\"Anaconda\",\"Ant\",\"Anteater\",\"Antelope\",\"Armadillo\",\"Baboon\",\"Badger\",\"Bandicoot\",\"Barbet\",\"Bat\",\"Bee\",\"Bee-eater\",\"Beetle\",\"Bird\",\"Bison\",\"Black-footed Cat\",\"Black-footed Ferret\",\"Bluebird\",\"Boa\",\"Bowerbird\",\"Brown Bear\",\"Bush Dog\",\"Bushshrike\",\"Bustard\",\"Butterfly\",\"Buzzard\",\"Caracal\",\"Caracara\",\"Cardinal\",\"Caterpillar\",\"Cheetah\",\"Chipmunk\",\"Civet\",\"Climbing Mouse\",\"Clouded Leopard\",\"Coati\",\"Cobra\",\"Cockatoo\",\"Cockroach\",\"Common Genet\",\"Cotton Rat\",\"Cougar\",\"Courser\",\"Coyote\",\"Crane\",\"Crane Fly\",\"Cricket\",\"Crow\",\"Culpeo\",\"Death Adder\",\"Deer\",\"Deer Mouse\",\"Dingo\",\"Dinosaur\",\"Dove\",\"Drongo\",\"Duck\",\"Duiker\",\"Dunnart\",\"Eagle\",\"Echidna\",\"Elephant\",\"Elk\",\"Emu\",\"Falcon\",\"Finch\",\"Flea\",\"Fly\",\"Flying Frog\",\"Fox\",\"Frog\",\"Frogmouth\",\"Garter Snake\",\"Gazelle\",\"Gecko\",\"Geoffroy's Cat\",\"Gerbil\",\"Giant Tortoise\",\"Giraffe\",\"Grasshopper\",\"Grison\",\"Groundhog\",\"Grouse\",\"Guanaco\",\"Guinea Pig\",\"Hamster\",\"Harrier\",\"Hartebeest\",\"Hawk\",\"Hedgehog\",\"Helmetshrike\",\"Hippopotamus\",\"Hornbill\",\"Hyena\",\"Hyrax\",\"Impala\",\"Jackal\",\"Jaguar\",\"Jaguarundi\",\"Kangaroo\",\"Kangaroo Rat\",\"Kestrel\",\"Kultarr\",\"Ladybug\",\"Leopard\",\"Lion\",\"Macaw\",\"Meerkat\",\"Mouse\",\"Newt\",\"Oryx\",\"Ostrich\",\"Owl\",\"Pangolin\",\"Pheasant\",\"Prairie Dog\",\"Pronghorn\",\"Przewalski's Horse\",\"Python\",\"Quoll\",\"Rabbit\",\"Raven\",\"Rhinoceros\",\"Shelduck\",\"Sloth Bear\",\"Spectacled Bear\",\"Squirrel\",\"Starling\",\"Stick Bug\",\"Tamandua\",\"Tasmanian Devil\",\"Thornbill\",\"Thrush\",\"Toad\",\"Tortoise\"],\n          \"forest\" : [\"Agouti\",\"Anaconda\",\"Anoa\",\"Ant\",\"Anteater\",\"Antelope\",\"Armadillo\",\"Asian Black Bear\",\"Aye-aye\",\"Babirusa\",\"Baboon\",\"Badger\",\"Bandicoot\",\"Banteng\",\"Barbet\",\"Basilisk\",\"Bat\",\"Bearded Dragon\",\"Bee\",\"Bee-eater\",\"Beetle\",\"Bettong\",\"Binturong\",\"Bird-of-paradise\",\"Bongo\",\"Bowerbird\",\"Bulbul\",\"Bush Dog\",\"Bushbaby\",\"Bushshrike\",\"Butterfly\",\"Buzzard\",\"Caecilian\",\"Cardinal\",\"Cassowary\",\"Caterpillar\",\"Centipede\",\"Chameleon\",\"Chimpanzee\",\"Cicada\",\"Civet\",\"Clouded Leopard\",\"Coati\",\"Cobra\",\"Cockatoo\",\"Cockroach\",\"Colugo\",\"Cotinga\",\"Cotton Rat\",\"Cougar\",\"Crane Fly\",\"Cricket\",\"Crocodile\",\"Crow\",\"Cuckoo\",\"Cuscus\",\"Death Adder\",\"Deer\",\"Dhole\",\"Dingo\",\"Dinosaur\",\"Drongo\",\"Duck\",\"Duiker\",\"Eagle\",\"Echidna\",\"Elephant\",\"Finch\",\"Flat-headed Cat\",\"Flea\",\"Flowerpecker\",\"Fly\",\"Flying Frog\",\"Fossa\",\"Frog\",\"Frogmouth\",\"Gaur\",\"Gecko\",\"Gorilla\",\"Grison\",\"Hawaiian Honeycreeper\",\"Hawk\",\"Hedgehog\",\"Helmetshrike\",\"Hornbill\",\"Hyrax\",\"Iguana\",\"Jackal\",\"Jaguar\",\"Jaguarundi\",\"Kestrel\",\"Ladybug\",\"Lemur\",\"Leopard\",\"Lion\",\"Macaw\",\"Mandrill\",\"Margay\",\"Monkey\",\"Mouse\",\"Mouse Deer\",\"Newt\",\"Okapi\",\"Old World Flycatcher\",\"Orangutan\",\"Owl\",\"Pangolin\",\"Peafowl\",\"Pheasant\",\"Possum\",\"Python\",\"Quokka\",\"Rabbit\",\"Raccoon\",\"Red Panda\",\"Red River Hog\",\"Rhinoceros\",\"Sloth Bear\",\"Spectacled Bear\",\"Squirrel\",\"Starling\",\"Stick Bug\",\"Sun Bear\",\"Tamandua\",\"Tamarin\",\"Tapir\",\"Tarantula\",\"Thrush\",\"Tiger\",\"Tit\",\"Toad\",\"Tortoise\",\"Toucan\",\"Trogon\",\"Trumpeter\",\"Turaco\",\"Turtle\",\"Tyrant Flycatcher\",\"Viper\",\"Vulture\",\"Wallaby\",\"Warbler\",\"Wasp\",\"Waxwing\",\"Weaver\",\"Weaver-finch\",\"Whistler\",\"White-eye\",\"Whydah\",\"Woodswallow\",\"Worm\",\"Wren\",\"Xenops\",\"Yellowjacket\",\"Accentor\",\"African Buffalo\",\"American Black Bear\",\"Anole\",\"Bird\",\"Bison\",\"Boa\",\"Brown Bear\",\"Chipmunk\",\"Common Genet\",\"Copperhead\",\"Coyote\",\"Deer Mouse\",\"Dormouse\",\"Elk\",\"Emu\",\"Fisher\",\"Fox\",\"Garter Snake\",\"Giant Panda\",\"Giant Tortoise\",\"Groundhog\",\"Grouse\",\"Guanaco\",\"Himalayan Tahr\",\"Kangaroo\",\"Koala\",\"Numbat\",\"Quoll\",\"Raccoon dog\",\"Tasmanian Devil\",\"Thornbill\",\"Turkey\",\"Vole\",\"Weasel\",\"Wildcat\",\"Wolf\",\"Wombat\",\"Woodchuck\",\"Woodpecker\"],\n          //list of farm animals comes from https://www.buzzle.com/articles/farm-animals-list.html\n          \"farm\" : [\"Alpaca\",\"Buffalo\",\"Banteng\",\"Cow\",\"Cat\",\"Chicken\",\"Carp\",\"Camel\",\"Donkey\",\"Dog\",\"Duck\",\"Emu\",\"Goat\",\"Gayal\",\"Guinea\",\"Goose\",\"Horse\",\"Honey\",\"Llama\",\"Pig\",\"Pigeon\",\"Rhea\",\"Rabbit\",\"Sheep\",\"Silkworm\",\"Turkey\",\"Yak\",\"Zebu\"],\n          //list of pet animals comes from https://www.dogbreedinfo.com/pets/pet.htm\n          \"pet\" : [\"Bearded Dragon\",\"Birds\",\"Burro\",\"Cats\",\"Chameleons\",\"Chickens\",\"Chinchillas\",\"Chinese Water Dragon\",\"Cows\",\"Dogs\",\"Donkey\",\"Ducks\",\"Ferrets\",\"Fish\",\"Geckos\",\"Geese\",\"Gerbils\",\"Goats\",\"Guinea Fowl\",\"Guinea Pigs\",\"Hamsters\",\"Hedgehogs\",\"Horses\",\"Iguanas\",\"Llamas\",\"Lizards\",\"Mice\",\"Mule\",\"Peafowl\",\"Pigs and Hogs\",\"Pigeons\",\"Ponies\",\"Pot Bellied Pig\",\"Rabbits\",\"Rats\",\"Sheep\",\"Skinks\",\"Snakes\",\"Stick Insects\",\"Sugar Gliders\",\"Tarantula\",\"Turkeys\",\"Turtles\"],\n          //list of zoo animals comes from https://bronxzoo.com/animals\n          \"zoo\" : [\"Aardvark\",\"African Wild Dog\",\"Aldabra Tortoise\",\"American Alligator\",\"American Bison\",\"Amur Tiger\",\"Anaconda\",\"Andean Condor\",\"Asian Elephant\",\"Baby Doll Sheep\",\"Bald Eagle\",\"Barred Owl\",\"Blue Iguana\",\"Boer Goat\",\"California Sea Lion\",\"Caribbean Flamingo\",\"Chinchilla\",\"Collared Lemur\",\"Coquerel's Sifaka\",\"Cuban Amazon Parrot\",\"Ebony Langur\",\"Fennec Fox\",\"Fossa\",\"Gelada\",\"Giant Anteater\",\"Giraffe\",\"Gorilla\",\"Grizzly Bear\",\"Henkel's Leaf-tailed Gecko\",\"Indian Gharial\",\"Indian Rhinoceros\",\"King Cobra\",\"King Vulture\",\"Komodo Dragon\",\"Linne's Two-toed Sloth\",\"Lion\",\"Little Penguin\",\"Madagascar Tree Boa\",\"Magellanic Penguin\",\"Malayan Tapir\",\"Malayan Tiger\",\"Matschies Tree Kangaroo\",\"Mini Donkey\",\"Monarch Butterfly\",\"Nile crocodile\",\"North American Porcupine\",\"Nubian Ibex\",\"Okapi\",\"Poison Dart Frog\",\"Polar Bear\",\"Pygmy Marmoset\",\"Radiated Tortoise\",\"Red Panda\",\"Red Ruffed Lemur\",\"Ring-tailed Lemur\",\"Ring-tailed Mongoose\",\"Rock Hyrax\",\"Small Clawed Asian Otter\",\"Snow Leopard\",\"Snowy Owl\",\"Southern White-faced Owl\",\"Southern White Rhinocerous\",\"Squirrel Monkey\",\"Tufted Puffin\",\"White Cheeked Gibbon\",\"White-throated Bee Eater\",\"Zebra\"]\n        },\n        primes: [\n            // 1230 first primes, i.e. all primes up to the first one greater than 10000, inclusive.\n            2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,3221,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,3491,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,3727,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,4003,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,4259,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,4547,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,4813,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,5087,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,5399,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,5653,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,5897,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,6211,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,6473,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,6779,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,7027,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,7349,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,7621,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,7919,7927,7933,7937,7949,7951,7963,7993,8009,8011,8017,8039,8053,8059,8069,8081,8087,8089,8093,8101,8111,8117,8123,8147,8161,8167,8171,8179,8191,8209,8219,8221,8231,8233,8237,8243,8263,8269,8273,8287,8291,8293,8297,8311,8317,8329,8353,8363,8369,8377,8387,8389,8419,8423,8429,8431,8443,8447,8461,8467,8501,8513,8521,8527,8537,8539,8543,8563,8573,8581,8597,8599,8609,8623,8627,8629,8641,8647,8663,8669,8677,8681,8689,8693,8699,8707,8713,8719,8731,8737,8741,8747,8753,8761,8779,8783,8803,8807,8819,8821,8831,8837,8839,8849,8861,8863,8867,8887,8893,8923,8929,8933,8941,8951,8963,8969,8971,8999,9001,9007,9011,9013,9029,9041,9043,9049,9059,9067,9091,9103,9109,9127,9133,9137,9151,9157,9161,9173,9181,9187,9199,9203,9209,9221,9227,9239,9241,9257,9277,9281,9283,9293,9311,9319,9323,9337,9341,9343,9349,9371,9377,9391,9397,9403,9413,9419,9421,9431,9433,9437,9439,9461,9463,9467,9473,9479,9491,9497,9511,9521,9533,9539,9547,9551,9587,9601,9613,9619,9623,9629,9631,9643,9649,9661,9677,9679,9689,9697,9719,9721,9733,9739,9743,9749,9767,9769,9781,9787,9791,9803,9811,9817,9829,9833,9839,9851,9857,9859,9871,9883,9887,9901,9907,9923,9929,9931,9941,9949,9967,9973,10007\n        ],\n        emotions: [\n            \"love\",\n            \"joy\",\n            \"surprise\",\n            \"anger\",\n            \"sadness\",\n            \"fear\"\n        ],\n    };\n\n    var o_hasOwnProperty = Object.prototype.hasOwnProperty;\n    var o_keys = (Object.keys || function(obj) {\n      var result = [];\n      for (var key in obj) {\n        if (o_hasOwnProperty.call(obj, key)) {\n          result.push(key);\n        }\n      }\n\n      return result;\n    });\n\n\n    function _copyObject(source, target) {\n      var keys = o_keys(source);\n      var key;\n\n      for (var i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        target[key] = source[key] || target[key];\n      }\n    }\n\n    function _copyArray(source, target) {\n      for (var i = 0, l = source.length; i < l; i++) {\n        target[i] = source[i];\n      }\n    }\n\n    function copyObject(source, _target) {\n        var isArray = Array.isArray(source);\n        var target = _target || (isArray ? new Array(source.length) : {});\n\n        if (isArray) {\n          _copyArray(source, target);\n        } else {\n          _copyObject(source, target);\n        }\n\n        return target;\n    }\n\n    /** Get the data based on key**/\n    Chance.prototype.get = function (name) {\n        return copyObject(data[name]);\n    };\n\n    // Mac Address\n    Chance.prototype.mac_address = function(options){\n        // typically mac addresses are separated by \":\"\n        // however they can also be separated by \"-\"\n        // the network variant uses a dot every fourth byte\n\n        options = initOptions(options);\n        if(!options.separator) {\n            options.separator =  options.networkVersion ? \".\" : \":\";\n        }\n\n        var mac_pool=\"ABCDEF1234567890\",\n            mac = \"\";\n        if(!options.networkVersion) {\n            mac = this.n(this.string, 6, { pool: mac_pool, length:2 }).join(options.separator);\n        } else {\n            mac = this.n(this.string, 3, { pool: mac_pool, length:4 }).join(options.separator);\n        }\n\n        return mac;\n    };\n\n    Chance.prototype.normal = function (options) {\n        options = initOptions(options, {mean : 0, dev : 1, pool : []});\n\n        testRange(\n            options.pool.constructor !== Array,\n            \"Chance: The pool option must be a valid array.\"\n        );\n        testRange(\n            typeof options.mean !== 'number',\n            \"Chance: Mean (mean) must be a number\"\n        );\n        testRange(\n            typeof options.dev !== 'number',\n            \"Chance: Standard deviation (dev) must be a number\"\n        );\n\n        // If a pool has been passed, then we are returning an item from that pool,\n        // using the normal distribution settings that were passed in\n        if (options.pool.length > 0) {\n            return this.normal_pool(options);\n        }\n\n        // The Marsaglia Polar method\n        var s, u, v, norm,\n            mean = options.mean,\n            dev = options.dev;\n\n        do {\n            // U and V are from the uniform distribution on (-1, 1)\n            u = this.random() * 2 - 1;\n            v = this.random() * 2 - 1;\n\n            s = u * u + v * v;\n        } while (s >= 1);\n\n        // Compute the standard normal variate\n        norm = u * Math.sqrt(-2 * Math.log(s) / s);\n\n        // Shape and scale\n        return dev * norm + mean;\n    };\n\n    Chance.prototype.normal_pool = function(options) {\n        var performanceCounter = 0;\n        do {\n            var idx = Math.round(this.normal({ mean: options.mean, dev: options.dev }));\n            if (idx < options.pool.length && idx >= 0) {\n                return options.pool[idx];\n            } else {\n                performanceCounter++;\n            }\n        } while(performanceCounter < 100);\n\n        throw new RangeError(\"Chance: Your pool is too small for the given mean and standard deviation. Please adjust.\");\n    };\n\n    Chance.prototype.radio = function (options) {\n        // Initial Letter (Typically Designated by Side of Mississippi River)\n        options = initOptions(options, {side : \"?\"});\n        var fl = \"\";\n        switch (options.side.toLowerCase()) {\n        case \"east\":\n        case \"e\":\n            fl = \"W\";\n            break;\n        case \"west\":\n        case \"w\":\n            fl = \"K\";\n            break;\n        default:\n            fl = this.character({pool: \"KW\"});\n            break;\n        }\n\n        return fl + this.character({alpha: true, casing: \"upper\"}) +\n                this.character({alpha: true, casing: \"upper\"}) +\n                this.character({alpha: true, casing: \"upper\"});\n    };\n\n    // Set the data as key and data or the data map\n    Chance.prototype.set = function (name, values) {\n        if (typeof name === \"string\") {\n            data[name] = values;\n        } else {\n            data = copyObject(name, data);\n        }\n    };\n\n    Chance.prototype.tv = function (options) {\n        return this.radio(options);\n    };\n\n    // ID number for Brazil companies\n    Chance.prototype.cnpj = function () {\n        var n = this.n(this.natural, 8, { max: 9 });\n        var d1 = 2+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;\n        d1 = 11 - (d1 % 11);\n        if (d1>=10){\n            d1 = 0;\n        }\n        var d2 = d1*2+3+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;\n        d2 = 11 - (d2 % 11);\n        if (d2>=10){\n            d2 = 0;\n        }\n        return ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/0001-'+d1+d2;\n    };\n\n    Chance.prototype.emotion = function () {\n        return this.pick(this.get(\"emotions\"));\n    };\n\n    // -- End Miscellaneous --\n\n    Chance.prototype.mersenne_twister = function (seed) {\n        return new MersenneTwister(seed);\n    };\n\n    Chance.prototype.blueimp_md5 = function () {\n        return new BlueImpMD5();\n    };\n\n    // Mersenne Twister from https://gist.github.com/banksean/300494\n    /*\n       A C-program for MT19937, with initialization improved 2002/1/26.\n       Coded by Takuji Nishimura and Makoto Matsumoto.\n\n       Before using, initialize the state by using init_genrand(seed)\n       or init_by_array(init_key, key_length).\n\n       Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n       All rights reserved.\n\n       Redistribution and use in source and binary forms, with or without\n       modification, are permitted provided that the following conditions\n       are met:\n\n       1. Redistributions of source code must retain the above copyright\n       notice, this list of conditions and the following disclaimer.\n\n       2. Redistributions in binary form must reproduce the above copyright\n       notice, this list of conditions and the following disclaimer in the\n       documentation and/or other materials provided with the distribution.\n\n       3. The names of its contributors may not be used to endorse or promote\n       products derived from this software without specific prior written\n       permission.\n\n       THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n       \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n       LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n       A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n       CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n       EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n       PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n       PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n       LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n       NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n       SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n       Any feedback is very welcome.\n       http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\n       email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\n     */\n    var MersenneTwister = function (seed) {\n        if (seed === undefined) {\n            // kept random number same size as time used previously to ensure no unexpected results downstream\n            seed = Math.floor(Math.random()*Math.pow(10,13));\n        }\n        /* Period parameters */\n        this.N = 624;\n        this.M = 397;\n        this.MATRIX_A = 0x9908b0df;   /* constant vector a */\n        this.UPPER_MASK = 0x80000000; /* most significant w-r bits */\n        this.LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\n        this.mt = new Array(this.N); /* the array for the state vector */\n        this.mti = this.N + 1; /* mti==N + 1 means mt[N] is not initialized */\n\n        this.init_genrand(seed);\n    };\n\n    /* initializes mt[N] with a seed */\n    MersenneTwister.prototype.init_genrand = function (s) {\n        this.mt[0] = s >>> 0;\n        for (this.mti = 1; this.mti < this.N; this.mti++) {\n            s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);\n            this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253) + this.mti;\n            /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n            /* In the previous versions, MSBs of the seed affect   */\n            /* only MSBs of the array mt[].                        */\n            /* 2002/01/09 modified by Makoto Matsumoto             */\n            this.mt[this.mti] >>>= 0;\n            /* for >32 bit machines */\n        }\n    };\n\n    /* initialize by an array with array-length */\n    /* init_key is the array for initializing keys */\n    /* key_length is its length */\n    /* slight change for C++, 2004/2/26 */\n    MersenneTwister.prototype.init_by_array = function (init_key, key_length) {\n        var i = 1, j = 0, k, s;\n        this.init_genrand(19650218);\n        k = (this.N > key_length ? this.N : key_length);\n        for (; k; k--) {\n            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525))) + init_key[j] + j; /* non linear */\n            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n            i++;\n            j++;\n            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\n            if (j >= key_length) { j = 0; }\n        }\n        for (k = this.N - 1; k; k--) {\n            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941)) - i; /* non linear */\n            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n            i++;\n            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\n        }\n\n        this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\n    };\n\n    /* generates a random number on [0,0xffffffff]-interval */\n    MersenneTwister.prototype.genrand_int32 = function () {\n        var y;\n        var mag01 = new Array(0x0, this.MATRIX_A);\n        /* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n        if (this.mti >= this.N) { /* generate N words at one time */\n            var kk;\n\n            if (this.mti === this.N + 1) {   /* if init_genrand() has not been called, */\n                this.init_genrand(5489); /* a default initial seed is used */\n            }\n            for (kk = 0; kk < this.N - this.M; kk++) {\n                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\n                this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\n            }\n            for (;kk < this.N - 1; kk++) {\n                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\n                this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n            }\n            y = (this.mt[this.N - 1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);\n            this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];\n\n            this.mti = 0;\n        }\n\n        y = this.mt[this.mti++];\n\n        /* Tempering */\n        y ^= (y >>> 11);\n        y ^= (y << 7) & 0x9d2c5680;\n        y ^= (y << 15) & 0xefc60000;\n        y ^= (y >>> 18);\n\n        return y >>> 0;\n    };\n\n    /* generates a random number on [0,0x7fffffff]-interval */\n    MersenneTwister.prototype.genrand_int31 = function () {\n        return (this.genrand_int32() >>> 1);\n    };\n\n    /* generates a random number on [0,1]-real-interval */\n    MersenneTwister.prototype.genrand_real1 = function () {\n        return this.genrand_int32() * (1.0 / 4294967295.0);\n        /* divided by 2^32-1 */\n    };\n\n    /* generates a random number on [0,1)-real-interval */\n    MersenneTwister.prototype.random = function () {\n        return this.genrand_int32() * (1.0 / 4294967296.0);\n        /* divided by 2^32 */\n    };\n\n    /* generates a random number on (0,1)-real-interval */\n    MersenneTwister.prototype.genrand_real3 = function () {\n        return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);\n        /* divided by 2^32 */\n    };\n\n    /* generates a random number on [0,1) with 53-bit resolution*/\n    MersenneTwister.prototype.genrand_res53 = function () {\n        var a = this.genrand_int32()>>>5, b = this.genrand_int32()>>>6;\n        return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);\n    };\n\n    // BlueImp MD5 hashing algorithm from https://github.com/blueimp/JavaScript-MD5\n    var BlueImpMD5 = function () {};\n\n    BlueImpMD5.prototype.VERSION = '1.0.1';\n\n    /*\n    * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n    * to work around bugs in some JS interpreters.\n    */\n    BlueImpMD5.prototype.safe_add = function safe_add(x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n            msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    };\n\n    /*\n    * Bitwise rotate a 32-bit number to the left.\n    */\n    BlueImpMD5.prototype.bit_roll = function (num, cnt) {\n        return (num << cnt) | (num >>> (32 - cnt));\n    };\n\n    /*\n    * These functions implement the five basic operations the algorithm uses.\n    */\n    BlueImpMD5.prototype.md5_cmn = function (q, a, b, x, s, t) {\n        return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s), b);\n    };\n    BlueImpMD5.prototype.md5_ff = function (a, b, c, d, x, s, t) {\n        return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    };\n    BlueImpMD5.prototype.md5_gg = function (a, b, c, d, x, s, t) {\n        return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    };\n    BlueImpMD5.prototype.md5_hh = function (a, b, c, d, x, s, t) {\n        return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);\n    };\n    BlueImpMD5.prototype.md5_ii = function (a, b, c, d, x, s, t) {\n        return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n    };\n\n    /*\n    * Calculate the MD5 of an array of little-endian words, and a bit length.\n    */\n    BlueImpMD5.prototype.binl_md5 = function (x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << (len % 32);\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n        var i, olda, oldb, oldc, oldd,\n            a =  1732584193,\n            b = -271733879,\n            c = -1732584194,\n            d =  271733878;\n\n        for (i = 0; i < x.length; i += 16) {\n            olda = a;\n            oldb = b;\n            oldc = c;\n            oldd = d;\n\n            a = this.md5_ff(a, b, c, d, x[i],       7, -680876936);\n            d = this.md5_ff(d, a, b, c, x[i +  1], 12, -389564586);\n            c = this.md5_ff(c, d, a, b, x[i +  2], 17,  606105819);\n            b = this.md5_ff(b, c, d, a, x[i +  3], 22, -1044525330);\n            a = this.md5_ff(a, b, c, d, x[i +  4],  7, -176418897);\n            d = this.md5_ff(d, a, b, c, x[i +  5], 12,  1200080426);\n            c = this.md5_ff(c, d, a, b, x[i +  6], 17, -1473231341);\n            b = this.md5_ff(b, c, d, a, x[i +  7], 22, -45705983);\n            a = this.md5_ff(a, b, c, d, x[i +  8],  7,  1770035416);\n            d = this.md5_ff(d, a, b, c, x[i +  9], 12, -1958414417);\n            c = this.md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n            b = this.md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n            a = this.md5_ff(a, b, c, d, x[i + 12],  7,  1804603682);\n            d = this.md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n            c = this.md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n            b = this.md5_ff(b, c, d, a, x[i + 15], 22,  1236535329);\n\n            a = this.md5_gg(a, b, c, d, x[i +  1],  5, -165796510);\n            d = this.md5_gg(d, a, b, c, x[i +  6],  9, -1069501632);\n            c = this.md5_gg(c, d, a, b, x[i + 11], 14,  643717713);\n            b = this.md5_gg(b, c, d, a, x[i],      20, -373897302);\n            a = this.md5_gg(a, b, c, d, x[i +  5],  5, -701558691);\n            d = this.md5_gg(d, a, b, c, x[i + 10],  9,  38016083);\n            c = this.md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n            b = this.md5_gg(b, c, d, a, x[i +  4], 20, -405537848);\n            a = this.md5_gg(a, b, c, d, x[i +  9],  5,  568446438);\n            d = this.md5_gg(d, a, b, c, x[i + 14],  9, -1019803690);\n            c = this.md5_gg(c, d, a, b, x[i +  3], 14, -187363961);\n            b = this.md5_gg(b, c, d, a, x[i +  8], 20,  1163531501);\n            a = this.md5_gg(a, b, c, d, x[i + 13],  5, -1444681467);\n            d = this.md5_gg(d, a, b, c, x[i +  2],  9, -51403784);\n            c = this.md5_gg(c, d, a, b, x[i +  7], 14,  1735328473);\n            b = this.md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n            a = this.md5_hh(a, b, c, d, x[i +  5],  4, -378558);\n            d = this.md5_hh(d, a, b, c, x[i +  8], 11, -2022574463);\n            c = this.md5_hh(c, d, a, b, x[i + 11], 16,  1839030562);\n            b = this.md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n            a = this.md5_hh(a, b, c, d, x[i +  1],  4, -1530992060);\n            d = this.md5_hh(d, a, b, c, x[i +  4], 11,  1272893353);\n            c = this.md5_hh(c, d, a, b, x[i +  7], 16, -155497632);\n            b = this.md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n            a = this.md5_hh(a, b, c, d, x[i + 13],  4,  681279174);\n            d = this.md5_hh(d, a, b, c, x[i],      11, -358537222);\n            c = this.md5_hh(c, d, a, b, x[i +  3], 16, -722521979);\n            b = this.md5_hh(b, c, d, a, x[i +  6], 23,  76029189);\n            a = this.md5_hh(a, b, c, d, x[i +  9],  4, -640364487);\n            d = this.md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n            c = this.md5_hh(c, d, a, b, x[i + 15], 16,  530742520);\n            b = this.md5_hh(b, c, d, a, x[i +  2], 23, -995338651);\n\n            a = this.md5_ii(a, b, c, d, x[i],       6, -198630844);\n            d = this.md5_ii(d, a, b, c, x[i +  7], 10,  1126891415);\n            c = this.md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n            b = this.md5_ii(b, c, d, a, x[i +  5], 21, -57434055);\n            a = this.md5_ii(a, b, c, d, x[i + 12],  6,  1700485571);\n            d = this.md5_ii(d, a, b, c, x[i +  3], 10, -1894986606);\n            c = this.md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n            b = this.md5_ii(b, c, d, a, x[i +  1], 21, -2054922799);\n            a = this.md5_ii(a, b, c, d, x[i +  8],  6,  1873313359);\n            d = this.md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n            c = this.md5_ii(c, d, a, b, x[i +  6], 15, -1560198380);\n            b = this.md5_ii(b, c, d, a, x[i + 13], 21,  1309151649);\n            a = this.md5_ii(a, b, c, d, x[i +  4],  6, -145523070);\n            d = this.md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n            c = this.md5_ii(c, d, a, b, x[i +  2], 15,  718787259);\n            b = this.md5_ii(b, c, d, a, x[i +  9], 21, -343485551);\n\n            a = this.safe_add(a, olda);\n            b = this.safe_add(b, oldb);\n            c = this.safe_add(c, oldc);\n            d = this.safe_add(d, oldd);\n        }\n        return [a, b, c, d];\n    };\n\n    /*\n    * Convert an array of little-endian words to a string\n    */\n    BlueImpMD5.prototype.binl2rstr = function (input) {\n        var i,\n            output = '';\n        for (i = 0; i < input.length * 32; i += 8) {\n            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\n        }\n        return output;\n    };\n\n    /*\n    * Convert a raw string to an array of little-endian words\n    * Characters >255 have their high-byte silently ignored.\n    */\n    BlueImpMD5.prototype.rstr2binl = function (input) {\n        var i,\n            output = [];\n        output[(input.length >> 2) - 1] = undefined;\n        for (i = 0; i < output.length; i += 1) {\n            output[i] = 0;\n        }\n        for (i = 0; i < input.length * 8; i += 8) {\n            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\n        }\n        return output;\n    };\n\n    /*\n    * Calculate the MD5 of a raw string\n    */\n    BlueImpMD5.prototype.rstr_md5 = function (s) {\n        return this.binl2rstr(this.binl_md5(this.rstr2binl(s), s.length * 8));\n    };\n\n    /*\n    * Calculate the HMAC-MD5, of a key and some data (raw strings)\n    */\n    BlueImpMD5.prototype.rstr_hmac_md5 = function (key, data) {\n        var i,\n            bkey = this.rstr2binl(key),\n            ipad = [],\n            opad = [],\n            hash;\n        ipad[15] = opad[15] = undefined;\n        if (bkey.length > 16) {\n            bkey = this.binl_md5(bkey, key.length * 8);\n        }\n        for (i = 0; i < 16; i += 1) {\n            ipad[i] = bkey[i] ^ 0x36363636;\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\n        }\n        hash = this.binl_md5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8);\n        return this.binl2rstr(this.binl_md5(opad.concat(hash), 512 + 128));\n    };\n\n    /*\n    * Convert a raw string to a hex string\n    */\n    BlueImpMD5.prototype.rstr2hex = function (input) {\n        var hex_tab = '0123456789abcdef',\n            output = '',\n            x,\n            i;\n        for (i = 0; i < input.length; i += 1) {\n            x = input.charCodeAt(i);\n            output += hex_tab.charAt((x >>> 4) & 0x0F) +\n                hex_tab.charAt(x & 0x0F);\n        }\n        return output;\n    };\n\n    /*\n    * Encode a string as utf-8\n    */\n    BlueImpMD5.prototype.str2rstr_utf8 = function (input) {\n        return unescape(encodeURIComponent(input));\n    };\n\n    /*\n    * Take string arguments and return either raw or hex encoded strings\n    */\n    BlueImpMD5.prototype.raw_md5 = function (s) {\n        return this.rstr_md5(this.str2rstr_utf8(s));\n    };\n    BlueImpMD5.prototype.hex_md5 = function (s) {\n        return this.rstr2hex(this.raw_md5(s));\n    };\n    BlueImpMD5.prototype.raw_hmac_md5 = function (k, d) {\n        return this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d));\n    };\n    BlueImpMD5.prototype.hex_hmac_md5 = function (k, d) {\n        return this.rstr2hex(this.raw_hmac_md5(k, d));\n    };\n\n    BlueImpMD5.prototype.md5 = function (string, key, raw) {\n        if (!key) {\n            if (!raw) {\n                return this.hex_md5(string);\n            }\n\n            return this.raw_md5(string);\n        }\n\n        if (!raw) {\n            return this.hex_hmac_md5(key, string);\n        }\n\n        return this.raw_hmac_md5(key, string);\n    };\n\n    // CommonJS module\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = Chance;\n        }\n        exports.Chance = Chance;\n    }\n\n    // Register as an anonymous AMD module\n    if (typeof define === 'function' && define.amd) {\n        define([], function () {\n            return Chance;\n        });\n    }\n\n    // if there is a importsScrips object define chance for worker\n    // allows worker to use full Chance functionality with seed\n    if (typeof importScripts !== 'undefined') {\n        chance = new Chance();\n        self.Chance = Chance;\n    }\n\n    // If there is a window object, that at least has a document property,\n    // instantiate and define chance on the window\n    if (typeof window === \"object\" && typeof window.document === \"object\") {\n        window.Chance = Chance;\n        window.chance = new Chance();\n    }\n})();\n", "import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function renderAvatar(params) {\n  if (params.value == null) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(Avatar, {\n    style: {\n      backgroundColor: params.value.color\n    },\n    children: params.value.name.toUpperCase().substring(0, 1)\n  });\n}", "import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Country = /*#__PURE__*/React.memo(function Country(props) {\n  const {\n    value\n  } = props;\n  return /*#__PURE__*/_jsxs(Box, {\n    sx: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      '&  > img': {\n        mr: 0.5,\n        flexShrink: 0,\n        width: '20px'\n      }\n    },\n    children: [/*#__PURE__*/_jsx(\"img\", {\n      loading: \"lazy\",\n      width: \"20\",\n      src: `https://flagcdn.com/w20/${value.code.toLowerCase()}.png`,\n      srcSet: `https://flagcdn.com/w40/${value.code.toLowerCase()}.png 2x`,\n      alt: \"\"\n    }), /*#__PURE__*/_jsx(Box, {\n      component: \"span\",\n      sx: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      children: value.label\n    })]\n  });\n});\nexport function renderCountry(params) {\n  if (params.value == null) {\n    return '';\n  }\n\n  // If the aggregated value does not have the same unit as the other cell\n  // Then we fall back to the default rendering based on `valueGetter` instead of rendering the total price UI.\n  if (params.aggregation && !params.aggregation.hasCellUnit) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Country, {\n    value: params.value\n  });\n}", "import * as React from 'react';\nimport { DemoLink } from './renderLink';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function renderEmail(params) {\n  const email = params.value ?? '';\n  return /*#__PURE__*/_jsx(DemoLink, {\n    href: `mailto:${email}`,\n    tabIndex: params.tabIndex,\n    children: email\n  });\n}", "import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Link = styled('a')({\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  color: 'inherit'\n});\nexport const DemoLink = /*#__PURE__*/React.memo(function DemoLink(props) {\n  const handleClick = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n  return /*#__PURE__*/_jsx(Link, {\n    tabIndex: props.tabIndex,\n    onClick: handleClick,\n    href: props.href,\n    children: props.children\n  });\n});\nexport function renderLink(params) {\n  if (params.value == null) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(DemoLink, {\n    href: params.value,\n    tabIndex: params.tabIndex,\n    children: params.value\n  });\n}", "import * as React from 'react';\nimport Tooltip from '@mui/material/Tooltip';\nimport Box from '@mui/material/Box';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Incoterm = /*#__PURE__*/React.memo(function Incoterm(props) {\n  const {\n    value\n  } = props;\n  if (!value) {\n    return null;\n  }\n  const valueStr = value.toString();\n  const tooltip = valueStr.slice(valueStr.indexOf('(') + 1, valueStr.indexOf(')'));\n  const code = valueStr.slice(0, valueStr.indexOf('(')).trim();\n  return /*#__PURE__*/_jsxs(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      children: code\n    }), /*#__PURE__*/_jsx(Tooltip, {\n      title: tooltip,\n      children: /*#__PURE__*/_jsx(InfoIcon, {\n        sx: {\n          color: '#2196f3',\n          alignSelf: 'center',\n          ml: '8px'\n        }\n      })\n    })]\n  });\n});\nexport function renderIncoterm(params) {\n  return /*#__PURE__*/_jsx(Incoterm, {\n    value: params.value\n  });\n}", "import * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Value = styled('div')(({\n  theme\n}) => ({\n  width: '100%',\n  fontVariantNumeric: 'tabular-nums',\n  '&.positive': {\n    color: theme.palette.mode === 'light' ? theme.palette.success.dark : theme.palette.success.light\n  },\n  '&.negative': {\n    color: theme.palette.mode === 'light' ? theme.palette.error.dark : theme.palette.error.light\n  }\n}));\nfunction pnlFormatter(value) {\n  return value < 0 ? `(${Math.abs(value).toLocaleString()})` : value.toLocaleString();\n}\nconst Pnl = /*#__PURE__*/React.memo(function Pnl(props) {\n  const {\n    value\n  } = props;\n  return /*#__PURE__*/_jsx(Value, {\n    className: clsx(value > 0 && \"positive\", value < 0 && \"negative\"),\n    children: pnlFormatter(value)\n  });\n});\nexport function renderPnl(params) {\n  if (params.value == null) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(Pnl, {\n    value: params.value\n  });\n}", "import * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Center = styled('div')({\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center'\n});\nconst Element = styled('div')(({\n  theme\n}) => ({\n  border: `1px solid ${(theme.vars || theme).palette.divider}`,\n  position: 'relative',\n  overflow: 'hidden',\n  width: '100%',\n  height: 26,\n  borderRadius: 2\n}));\nconst Value = styled('div')({\n  position: 'absolute',\n  lineHeight: '24px',\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center'\n});\nconst Bar = styled('div')({\n  height: '100%',\n  '&.low': {\n    backgroundColor: '#f44336'\n  },\n  '&.medium': {\n    backgroundColor: '#efbb5aa3'\n  },\n  '&.high': {\n    backgroundColor: '#088208a3'\n  }\n});\nconst ProgressBar = /*#__PURE__*/React.memo(function ProgressBar(props) {\n  const {\n    value\n  } = props;\n  const valueInPercent = value * 100;\n  return /*#__PURE__*/_jsxs(Element, {\n    children: [/*#__PURE__*/_jsx(Value, {\n      children: `${valueInPercent.toLocaleString()} %`\n    }), /*#__PURE__*/_jsx(Bar, {\n      className: clsx(valueInPercent < 30 && \"low\", valueInPercent >= 30 && valueInPercent <= 70 && \"medium\", valueInPercent > 70 && \"high\"),\n      style: {\n        maxWidth: `${valueInPercent}%`\n      }\n    })]\n  });\n});\nexport function renderProgress(params) {\n  if (params.value == null) {\n    return '';\n  }\n\n  // If the aggregated value does not have the same unit as the other cell\n  // Then we fall back to the default rendering based on `valueGetter` instead of rendering a progress bar.\n  if (params.aggregation && !params.aggregation.hasCellUnit) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Center, {\n    children: /*#__PURE__*/_jsx(ProgressBar, {\n      value: params.value\n    })\n  });\n}", "import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Rating from '@mui/material/Rating';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RatingValue = /*#__PURE__*/React.memo(function RatingValue(props) {\n  const {\n    value\n  } = props;\n  return /*#__PURE__*/_jsxs(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: '24px',\n      color: 'text.secondary'\n    },\n    children: [/*#__PURE__*/_jsx(Rating, {\n      value: value,\n      sx: {\n        mr: 1\n      },\n      readOnly: true\n    }), \" \", Math.round(Number(value) * 10) / 10]\n  });\n});\nexport function renderRating(params) {\n  if (params.value == null) {\n    return '';\n  }\n\n  // If the aggregated value does not have the same unit as the other cell\n  // Then we fall back to the default rendering based on `valueGetter` instead of rendering the total price UI.\n  if (params.aggregation && !params.aggregation.hasCellUnit) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(RatingValue, {\n    value: params.value\n  });\n}", "import * as React from 'react';\nimport ReportProblemIcon from '@mui/icons-material/ReportProblem';\nimport InfoIcon from '@mui/icons-material/Info';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DoneIcon from '@mui/icons-material/Done';\nimport Chip from '@mui/material/Chip';\nimport { styled } from '@mui/material/styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledChip = styled(Chip)(({\n  theme\n}) => ({\n  justifyContent: 'left',\n  '& .icon': {\n    color: 'inherit'\n  },\n  '&.Open': {\n    color: (theme.vars || theme).palette.info.dark,\n    border: `1px solid ${(theme.vars || theme).palette.info.main}`\n  },\n  '&.Filled': {\n    color: (theme.vars || theme).palette.success.dark,\n    border: `1px solid ${(theme.vars || theme).palette.success.main}`\n  },\n  '&.PartiallyFilled': {\n    color: (theme.vars || theme).palette.warning.dark,\n    border: `1px solid ${(theme.vars || theme).palette.warning.main}`\n  },\n  '&.Rejected': {\n    color: (theme.vars || theme).palette.error.dark,\n    border: `1px solid ${(theme.vars || theme).palette.error.main}`\n  }\n}));\nconst Status = /*#__PURE__*/React.memo(props => {\n  const {\n    status\n  } = props;\n  let icon = null;\n  if (status === 'Rejected') {\n    icon = /*#__PURE__*/_jsx(ReportProblemIcon, {\n      className: \"icon\"\n    });\n  } else if (status === 'Open') {\n    icon = /*#__PURE__*/_jsx(InfoIcon, {\n      className: \"icon\"\n    });\n  } else if (status === 'PartiallyFilled') {\n    icon = /*#__PURE__*/_jsx(AutorenewIcon, {\n      className: \"icon\"\n    });\n  } else if (status === 'Filled') {\n    icon = /*#__PURE__*/_jsx(DoneIcon, {\n      className: \"icon\"\n    });\n  }\n  let label = status;\n  if (status === 'PartiallyFilled') {\n    label = 'Partially Filled';\n  }\n  return /*#__PURE__*/_jsx(StyledChip, {\n    className: status,\n    icon: icon,\n    size: \"small\",\n    label: label,\n    variant: \"outlined\"\n  });\n});\nexport function renderStatus(params) {\n  if (params.value == null) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(Status, {\n    status: params.value\n  });\n}", "import * as React from 'react';\nimport clsx from 'clsx';\nimport { alpha, styled } from '@mui/material/styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Value = styled('div')(({\n  theme\n}) => ({\n  width: '100%',\n  height: '100%',\n  lineHeight: '100%',\n  paddingRight: 8,\n  fontVariantNumeric: 'tabular-nums',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  '&.good': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.success.mainChannel} /  0.3)` : alpha(theme.palette.success.main, 0.3)\n  },\n  '&.bad': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.error.mainChannel} /  0.3)` : alpha(theme.palette.error.main, 0.3)\n  }\n}));\nconst currencyFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\nconst TotalPrice = /*#__PURE__*/React.memo(function TotalPrice(props) {\n  const {\n    value\n  } = props;\n  return /*#__PURE__*/_jsx(Value, {\n    className: clsx(value > 1000000 && \"good\", value < 1000000 && \"bad\"),\n    children: currencyFormatter.format(value)\n  });\n});\nexport function renderTotalPrice(params) {\n  if (params.value == null) {\n    return '';\n  }\n\n  // If the aggregated value does not have the same unit as the other cell\n  // Then we fall back to the default rendering based on `valueGetter` instead of rendering the total price UI.\n  if (params.aggregation && !params.aggregation.hasCellUnit) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(TotalPrice, {\n    value: params.value\n  });\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '@mui/x-data-grid-premium';\nimport Autocomplete, { autocompleteClasses } from '@mui/material/Autocomplete';\nimport InputBase from '@mui/material/InputBase';\nimport Box from '@mui/material/Box';\nimport { styled } from '@mui/material/styles';\nimport { CURRENCY_OPTIONS } from '../services/static-data';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst StyledAutocomplete = styled(Autocomplete)(({\n  theme\n}) => ({\n  height: '100%',\n  [`& .${autocompleteClasses.inputRoot}`]: _extends({}, theme.typography.body2, {\n    padding: '1px 0',\n    height: '100%',\n    '& input': {\n      padding: '0 16px',\n      height: '100%'\n    }\n  })\n}));\nfunction EditCurrency(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const apiRef = useGridApiContext();\n  const handleChange = React.useCallback(async (event, newValue) => {\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newValue.toUpperCase()\n    }, event);\n    apiRef.current.stopCellEditMode({\n      id,\n      field\n    });\n  }, [apiRef, field, id]);\n  return /*#__PURE__*/_jsx(StyledAutocomplete, {\n    value: value,\n    onChange: handleChange,\n    options: CURRENCY_OPTIONS,\n    autoHighlight: true,\n    fullWidth: true,\n    open: true,\n    disableClearable: true,\n    renderOption: (optionProps, option) => /*#__PURE__*/_jsxs(Box, _extends({\n      component: \"li\",\n      sx: {\n        '& > img': {\n          mr: 1.5,\n          flexShrink: 0\n        }\n      }\n    }, optionProps, {\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        loading: \"lazy\",\n        width: \"20\",\n        src: `https://flagcdn.com/w20/${option.slice(0, -1).toLowerCase()}.png`,\n        srcSet: `https://flagcdn.com/w40/${option.slice(0, -1).toLowerCase()}.png 2x`,\n        alt: \"\"\n      }), option]\n    })),\n    renderInput: params => /*#__PURE__*/_jsx(InputBase, _extends({\n      autoFocus: true,\n      fullWidth: true,\n      id: params.id,\n      inputProps: _extends({}, params.inputProps, {\n        autoComplete: 'new-password' // disable autocomplete and autofill\n      })\n    }, params.InputProps))\n  });\n}\nexport function renderEditCurrency(params) {\n  return /*#__PURE__*/_jsx(EditCurrency, _extends({}, params));\n}", "/* eslint-disable */\n// See \"precomputation\" in notes\nconst k = [];\nlet i = 0;\nfor (; i < 64;) {\n  k[i] = 0 | Math.sin(++i % Math.PI) * 4294967296;\n  // k[i] = 0 | (Math.abs(Math.sin(++i)) * 4294967296);\n}\nexport function md5(s) {\n  const words = [];\n  let b,\n    c,\n    d,\n    j = unescape(encodeURI(s)) + '\\x80',\n    a = j.length;\n  const h = [b = 0x67452301, c = 0xefcdab89, ~b, ~c];\n  s = --a / 4 + 2 | 15;\n\n  // See \"Length bits\" in notes\n  words[--s] = a * 8;\n  for (; ~a;) {\n    // a !== -1\n    words[a >> 2] |= j.charCodeAt(a) << 8 * a--;\n  }\n  for (i = j = 0; i < s; i += 16) {\n    a = h;\n    for (; j < 64; a = [d = a[3], b + ((d = a[0] + [b & c | ~b & d, d & b | ~d & c, b ^ c ^ d, c ^ (b | ~d)][a = j >> 4] + k[j] + ~~words[i | [j, 5 * j + 1, 3 * j + 5, 7 * j][a] & 15]) << (a = [7, 12, 17, 22, 5, 9, 14, 20, 4, 11, 16, 23, 6, 10, 15, 21][4 * a + j++ % 4]) | d >>> -a), b, c]) {\n      b = a[1] | 0;\n      c = a[2];\n    }\n\n    // See \"Integer safety\" in notes\n    for (j = 4; j;) h[--j] += a[j];\n\n    // j === 0\n  }\n  for (s = ''; j < 32;) {\n    s += (h[j >> 3] >> (1 ^ j++) * 4 & 15).toString(16);\n    // s += ((h[j >> 3] >> (4 ^ 4 * j++)) & 15).toString(16);\n  }\n  return s;\n}", "/* eslint-disable */\nconst _keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nfunction utf8Encode(str) {\n  for (let n = 0; n < str.length; n++) {\n    const c = str.charCodeAt(n);\n    if (c >= 128) {\n      throw new Error('ASCII only support');\n    }\n  }\n  return str;\n}\nexport const base64Decode = input => {\n  let output = '';\n  let chr1, chr2, chr3;\n  let enc1, enc2, enc3, enc4;\n  let i = 0;\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n  while (i < input.length) {\n    enc1 = _keyStr.indexOf(input.charAt(i++));\n    enc2 = _keyStr.indexOf(input.charAt(i++));\n    enc3 = _keyStr.indexOf(input.charAt(i++));\n    enc4 = _keyStr.indexOf(input.charAt(i++));\n    chr1 = enc1 << 2 | enc2 >> 4;\n    chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n    chr3 = (enc3 & 3) << 6 | enc4;\n    output = output + String.fromCharCode(chr1);\n    if (enc3 != 64) {\n      output = output + String.fromCharCode(chr2);\n    }\n    if (enc4 != 64) {\n      output = output + String.fromCharCode(chr3);\n    }\n  }\n  return output;\n};\nexport const base64Encode = input => {\n  let output = '';\n  let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n  let i = 0;\n  input = utf8Encode(input);\n  while (i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n    enc1 = chr1 >> 2;\n    enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n    enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n    enc4 = chr3 & 63;\n    if (isNaN(chr2)) {\n      enc3 = enc4 = 64;\n    } else if (isNaN(chr3)) {\n      enc4 = 64;\n    }\n    output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n  }\n  return output;\n};", "export const LICENSE_SCOPES = ['pro', 'premium'];", "export const LICENSING_MODELS = [\n/**\n * A license is outdated if the current version of the software was released after the expiry date of the license.\n * But the license can be used indefinitely with an older version of the software.\n */\n'perpetual',\n/**\n * On development, a license is outdated if the expiry date has been reached\n * On production, a license is outdated if the current version of the software was released after the expiry date of the license (see \"perpetual\")\n */\n'annual',\n/**\n * TODO 2025 remove, legacy name of annual.\n */\n'subscription'];", "function showError(message) {\n  console.error(['*************************************************************', '', ...message, '', '*************************************************************'].join('\\n'));\n}\nexport function showInvalidLicenseKeyError() {\n  showError(['MUI X: Invalid license key.', '', \"Your MUI X license key format isn't valid. It could be because the license key is missing a character or has a typo.\", '', 'To solve the issue, you need to double check that `setLicenseKey()` is called with the right argument', 'Please check the license key installation https://mui.com/r/x-license-key-installation.']);\n}\nexport function showLicenseKeyPlanMismatchError() {\n  showError(['MUI X: License key plan mismatch.', '', 'Your use of MUI X is not compatible with the plan of your license key. The feature you are trying to use is not included in the plan of your license key. This happens if you try to use `DataGridPremium` with a license key for the Pro plan.', '', 'To solve the issue, you can upgrade your plan from Pro to Premium at https://mui.com/r/x-get-license?scope=premium.', \"Of if you didn't intend to use Premium features, you can replace the import of `@mui/x-data-grid-premium` with `@mui/x-data-grid-pro`.\"]);\n}\nexport function showMissingLicenseKeyError({\n  plan,\n  packageName\n}) {\n  showError(['MUI X: Missing license key.', '', `The license key is missing. You might not be allowed to use \\`${packageName}\\` which is part of MUI X ${plan}.`, '', 'To solve the issue, you can check the free trial conditions: https://mui.com/r/x-license-trial.', 'If you are eligible no actions are required. If you are not eligible to the free trial, you need to purchase a license https://mui.com/r/x-get-license or stop using the software immediately.']);\n}\nexport function showExpiredPackageVersionError({\n  packageName\n}) {\n  showError(['MUI X: Expired package version.', '', `You have installed a version of \\`${packageName}\\` that is outside of the maintenance plan of your license key. By default, commercial licenses provide access to new versions released during the first year after the purchase.`, '', 'To solve the issue, you can renew your license https://mui.com/r/x-get-license or install an older version of the npm package that is compatible with your license key.']);\n}\nexport function showExpiredAnnualGraceLicenseKeyError({\n  plan,\n  licenseKey,\n  expiryTimestamp\n}) {\n  showError(['MUI X: Expired license key.', '', `Your annual license key to use MUI X ${plan} in non-production environments has expired. If you are seeing this development console message, you might be close to breach the license terms by making direct or indirect changes to the frontend of an app that render a MUI X ${plan} component (more details in https://mui.com/r/x-license-annual).`, '', 'To solve the problem you can either:', '', '- Renew your license https://mui.com/r/x-get-license and use the new key', `- Stop making changes to code depending directly or indirectly on MUI X ${plan}'s APIs`, '', 'Note that your license is perpetual in production environments with any version released before your license term ends.', '', `- License key expiry timestamp: ${new Date(expiryTimestamp)}`, `- Installed license key: ${licenseKey}`, '']);\n}\nexport function showExpiredAnnualLicenseKeyError({\n  plan,\n  licenseKey,\n  expiryTimestamp\n}) {\n  throw new Error(['MUI X: Expired license key.', '', `Your annual license key to use MUI X ${plan} in non-production environments has expired. If you are seeing this development console message, you might be close to breach the license terms by making direct or indirect changes to the frontend of an app that render a MUI X ${plan} component (more details in https://mui.com/r/x-license-annual).`, '', 'To solve the problem you can either:', '', '- Renew your license https://mui.com/r/x-get-license and use the new key', `- Stop making changes to code depending directly or indirectly on MUI X ${plan}'s APIs`, '', 'Note that your license is perpetual in production environments with any version released before your license term ends.', '', `- License key expiry timestamp: ${new Date(expiryTimestamp)}`, `- Installed license key: ${licenseKey}`, ''].join('\\n'));\n}", "import { ponyfillGlobal } from '@mui/utils';\n\n/**\n * @ignore - do not document.\n */\n\n// Store the license information in a global, so it can be shared\n// when module duplication occurs. The duplication of the modules can happen\n// if using multiple version of MUI X at the same time of the bundler\n// decide to duplicate to improve the size of the chunks.\n// eslint-disable-next-line no-underscore-dangle\nponyfillGlobal.__MUI_LICENSE_INFO__ = ponyfillGlobal.__MUI_LICENSE_INFO__ || {\n  key: undefined\n};\nexport class LicenseInfo {\n  static getLicenseInfo() {\n    // eslint-disable-next-line no-underscore-dangle\n    return ponyfillGlobal.__MUI_LICENSE_INFO__;\n  }\n  static getLicenseKey() {\n    return LicenseInfo.getLicenseInfo().key;\n  }\n  static setLicenseKey(key) {\n    const licenseInfo = LicenseInfo.getLicenseInfo();\n    licenseInfo.key = key;\n  }\n}", "// eslint-disable-next-line @typescript-eslint/naming-convention\nexport let LICENSE_STATUS = /*#__PURE__*/function (LICENSE_STATUS) {\n  LICENSE_STATUS[\"NotFound\"] = \"NotFound\";\n  LICENSE_STATUS[\"Invalid\"] = \"Invalid\";\n  LICENSE_STATUS[\"ExpiredAnnual\"] = \"ExpiredAnnual\";\n  LICENSE_STATUS[\"ExpiredAnnualGrace\"] = \"ExpiredAnnualGrace\";\n  LICENSE_STATUS[\"ExpiredVersion\"] = \"ExpiredVersion\";\n  LICENSE_STATUS[\"Valid\"] = \"Valid\";\n  LICENSE_STATUS[\"OutOfScope\"] = \"OutOfScope\";\n  return LICENSE_STATUS;\n}({});", "import { base64Decode, base64Encode } from '../encoding/base64';\nimport { md5 } from '../encoding/md5';\nimport { LICENSE_STATUS } from '../utils/licenseStatus';\nimport { LICENSE_SCOPES } from '../utils/licenseScope';\nimport { LICENSING_MODELS } from '../utils/licensingModel';\nconst getDefaultReleaseDate = () => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  return today;\n};\nexport function generateReleaseInfo(releaseDate = getDefaultReleaseDate()) {\n  return base64Encode(releaseDate.getTime().toString());\n}\nconst expiryReg = /^.*EXPIRY=([0-9]+),.*$/;\n/**\n * Format: ORDER:${orderNumber},EXPIRY=${expiryTimestamp},KEYVERSION=1\n */\nconst decodeLicenseVersion1 = license => {\n  let expiryTimestamp;\n  try {\n    expiryTimestamp = parseInt(license.match(expiryReg)[1], 10);\n    if (!expiryTimestamp || Number.isNaN(expiryTimestamp)) {\n      expiryTimestamp = null;\n    }\n  } catch (err) {\n    expiryTimestamp = null;\n  }\n  return {\n    scope: 'pro',\n    licensingModel: 'perpetual',\n    expiryTimestamp\n  };\n};\n\n/**\n * Format: O=${orderNumber},E=${expiryTimestamp},S=${scope},LM=${licensingModel},KV=2`;\n */\nconst decodeLicenseVersion2 = license => {\n  const licenseInfo = {\n    scope: null,\n    licensingModel: null,\n    expiryTimestamp: null\n  };\n  license.split(',').map(token => token.split('=')).filter(el => el.length === 2).forEach(([key, value]) => {\n    if (key === 'S') {\n      licenseInfo.scope = value;\n    }\n    if (key === 'LM') {\n      licenseInfo.licensingModel = value;\n    }\n    if (key === 'E') {\n      const expiryTimestamp = parseInt(value, 10);\n      if (expiryTimestamp && !Number.isNaN(expiryTimestamp)) {\n        licenseInfo.expiryTimestamp = expiryTimestamp;\n      }\n    }\n  });\n  return licenseInfo;\n};\n\n/**\n * Decode the license based on its key version and return a version-agnostic `MuiLicense` object.\n */\nconst decodeLicense = encodedLicense => {\n  const license = base64Decode(encodedLicense);\n  if (license.includes('KEYVERSION=1')) {\n    return decodeLicenseVersion1(license);\n  }\n  if (license.includes('KV=2')) {\n    return decodeLicenseVersion2(license);\n  }\n  return null;\n};\nexport function verifyLicense({\n  releaseInfo,\n  licenseKey,\n  acceptedScopes\n}) {\n  if (!releaseInfo) {\n    throw new Error('MUI X: The release information is missing. Not able to validate license.');\n  }\n  if (!licenseKey) {\n    return {\n      status: LICENSE_STATUS.NotFound\n    };\n  }\n  const hash = licenseKey.substr(0, 32);\n  const encoded = licenseKey.substr(32);\n  if (hash !== md5(encoded)) {\n    return {\n      status: LICENSE_STATUS.Invalid\n    };\n  }\n  const license = decodeLicense(encoded);\n  if (license == null) {\n    console.error('MUI X: Error checking license. Key version not found!');\n    return {\n      status: LICENSE_STATUS.Invalid\n    };\n  }\n  if (license.licensingModel == null || !LICENSING_MODELS.includes(license.licensingModel)) {\n    console.error('MUI X: Error checking license. Licensing model not found or invalid!');\n    return {\n      status: LICENSE_STATUS.Invalid\n    };\n  }\n  if (license.expiryTimestamp == null) {\n    console.error('MUI X: Error checking license. Expiry timestamp not found or invalid!');\n    return {\n      status: LICENSE_STATUS.Invalid\n    };\n  }\n  if (license.licensingModel === 'perpetual' || process.env.NODE_ENV === 'production') {\n    const pkgTimestamp = parseInt(base64Decode(releaseInfo), 10);\n    if (Number.isNaN(pkgTimestamp)) {\n      throw new Error('MUI X: The release information is invalid. Not able to validate license.');\n    }\n    if (license.expiryTimestamp < pkgTimestamp) {\n      return {\n        status: LICENSE_STATUS.ExpiredVersion\n      };\n    }\n  } else if (license.licensingModel === 'subscription' || license.licensingModel === 'annual') {\n    if (new Date().getTime() > license.expiryTimestamp) {\n      if (\n      // 30 days grace\n      new Date().getTime() < license.expiryTimestamp + 1000 * 3600 * 24 * 30 || process.env.NODE_ENV !== 'development') {\n        return {\n          status: LICENSE_STATUS.ExpiredAnnualGrace,\n          meta: {\n            expiryTimestamp: license.expiryTimestamp,\n            licenseKey\n          }\n        };\n      }\n      return {\n        status: LICENSE_STATUS.ExpiredAnnual,\n        meta: {\n          expiryTimestamp: license.expiryTimestamp,\n          licenseKey\n        }\n      };\n    }\n  }\n  if (license.scope == null || !LICENSE_SCOPES.includes(license.scope)) {\n    console.error('Error checking license. scope not found or invalid!');\n    return {\n      status: LICENSE_STATUS.Invalid\n    };\n  }\n  if (!acceptedScopes.includes(license.scope)) {\n    return {\n      status: LICENSE_STATUS.OutOfScope\n    };\n  }\n  return {\n    status: LICENSE_STATUS.Valid\n  };\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { verifyLicense } from '../verifyLicense/verifyLicense';\nimport { LicenseInfo } from '../utils/licenseInfo';\nimport { showExpiredAnnualGraceLicenseKeyError, showExpiredAnnualLicenseKeyError, showInvalidLicenseKeyError, showMissingLicenseKeyError, showLicenseKeyPlanMismatchError, showExpiredPackageVersionError } from '../utils/licenseErrorMessageUtils';\nimport { LICENSE_STATUS } from '../utils/licenseStatus';\nimport MuiLicenseInfoContext from '../Unstable_LicenseInfoProvider/MuiLicenseInfoContext';\nexport const sharedLicenseStatuses = {};\nexport function useLicenseVerifier(packageName, releaseInfo) {\n  const {\n    key: contextKey\n  } = React.useContext(MuiLicenseInfoContext);\n  return React.useMemo(() => {\n    const licenseKey = contextKey ?? LicenseInfo.getLicenseKey();\n\n    // Cache the response to not trigger the error twice.\n    if (sharedLicenseStatuses[packageName] && sharedLicenseStatuses[packageName].key === licenseKey) {\n      return sharedLicenseStatuses[packageName].licenseVerifier;\n    }\n    const acceptedScopes = packageName.includes('premium') ? ['premium'] : ['pro', 'premium'];\n    const plan = packageName.includes('premium') ? 'Premium' : 'Pro';\n    const licenseStatus = verifyLicense({\n      releaseInfo,\n      licenseKey,\n      acceptedScopes\n    });\n    const fullPackageName = `@mui/${packageName}`;\n    if (licenseStatus.status === LICENSE_STATUS.Valid) {\n      // Skip\n    } else if (licenseStatus.status === LICENSE_STATUS.Invalid) {\n      showInvalidLicenseKeyError();\n    } else if (licenseStatus.status === LICENSE_STATUS.OutOfScope) {\n      showLicenseKeyPlanMismatchError();\n    } else if (licenseStatus.status === LICENSE_STATUS.NotFound) {\n      showMissingLicenseKeyError({\n        plan,\n        packageName: fullPackageName\n      });\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnualGrace) {\n      showExpiredAnnualGraceLicenseKeyError(_extends({\n        plan\n      }, licenseStatus.meta));\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnual) {\n      showExpiredAnnualLicenseKeyError(_extends({\n        plan\n      }, licenseStatus.meta));\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredVersion) {\n      showExpiredPackageVersionError({\n        packageName: fullPackageName\n      });\n    } else if (process.env.NODE_ENV !== 'production') {\n      throw new Error('missing status handler');\n    }\n    sharedLicenseStatuses[packageName] = {\n      key: licenseKey,\n      licenseVerifier: licenseStatus\n    };\n    return licenseStatus;\n  }, [packageName, releaseInfo, contextKey]);\n}", "import * as React from 'react';\nconst MuiLicenseInfoContext = /*#__PURE__*/React.createContext({\n  key: undefined\n});\nif (process.env.NODE_ENV !== 'production') {\n  MuiLicenseInfoContext.displayName = 'MuiLicenseInfoContext';\n}\nexport default MuiLicenseInfoContext;", "import * as React from 'react';\nimport { useLicenseVerifier } from '../useLicenseVerifier';\nimport { LICENSE_STATUS } from '../utils/licenseStatus';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getLicenseErrorMessage(licenseStatus) {\n  switch (licenseStatus) {\n    case LICENSE_STATUS.ExpiredAnnualGrace:\n    case LICENSE_STATUS.ExpiredAnnual:\n      return 'MUI X Expired license key';\n    case LICENSE_STATUS.ExpiredVersion:\n      return 'MUI X Expired package version';\n    case LICENSE_STATUS.Invalid:\n      return 'MUI X Invalid license key';\n    case LICENSE_STATUS.OutOfScope:\n      return 'MUI X License key plan mismatch';\n    case LICENSE_STATUS.NotFound:\n      return 'MUI X Missing license key';\n    default:\n      throw new Error('Unhandled MUI X license status.');\n  }\n}\nexport function Watermark(props) {\n  const {\n    packageName,\n    releaseInfo\n  } = props;\n  const licenseStatus = useLicenseVerifier(packageName, releaseInfo);\n  if (licenseStatus.status === LICENSE_STATUS.Valid) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      color: '#8282829e',\n      zIndex: 100000,\n      width: '100%',\n      textAlign: 'center',\n      bottom: '50%',\n      right: 0,\n      letterSpacing: 5,\n      fontSize: 24\n    },\n    children: getLicenseErrorMessage(licenseStatus.status)\n  });\n}", "import * as React from 'react';\nimport MuiLicenseInfoContext from './MuiLicenseInfoContext';\n\n/**\n * @ignore - do not document.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @ignore - do not document.\n */\nexport function LicenseInfoProvider({\n  info,\n  children\n}) {\n  return /*#__PURE__*/_jsx(MuiLicenseInfoContext.Provider, {\n    value: info,\n    children: children\n  });\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridScrollArea } from '../GridScrollArea';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { useGridVirtualScroller } from '../../hooks/features/virtualization/useGridVirtualScroller';\nimport { GridOverlays } from '../base/GridOverlays';\nimport { GridHeaders } from '../GridHeaders';\nimport { GridMainContainer as Container } from './GridMainContainer';\nimport { GridTopContainer as TopContainer } from './GridTopContainer';\nimport { GridBottomContainer as BottomContainer } from './GridBottomContainer';\nimport { GridVirtualScrollerContent as Content } from './GridVirtualScrollerContent';\nimport { GridVirtualScrollerFiller as SpaceFiller } from './GridVirtualScrollerFiller';\nimport { GridVirtualScrollerRenderZone as RenderZone } from './GridVirtualScrollerRenderZone';\nimport { GridVirtualScrollbar as Scrollbar } from './GridVirtualScrollbar';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight'],\n    scroller: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const classes = useUtilityClasses(rootProps, dimensions);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [/*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), rows.length > 0 && /*#__PURE__*/_jsx(SpaceFiller, {}), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass, gridClasses } from '../constants';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridDimensionsSelector } from '../hooks/features/dimensions/gridDimensionsSelectors';\nimport { gridDensityFactorSelector } from '../hooks/features/density/densitySelector';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useTimeout } from '../hooks/utils/useTimeout';\nimport { getTotalHeaderHeight } from '../hooks/features/columns/gridColumnsUtils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaRaw);", "import * as React from 'react';\nimport { GridRootPropsContext } from '../../context/GridRootPropsContext';\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n  if (!contextValue) {\n    throw new Error('MUI X: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n  return contextValue;\n};", "import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\nexport { GridRootPropsContext };", "export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};", "import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderTop', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);", "import * as React from 'react';\nimport { GridApiContext } from '../../components/GridApiContext';\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n  if (apiRef === undefined) {\n    throw new Error(['MUI X: Could not find the data grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return apiRef;\n}", "import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}", "import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };", "// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}", "export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}", "import * as React from 'react';\nimport { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nimport { buildWarning } from '../../utils/warning';\nimport { fastObjectShallowCompare } from '../../utils/fastObjectShallowCompare';\nconst stateNotInitializedWarning = buildWarning(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};", "export { default as useLazyRef } from '@mui/utils/useLazyRef';", "export { default as useOnMount } from '@mui/utils/useOnMount';", "export const buildWarning = (message, gravity = 'warning') => {\n  let alreadyWarned = false;\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  return () => {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      if (gravity === 'error') {\n        console.error(cleanMessage);\n      } else {\n        console.warn(cleanMessage);\n      }\n    }\n  };\n};\nexport const wrapWithWarningOnCall = (method, message) => {\n  if (process.env.NODE_ENV === 'production') {\n    return method;\n  }\n  const warning = buildWarning(message);\n  return (...args) => {\n    warning();\n    return method(...args);\n  };\n};", "const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable no-restricted-syntax */\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  /* eslint-enable no-restricted-syntax */\n  /* eslint-enable guard-for-in */\n\n  return aLength === bLength;\n}", "export const gridDimensionsSelector = state => state.dimensions;", "import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cache = new WeakMap();\nconst missingInstanceIdWarning = buildWarning(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\nexport const createSelector = (a, b, c, d, e, f, ...rest) => {\n  if (rest.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};", "import { createSelector } from '../../../utils/createSelector';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);", "export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};", "/**\n * Get the theme state\n * @category Core\n */\nexport const gridThemeSelector = state => state.theme;", "import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { EMPTY_PINNED_COLUMN_FIELDS } from './gridColumnsInterfaces';\nimport { gridThemeSelector } from '../../core/gridCoreSelector';\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridThemeSelector, (columnsState, model, visibleColumnFields, theme) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, theme.direction === 'rtl');\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));", "export { default as useTimeout } from '@mui/utils/useTimeout';", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from '../../../colDef';\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridHeaderFilteringEnabledSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute there minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    const newColumn = _extends({}, rawState.lookup[columnField]);\n    if (rawState.columnVisibilityModel[columnField] === false) {\n      newColumn.computedWidth = 0;\n    } else {\n      let computedWidth;\n      if (newColumn.flex && newColumn.flex > 0) {\n        totalFlexUnits += newColumn.flex;\n        computedWidth = 0;\n        flexColumns.push(newColumn);\n      } else {\n        computedWidth = clamp(newColumn.width || GRID_STRING_COL_DEF.width, newColumn.minWidth || GRID_STRING_COL_DEF.minWidth, newColumn.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n      newColumn.computedWidth = computedWidth;\n    }\n    columnsLookup[columnField] = newColumn;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = _extends({}, existingState, newColumn, {\n      hasBeenResized\n    });\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { buildWarning } from '../../../utils/warning';\nconst sortModelDisableMultiColumnsSortingWarning = buildWarning(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      sortModelDisableMultiColumnsSortingWarning();\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [id, applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };", "export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\nexport function randomNumberBetween(seed, min, max) {\n  const random = mulberry32(seed);\n  return () => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLogicOperator } from '../../../models';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { buildWarning } from '../../../utils/warning';\nimport { getPublicApiRef } from '../../../utils/getPublicApiRef';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from '../columns';\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nconst filterModelDisableMultiColumnsFilteringWarning = buildWarning(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nconst filterModelMissingItemIdWarning = buildWarning('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\nconst filterModelMissingItemOperatorWarning = buildWarning('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    filterModelDisableMultiColumnsFilteringWarning();\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (hasItemsWithoutIds) {\n    filterModelMissingItemIdWarning();\n  }\n  if (hasItemWithoutOperator) {\n    filterModelMissingItemOperatorWarning();\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-restricted-syntax, no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    /* eslint-enable no-restricted-syntax, no-labels */\n\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};", "var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };", "/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };", "/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };", "/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };", "export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */", "import { GridLogicOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */", "export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}", "import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { removeDiacritics } from '../hooks/features/filter/gridFilterUtils';\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return value => {\n      return value != null ? filterRegex.test(String(value)) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value === '' || value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value !== '' && value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];", "import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useTheme } from '@mui/material/styles';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const theme = useTheme();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = theme.direction === 'rtl' ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(className, classes.root),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isAutoGeneratedRow } from '../../hooks/features/rows/gridRowsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== '__row_group_by_columns_group__' && isAutoGeneratedRow(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { gridDimensionsSelector } from '../dimensions/gridDimensionsSelectors';\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp\n  });\n};\nexport const isAutoGeneratedRow = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup)\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}", "import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };", "import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = String(filterItem.value) === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      value: isChecked,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { isMultipleRowSelectionEnabled } from '../../hooks/features/rowSelection/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridRowSelectionStateSelector } from '../../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridExpandedSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };", "import { GridSignature } from '../../utils/useGridApiEventHandler';\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}", "import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);", "import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));", "import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowTreeSelector, gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { GRID_ID_AUTOGENERATED, isAutoGeneratedRow } from '../rows/gridRowsUtils';\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutoGeneratedRow(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});", "import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});", "import * as React from 'react';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}", "import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}", "import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};", "import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};", "import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}", "import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};", "import { GridSignature } from '../../utils';\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};", "import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nimport { getPageCount } from './gridPaginationUtils';\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };", "import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});", "import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators } from './gridSingleSelectOperators';\nimport { getValueOptions, isSingleSelectColDef } from '../components/panel/filterPanel/filterPanelUtils';\nimport { isObject } from '../utils/utils';\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from '../../models/params/gridEditCellParams';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: isEscapeKey(event.key) ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));", "/**\n * @deprecated there is no meaninfuly logic abstracted, use event.key directly.\n */\nexport const isEscapeKey = key => key === 'Escape';\n\n/**\n * @deprecated there is no meaninfuly logic abstracted, use event.key directly.\n */\nexport const isTabKey = key => key === 'Tab';\n\n// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  if ((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'v' && !event.shiftKey && !event.altKey) {\n    return true;\n  }\n  return false;\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: getOptionLabel(option)\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };", "import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\nimport { isObject } from '../utils/utils';\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];", "import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};", "import { createSelector } from '../../../utils/createSelector';\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);", "import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);", "import * as React from 'react';\nimport { fastObjectShallowCompare } from './fastObjectShallowCompare';\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useTheme } from '@mui/material/styles';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { useResizeObserver } from '../../utils/useResizeObserver';\nimport { useRunOnce } from '../../utils/useRunOnce';\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from '../columns/gridColumnsSelector';\nimport { gridDimensionsSelector } from '../dimensions/gridDimensionsSelectors';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridVisibleRows, getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils';\nimport { clamp, range } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../rowSelection/gridRowSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils';\nimport { getMinimalContentHeight } from '../rows/gridRowsUtils';\nimport { gridRenderContextSelector, gridVirtualizationEnabledSelector, gridVirtualizationColumnEnabledSelector } from './gridVirtualizationSelectors';\nimport { EMPTY_RENDER_CONTEXT } from './useGridVirtualization';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (mode, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(mode, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nconst isJSDOM = typeof window !== 'undefined' ? /jsdom/.test(window.navigator.userAgent) : false;\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const enabled = useGridSelector(apiRef, gridVirtualizationEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const theme = useTheme();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = React.useRef(null);\n  const scrollbarHorizontalRef = React.useRef(null);\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(theme.direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = () => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(theme.direction, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  };\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (theme.direction === 'ltr') {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (theme.direction === 'rtl') {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = rowIndexInPage === rowModels.length - 1;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, theme.direction, pinnedColumns.left.length);\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n      rows.push( /*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible\n      }, rowProps), id));\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (isLastVisible) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth >= outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight]);\n  const contentSize = React.useMemo(() => {\n    // In cases where the columns exceed the available width,\n    // the horizontal scrollbar should be shown even when there're no rows.\n    // Keeping 1px as minimum height ensures that the scrollbar will visible if necessary.\n    const height = Math.max(contentHeight, 1);\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height\n    };\n    if (rootProps.autoHeight) {\n      if (currentPage.rows.length === 0) {\n        size.height = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n      } else {\n        size.height = contentHeight;\n      }\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    if (enabled) {\n      // TODO a scroll reset should not be necessary\n      scrollerRef.current.scrollLeft = 0;\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabled, gridRootRef, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      tabIndex: -1,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation'\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabled, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabled,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  let renderContext;\n  if (!inputs.enabled) {\n    renderContext = {\n      firstRowIndex: 0,\n      lastRowIndex: inputs.rows.length,\n      firstColumnIndex: 0,\n      lastColumnIndex: inputs.visibleColumns.length\n    };\n  } else {\n    const {\n      top,\n      left\n    } = scrollPosition;\n    const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    const firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    if (inputs.enabledForColumns) {\n      let hasRowWithAutoHeight = false;\n      const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n        firstIndex: firstRowIndex,\n        lastIndex: lastRowIndex,\n        minFirstIndex: 0,\n        maxLastIndex: inputs.rows.length,\n        bufferBefore: scrollCache.buffer.rowBefore,\n        bufferAfter: scrollCache.buffer.rowAfter,\n        positions: inputs.rowsMeta.positions,\n        lastSize: inputs.lastRowHeight\n      });\n      for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n        const row = inputs.rows[i];\n        hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n      }\n      if (!hasRowWithAutoHeight) {\n        firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n          atStart: true,\n          lastPosition: inputs.columnsTotalWidth\n        });\n        lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n      }\n    }\n    renderContext = {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, direction, pinnedLeftLength) {\n  const factor = direction === 'ltr' ? 1 : -1;\n  const left = factor * (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(mode, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (mode === 'rtl') {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}", "import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the data grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}", "import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridExpandedSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};", "export const gridRowsMetaSelector = state => state.rowsMeta;", "import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const virtualization = {\n    enabled: !props.disableVirtualization,\n    enabledForColumns: true,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport clsx from 'clsx';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridExpandedRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridVisibleRows } from '../../hooks/utils/useGridVisibleRows';\nimport { getMinimalContentHeight } from '../../hooks/features/rows/gridRowsUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType\n}) => ({\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n}));\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.headersTotalHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, {\n    className: clsx(classes.root),\n    overlayType: props.overlayType,\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  overlayType: PropTypes.string.isRequired\n} : void 0;\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n  let overlayType = '';\n  if (showNoRowsOverlay) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noRowsOverlay, _extends({}, rootProps.slotProps?.noRowsOverlay));\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noResultsOverlay, _extends({}, rootProps.slotProps?.noResultsOverlay));\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.loadingOverlay, _extends({}, rootProps.slotProps?.loadingOverlay));\n    overlayType = 'loadingOverlay';\n  }\n  if (overlay === null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    overlayType: overlayType,\n    children: overlay\n  });\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '../utils/fastMemo';\nimport { useGridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterActiveItemsLookupSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from '../hooks/features/focus/gridFocusStateSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridColumnMenuSelector } from '../hooks/features/columnMenu/columnMenuSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = React.useRef(null);\n  apiRef.current.register('private', {\n    columnHeadersContainerRef: columnsContainerRef\n  });\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };", "export const gridColumnMenuSelector = state => state.columnMenu;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridAriaAttributes } from '../../hooks/utils/useGridAriaAttributes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const ariaAttributes = useGridAriaAttributes();\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: props.children\n  }));\n});", "import { gridVisibleColumnDefinitionsSelector } from '../features/columns/gridColumnsSelector';\nimport { useGridSelector } from './useGridSelector';\nimport { useGridRootProps } from './useGridRootProps';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../features/columnGrouping/gridColumnGroupsSelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../features/rows/gridRowsSelector';\nimport { useGridPrivateApiContext } from './useGridPrivateApiContext';\nimport { isMultipleRowSelectionEnabled } from '../features/rowSelection/utils';\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  let role = 'grid';\n  if (rootProps.treeData) {\n    role = 'treegrid';\n  }\n  return {\n    role,\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0,\n  '&::after': {\n    content: '\" \"',\n    position: 'absolute',\n    zIndex: 5,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 1,\n    width: 'var(--DataGrid-rowWidth)',\n    backgroundColor: 'var(--DataGrid-rowBorderColor)'\n  }\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };", "import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { gridClasses } from '../../constants';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--DataGrid-rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--DataGrid-rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--DataGrid-rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller() {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollbarHeight = hasScrollX ? scrollbarSize : 0;\n  const expandedHeight = viewportOuterSize.height - minimumSize.height - scrollbarHeight;\n  const height = Math.max(scrollbarHeight, expandedHeight);\n  if (height === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridRowsMetaSelector } from '../../hooks/features/rows';\nimport { gridRenderContextSelector } from '../../hooks/features/virtualization';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };", "import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from '../../hooks/utils/useOnMount';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { gridDimensionsSelector, useGridSelector } from '../../hooks';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  '& > div': {\n    display: 'inline-block'\n  },\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst Content = styled('div')({\n  display: 'inline-block'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsx(Content, {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };", "import { createSelector } from '../../../utils/createSelector';\nexport const gridColumnResizeSelector = state => state.columnResize;\nexport const gridResizingColumnFieldSelector = createSelector(gridColumnResizeSelector, columnResize => columnResize.resizingColumnField);", "export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */", "export const gridPreferencePanelStateSelector = state => state.preferencePanel;", "var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { doesSupportPreventScroll } from '../../utils/doesSupportPreventScroll';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridSelector, objectShallowCompare } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { MissingRowIdError } from '../../hooks/features/rows/useGridParamsApi';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { GridPinnedColumnPosition } from '../../hooks/features/columns/gridColumnsInterfaces';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParamsWithAPI;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  const valueToRender = cellParamsWithAPI.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    if (pinnedPosition === PinnedPosition.LEFT) {\n      cellStyle.left = pinnedOffset;\n    }\n    if (pinnedPosition === PinnedPosition.RIGHT) {\n      cellStyle.right = pinnedOffset;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParamsWithAPI.formattedValue;\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(className, classNames, classes.root),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };", "// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}", "import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}", "import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nfunction escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${field}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  const fieldsString = colCellEl.getAttribute('data-fields');\n  return fieldsString?.startsWith('|-') ? fieldsString.slice(2, -2).split('-|-') : [];\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${field}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: 'left',\n    filterFn: index => index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: 'right',\n    filterFn: index => index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: 'left',\n    colIndex,\n    filterFn: index => index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: 'right',\n    colIndex,\n    filterFn: index => index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${field}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${field}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested data grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}", "import { GridPinnedColumnPosition } from '../hooks/features/columns/gridColumnsInterfaces';\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"label\", \"icon\", \"showInMenu\", \"onClick\"],\n  _excluded2 = [\"label\", \"icon\", \"showInMenu\", \"onClick\", \"closeMenuOnClick\", \"closeMenu\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridActionsCellItem = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  if (!props.showInMenu) {\n    const {\n        label,\n        icon,\n        onClick\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const handleClick = event => {\n      onClick?.(event);\n    };\n    return /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: ref,\n      size: \"small\",\n      role: \"menuitem\",\n      \"aria-label\": label\n    }, other, {\n      onClick: handleClick\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/React.cloneElement(icon, {\n        fontSize: 'small'\n      })\n    }));\n  }\n  const {\n      label,\n      icon,\n      onClick,\n      closeMenuOnClick = true,\n      closeMenu\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const handleClick = event => {\n    onClick?.(event);\n    if (closeMenuOnClick) {\n      closeMenu?.();\n    }\n  };\n  return /*#__PURE__*/_jsxs(MenuItem, _extends({\n    ref: ref\n  }, other, {\n    onClick: handleClick,\n    children: [icon && /*#__PURE__*/_jsx(ListItemIcon, {\n      children: icon\n    }), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCellItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * from https://mui.com/material-ui/api/button-base/#ButtonBase-prop-component\n   */\n  component: PropTypes.elementType,\n  icon: PropTypes.element,\n  label: PropTypes.string.isRequired,\n  showInMenu: PropTypes.bool\n} : void 0;\nexport { GridActionsCellItem };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"align\", \"width\", \"height\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { randomNumberBetween } from '../../utils/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst randomWidth = randomNumberBetween(10000, 20, 80);\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${capitalize(align)}`, 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridSkeletonCell(props) {\n  const {\n      align,\n      width,\n      height\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align\n  };\n  const classes = useUtilityClasses(ownerState);\n  const contentWidth = Math.round(randomWidth());\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: classes.root,\n    style: {\n      height,\n      maxWidth: width,\n      minWidth: width\n    }\n  }, other, {\n    children: /*#__PURE__*/_jsx(Skeleton, {\n      width: `${contentWidth}%`,\n      height: 25\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string.isRequired,\n  field: PropTypes.string.isRequired,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { GridRootStyles } from './GridRootStyles';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensitySelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0\n});\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = _extends({}, rootProps, {\n    density\n  });\n  const classes = useUtilityClasses(ownerState);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from '../../constants/gridClasses';\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeadersStyles = {\n  [`.${c.columnSeparator}, .${c['columnSeparator--resizing']}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  }\n};\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / calc(\n                ${t.vars.palette.action.selectedOpacity} + \n                ${t.vars.palette.action.hoverOpacity}\n              ))` : alpha(t.palette.primary.main, t.palette.action.selectedOpacity + t.palette.action.hoverOpacity);\n  const pinnedHoverBackground = t.vars ? hoverColor : blend(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedSelectedBackground = t.vars ? selectedBackground : blend(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedHoverBackground = t.vars ? hoverColor : blend(pinnedSelectedBackground, hoverColor, hoverOpacity);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    // The selector we really want here is `:first-child`, but emotion thinks it knows better than use what we\n    // want and prints a warning to the console if we use it, about :first-child being \"unsafe\" in an SSR context.\n    // https://github.com/emotion-js/emotion/issues/1105\n    // Using `:first-of-type instead` is ironically less \"safe\" because if all our elements aren't `div`, this style\n    // will fail to apply.\n    [`.${c.main} > *:first-of-type`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} 1px`\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      // to anchor the aggregation label\n      position: 'relative'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}, & .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}, & .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      visibility: 'hidden',\n      position: 'absolute',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeaders}:hover`]: columnHeadersStyles,\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeaders}`]: columnHeadersStyles,\n      [`& .${c.columnHeader}`]: columnHeaderStyles\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: (t.vars || t).palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      height: 'var(--height)',\n      minWidth: 'var(--width)',\n      maxWidth: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${(t.vars || t).palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedHoverBackground\n        }\n      },\n      [`&.Mui-selected`]: {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedSelectedBackground\n        },\n        '&:hover': {\n          [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n            backgroundColor: pinnedSelectedHoverBackground\n          }\n        }\n      }\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: 1\n    },\n    [`& .${c['filler--borderTop']}`]: {\n      borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridToolbarContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarContainer',\n  overridesResolver: (_, styles) => styles.toolbarContainer\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  flexWrap: 'wrap',\n  gap: theme.spacing(1),\n  padding: theme.spacing(0.5, 0.5, 0)\n}));\nconst GridToolbarContainer = /*#__PURE__*/React.forwardRef(function GridToolbarContainer(props, ref) {\n  const {\n      className,\n      children\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  if (!children) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarContainerRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridToolbarContainer };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderSortIcon } from './GridColumnHeaderSortIcon';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(GridColumnHeaderSortIcon, {\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    })]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n    direction,\n    index,\n    sortingOrder,\n    disabled\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    }))\n  });\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      columnMenuOpen,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width,\n      minWidth: width,\n      maxWidth: width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": headerComponent == null ? label : undefined\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnVerticalBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridSelector } from '../../hooks';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };", "import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from '../../../hooks/features/columnMenu/useGridColumnMenuSlots';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnMenuColumnsItem } from './menuItems/GridColumnMenuColumnsItem';\nimport { GridColumnMenuFilterItem } from './menuItems/GridColumnMenuFilterItem';\nimport { GridColumnMenuSortItem } from './menuItems/GridColumnMenuSortItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [Divider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems]);\n};\nexport { useGridColumnMenuSlots };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from './GridColumnMenuHideItem';\nimport { GridColumnMenuManageItem } from './GridColumnMenuManageItem';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };", "import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../../hooks/features/columns';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };", "import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from '../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };", "import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };", "import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from '../../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GridColumnsManagement } from '../columnsManagement';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useLazyRef } from '../../hooks/utils/useLazyRef';\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from './utils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };", "export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: false\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelHeader']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelHeader',\n  overridesResolver: (props, styles) => styles.panelHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1)\n}));\nfunction GridPanelHeader(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelHeaderRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelHeader };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { getValueFromValueOptions, getValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: _extends({\n        display: hasLogicOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, logicOperatorInputProps.sx || {}),\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"csvOptions\", \"printOptions\", \"excelOptions\", \"showQuickFilter\", \"quickFilterProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport { GridToolbarContainer } from '../containers/GridToolbarContainer';\nimport { GridToolbarColumnsButton } from './GridToolbarColumnsButton';\nimport { GridToolbarDensitySelector } from './GridToolbarDensitySelector';\nimport { GridToolbarFilterButton } from './GridToolbarFilterButton';\nimport { GridToolbarExport } from './GridToolbarExport';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridToolbarQuickFilter } from './GridToolbarQuickFilter';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbar = /*#__PURE__*/React.forwardRef(function GridToolbar(props, ref) {\n  // TODO v7: think about where export option should be passed.\n  // from slotProps={{ toolbarExport: { ...exportOption } }} seems to be more appropriate\n  const {\n      csvOptions,\n      printOptions,\n      excelOptions,\n      showQuickFilter = false,\n      quickFilterProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  if (rootProps.disableColumnFilter && rootProps.disableColumnSelector && rootProps.disableDensitySelector && !showQuickFilter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(GridToolbarContainer, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridToolbarColumnsButton, {}), /*#__PURE__*/_jsx(GridToolbarFilterButton, {}), /*#__PURE__*/_jsx(GridToolbarDensitySelector, {}), /*#__PURE__*/_jsx(GridToolbarExport, {\n      csvOptions: csvOptions,\n      printOptions: printOptions\n      // TODO: remove the reference to excelOptions in community package\n      ,\n      excelOptions: excelOptions\n    }), /*#__PURE__*/_jsx(Box, {\n      sx: {\n        flex: 1\n      }\n    }), showQuickFilter && /*#__PURE__*/_jsx(GridToolbarQuickFilter, _extends({}, quickFilterProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Props passed to the quick filter component.\n   */\n  quickFilterProps: PropTypes.object,\n  /**\n   * Show the quick filter component.\n   * @default false\n   */\n  showQuickFilter: PropTypes.bool,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridToolbar };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridToolbarColumnsButton = /*#__PURE__*/React.forwardRef(function GridToolbarColumnsButton(props, ref) {\n  const {\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const columnButtonId = useId();\n  const columnPanelId = useId();\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const showColumns = event => {\n    if (preferencePanel.open && preferencePanel.openedPanelValue === GridPreferencePanelsValue.columns) {\n      apiRef.current.hidePreferences();\n    } else {\n      apiRef.current.showPreferences(GridPreferencePanelsValue.columns, columnPanelId, columnButtonId);\n    }\n    buttonProps.onClick?.(event);\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  const isOpen = preferencePanel.open && preferencePanel.panelId === columnPanelId;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('toolbarColumnsLabel'),\n    enterDelay: 1000\n  }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      ref: ref,\n      id: columnButtonId,\n      size: \"small\",\n      \"aria-label\": apiRef.current.getLocaleText('toolbarColumnsLabel'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": isOpen ? columnPanelId : undefined,\n      startIcon: /*#__PURE__*/_jsx(rootProps.slots.columnSelectorIcon, {})\n    }, buttonProps, {\n      onClick: showColumns\n    }, rootProps.slotProps?.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarColumns')\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarColumnsButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarColumnsButton };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { gridDensitySelector } from '../../hooks/features/density/densitySelector';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbarDensitySelector = /*#__PURE__*/React.forwardRef(function GridToolbarDensitySelector(props, ref) {\n  const {\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const densityButtonId = useId();\n  const densityMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const densityOptions = [{\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityCompactIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityCompact'),\n    value: 'compact'\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityStandardIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityStandard'),\n    value: 'standard'\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityComfortableIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityComfortable'),\n    value: 'comfortable'\n  }];\n  const startIcon = React.useMemo(() => {\n    switch (density) {\n      case 'compact':\n        return /*#__PURE__*/_jsx(rootProps.slots.densityCompactIcon, {});\n      case 'comfortable':\n        return /*#__PURE__*/_jsx(rootProps.slots.densityComfortableIcon, {});\n      default:\n        return /*#__PURE__*/_jsx(rootProps.slots.densityStandardIcon, {});\n    }\n  }, [density, rootProps]);\n  const handleDensitySelectorOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    buttonProps.onClick?.(event);\n  };\n  const handleDensitySelectorClose = () => {\n    setOpen(false);\n  };\n  const handleDensityUpdate = newDensity => {\n    apiRef.current.setDensity(newDensity);\n    setOpen(false);\n  };\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      setOpen(false);\n    }\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableDensitySelector) {\n    return null;\n  }\n  const densityElements = densityOptions.map((option, index) => /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: () => handleDensityUpdate(option.value),\n    selected: option.value === density,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: option.icon\n    }), option.label]\n  }, index));\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('toolbarDensityLabel'),\n      enterDelay: 1000\n    }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        ref: handleRef,\n        size: \"small\",\n        startIcon: startIcon,\n        \"aria-label\": apiRef.current.getLocaleText('toolbarDensityLabel'),\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? densityMenuId : undefined,\n        id: densityButtonId\n      }, buttonProps, {\n        onClick: handleDensitySelectorOpen\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('toolbarDensity')\n      }))\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleDensitySelectorClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: densityMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": densityButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: densityElements\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarDensitySelector.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarDensitySelector };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { gridColumnLookupSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridFilterActiveItemsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarFilterList']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridToolbarFilterListRoot = styled('ul', {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarFilterList',\n  overridesResolver: (_props, styles) => styles.toolbarFilterList\n})(({\n  theme\n}) => ({\n  margin: theme.spacing(1, 1, 0.5),\n  padding: theme.spacing(0, 1)\n}));\nconst GridToolbarFilterButton = /*#__PURE__*/React.forwardRef(function GridToolbarFilterButton(props, ref) {\n  const {\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const activeFilters = useGridSelector(apiRef, gridFilterActiveItemsSelector);\n  const lookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const classes = useUtilityClasses(rootProps);\n  const filterButtonId = useId();\n  const filterPanelId = useId();\n  const tooltipContentNode = React.useMemo(() => {\n    if (preferencePanel.open) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipHide');\n    }\n    if (activeFilters.length === 0) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipShow');\n    }\n    const getOperatorLabel = item => lookup[item.field].filterOperators.find(operator => operator.value === item.operator).label || apiRef.current.getLocaleText(`filterOperator${capitalize(item.operator)}`).toString();\n    const getFilterItemValue = item => {\n      const {\n        getValueAsString\n      } = lookup[item.field].filterOperators.find(operator => operator.value === item.operator);\n      return getValueAsString ? getValueAsString(item.value) : item.value;\n    };\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [apiRef.current.getLocaleText('toolbarFiltersTooltipActive')(activeFilters.length), /*#__PURE__*/_jsx(GridToolbarFilterListRoot, {\n        className: classes.root,\n        ownerState: rootProps,\n        children: activeFilters.map((item, index) => _extends({}, lookup[item.field] && /*#__PURE__*/_jsx(\"li\", {\n          children: `${lookup[item.field].headerName || item.field}\n                  ${getOperatorLabel(item)}\n                  ${\n          // implicit check for null and undefined\n          item.value != null ? getFilterItemValue(item) : ''}`\n        }, index)))\n      })]\n    });\n  }, [apiRef, rootProps, preferencePanel.open, activeFilters, lookup, classes]);\n  const toggleFilter = event => {\n    const {\n      open,\n      openedPanelValue\n    } = preferencePanel;\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hidePreferences();\n    } else {\n      apiRef.current.showPreferences(GridPreferencePanelsValue.filters, filterPanelId, filterButtonId);\n    }\n    buttonProps.onClick?.(event);\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableColumnFilter) {\n    return null;\n  }\n  const isOpen = preferencePanel.open && preferencePanel.panelId === filterPanelId;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: tooltipContentNode,\n    enterDelay: 1000\n  }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      ref: ref,\n      id: filterButtonId,\n      size: \"small\",\n      \"aria-label\": apiRef.current.getLocaleText('toolbarFiltersLabel'),\n      \"aria-controls\": isOpen ? filterPanelId : undefined,\n      \"aria-expanded\": isOpen,\n      \"aria-haspopup\": true,\n      startIcon: /*#__PURE__*/_jsx(Badge, {\n        badgeContent: activeFilters.length,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsx(rootProps.slots.openFilterButtonIcon, {})\n      })\n    }, buttonProps, {\n      onClick: toggleFilter\n    }, rootProps.slotProps?.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarFilters')\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarFilterButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarFilterButton };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nexport function GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  const {\n    children,\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const exportButtonId = useId();\n  const exportMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const handleMenuOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    buttonProps.onClick?.(event);\n  };\n  const handleMenuClose = () => setOpen(false);\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n  if (children == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('toolbarExportLabel'),\n      enterDelay: 1000\n    }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        ref: handleRef,\n        size: \"small\",\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.exportIcon, {}),\n        \"aria-expanded\": open,\n        \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n        \"aria-haspopup\": \"menu\",\n        \"aria-controls\": open ? exportMenuId : undefined,\n        id: exportButtonId\n      }, buttonProps, {\n        onClick: handleMenuOpen\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('toolbarExport')\n      }))\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleMenuClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: exportMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": exportButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExportContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExportContainer };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"quickFilterParser\", \"quickFilterFormatter\", \"debounceMs\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from '../../constants';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridQuickFilterValuesSelector } from '../../hooks/features/filter';\nimport { isDeepEqual } from '../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarQuickFilter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridToolbarQuickFilterRoot = styled(TextField, {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarQuickFilter',\n  overridesResolver: (props, styles) => styles.toolbarQuickFilter\n})(({\n  theme\n}) => ({\n  width: 'auto',\n  paddingBottom: theme.spacing(0.5),\n  '& input': {\n    marginLeft: theme.spacing(0.5)\n  },\n  '& .MuiInput-underline:before': {\n    borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n  },\n  [`& input[type=search]::-ms-clear,\n& input[type=search]::-ms-reveal`]: {\n    /* clears the 'X' icon from IE */\n    display: 'none',\n    width: 0,\n    height: 0\n  },\n  [`& input[type=\"search\"]::-webkit-search-decoration,\n  & input[type=\"search\"]::-webkit-search-cancel-button,\n  & input[type=\"search\"]::-webkit-search-results-button,\n  & input[type=\"search\"]::-webkit-search-results-decoration`]: {\n    /* clears the 'X' icon from Chrome */\n    display: 'none'\n  }\n}));\nconst defaultSearchValueParser = searchText => searchText.split(' ').filter(word => word !== '');\nconst defaultSearchValueFormatter = values => values.join(' ');\nfunction GridToolbarQuickFilter(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const quickFilterValues = useGridSelector(apiRef, gridQuickFilterValuesSelector);\n  const {\n      quickFilterParser = defaultSearchValueParser,\n      quickFilterFormatter = defaultSearchValueFormatter,\n      debounceMs = rootProps.filterDebounceMs,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [searchValue, setSearchValue] = React.useState(() => quickFilterFormatter(quickFilterValues ?? []));\n  const prevQuickFilterValuesRef = React.useRef(quickFilterValues);\n  React.useEffect(() => {\n    if (!isDeepEqual(prevQuickFilterValuesRef.current, quickFilterValues)) {\n      // The model of quick filter value has been updated\n      prevQuickFilterValuesRef.current = quickFilterValues;\n\n      // Update the input value if needed to match the new model\n      setSearchValue(prevSearchValue => isDeepEqual(quickFilterParser(prevSearchValue), quickFilterValues) ? prevSearchValue : quickFilterFormatter(quickFilterValues ?? []));\n    }\n  }, [quickFilterValues, quickFilterFormatter, quickFilterParser]);\n  const updateSearchValue = React.useCallback(newSearchValue => {\n    const newQuickFilterValues = quickFilterParser(newSearchValue);\n    prevQuickFilterValuesRef.current = newQuickFilterValues;\n    apiRef.current.setQuickFilterValues(newQuickFilterValues);\n  }, [apiRef, quickFilterParser]);\n  const debouncedUpdateSearchValue = React.useMemo(() => debounce(updateSearchValue, debounceMs), [updateSearchValue, debounceMs]);\n  const handleSearchValueChange = React.useCallback(event => {\n    const newSearchValue = event.target.value;\n    setSearchValue(newSearchValue);\n    debouncedUpdateSearchValue(newSearchValue);\n  }, [debouncedUpdateSearchValue]);\n  const handleSearchReset = React.useCallback(() => {\n    setSearchValue('');\n    updateSearchValue('');\n  }, [updateSearchValue]);\n  return /*#__PURE__*/_jsx(GridToolbarQuickFilterRoot, _extends({\n    as: rootProps.slots.baseTextField,\n    ownerState: rootProps,\n    variant: \"standard\",\n    value: searchValue,\n    onChange: handleSearchValueChange,\n    className: clsx(className, classes.root),\n    placeholder: apiRef.current.getLocaleText('toolbarQuickFilterPlaceholder'),\n    \"aria-label\": apiRef.current.getLocaleText('toolbarQuickFilterLabel'),\n    type: \"search\"\n  }, other, {\n    InputProps: _extends({\n      startAdornment: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {\n        fontSize: \"small\"\n      }),\n      endAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('toolbarQuickFilterDeleteIconLabel'),\n        size: \"small\",\n        sx: {\n          visibility: searchValue ? 'visible' : 'hidden'\n        },\n        onClick: handleSearchReset\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterClearIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    }, other.InputProps)\n  }, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarQuickFilter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The debounce time in milliseconds.\n   * @default 150\n   */\n  debounceMs: PropTypes.number,\n  /**\n   * Function responsible for formatting values of quick filter in a string when the model is modified\n   * @param {any[]} values The new values passed to the quick filter model\n   * @returns {string} The string to display in the text field\n   * @default (values: string[]) => values.join(' ')\n   */\n  quickFilterFormatter: PropTypes.func,\n  /**\n   * Function responsible for parsing text input in an array of independent values for quick filtering.\n   * @param {string} input The value entered by the user\n   * @returns {any[]} The array of value on which quick filter is applied\n   * @default (searchText: string) => searchText\n   *   .split(' ')\n   *   .filter((word) => word !== '')\n   */\n  quickFilterParser: PropTypes.func\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n * - [Filtering - quick filter](https://mui.com/x/react-data-grid/filtering/quick-filter/)\n *\n * API:\n * - [GridToolbarQuickFilter API](https://mui.com/x/api/data-grid/grid-toolbar-quick-filter/)\n */\nexport { GridToolbarQuickFilter };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { GridPreferencesPanel } from './panel/GridPreferencesPanel';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    ref: ref,\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, props, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: /*#__PURE__*/_jsx(CircularProgress, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridLoadingOverlay };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnPositionsSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector, objectShallowCompare } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName, isEventTargetInPortal } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowMaximumTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridEditRowsStateSelector } from '../hooks/features/editing/gridEditingSelectors';\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from './cell/GridCell';\nimport { GridScrollbarFillerCell as ScrollbarFiller } from './GridScrollbarFillerCell';\nimport { getPinnedCellOffset } from '../internals/utils/getPinnedCellOffset';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isFirstVisible,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const ownerState = {\n    selected,\n    isFirstVisible,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight);\n    }\n  }, [apiRef, rowHeight, rowId]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if `paginationModel.pageSize=5` and `paginationModel.page=1`. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // pinned rows are not part of the visible rows\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const sizes = useGridSelector(apiRef, () => _extends({}, apiRef.current.unstable_getRowInternalSizes(rowId)), objectShallowCompare);\n  let minHeight = rowHeight;\n  if (minHeight === 'auto' && sizes) {\n    const numberOfBaseSizes = 1;\n    const maximumSize = sizes.baseCenter ?? 0;\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (sizes?.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = sizes.spacingTop;\n    }\n    if (sizes?.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += sizes.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, minHeight, sizes, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align ?? 'left'\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };", "// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';", "// TODO v6: rename to gridEditingStateSelector\nexport const gridEditRowsStateSelector = state => state.editRows;", "import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from '../constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };", "import { GridPinnedColumnPosition } from '../../hooks/features/columns';\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};", "import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n      value: privateApiRef,\n      children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n        value: apiRef,\n        children: children\n      })\n    })\n  });\n}", "'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLicenseVerifier, Watermark } from '@mui/x-license';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot, GridContextProvider } from '@mui/x-data-grid-pro';\nimport { propValidatorsDataGrid, propValidatorsDataGridPro, validateProps } from '@mui/x-data-grid-pro/internals';\nimport { useDataGridPremiumComponent } from './useDataGridPremiumComponent';\nimport { useDataGridPremiumProps } from './useDataGridPremiumProps';\nimport { getReleaseInfo } from '../utils/releaseInfo';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst releaseInfo = getReleaseInfo();\nlet dataGridPremiumPropValidators;\nif (process.env.NODE_ENV !== 'production') {\n  dataGridPremiumPropValidators = [...propValidatorsDataGrid, ...propValidatorsDataGridPro];\n}\nconst DataGridPremiumRaw = /*#__PURE__*/React.forwardRef(function DataGridPremium(inProps, ref) {\n  const props = useDataGridPremiumProps(inProps);\n  const privateApiRef = useDataGridPremiumComponent(props.apiRef, props);\n  useLicenseVerifier('x-data-grid-premium', releaseInfo);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, dataGridPremiumPropValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {\n        children: /*#__PURE__*/_jsx(Watermark, {\n          packageName: \"x-data-grid-premium\",\n          releaseInfo: releaseInfo\n        })\n      }), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGridPremium](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGridPremium API](https://mui.com/x/api/data-grid/data-grid-premium/)\n */\nexport const DataGridPremium = /*#__PURE__*/React.memo(DataGridPremiumRaw);\nprocess.env.NODE_ENV !== \"production\" ? DataGridPremiumRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Aggregation functions available on the grid.\n   * @default GRID_AGGREGATION_FUNCTIONS\n   */\n  aggregationFunctions: PropTypes.object,\n  /**\n   * Set the aggregation model of the grid.\n   */\n  aggregationModel: PropTypes.object,\n  /**\n   * Rows used to generate the aggregated value.\n   * If `filtered`, the aggregated values are generated using only the rows currently passing the filtering process.\n   * If `all`, the aggregated values are generated using all the rows.\n   * @default \"filtered\"\n   */\n  aggregationRowsScope: PropTypes.oneOf(['all', 'filtered']),\n  /**\n   * The ref object that allows grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follow the number of rows in the Data Grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the cell selection mode is enabled.\n   * @default false\n   */\n  cellSelection: PropTypes.bool,\n  /**\n   * Set the cell selection model of the grid.\n   */\n  cellSelectionModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * If `true`, the \"Select All\" header checkbox selects only the rows on the current page. To be used in combination with `checkboxSelection`.\n   * It only works if the pagination is enabled.\n   * @default false\n   */\n  checkboxSelectionVisibleOnly: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * If above 0, the row children will be expanded up to this depth.\n   * If equal to -1, all the row children will be expanded.\n   * @default 0\n   */\n  defaultGroupingExpansionDepth: PropTypes.number,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * The row ids to show the detail panel.\n   */\n  detailPanelExpandedRowIds: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired),\n  /**\n   * If `true`, aggregation is disabled.\n   * @default false\n   */\n  disableAggregation: PropTypes.bool,\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, the filtering will only be applied to the top level rows when grouping rows with the `treeData` prop.\n   * @default false\n   */\n  disableChildrenFiltering: PropTypes.bool,\n  /**\n   * If `true`, the sorting will only be applied to the top level rows when grouping rows with the `treeData` prop.\n   * @default false\n   */\n  disableChildrenSorting: PropTypes.bool,\n  /**\n   * If `true`, the clipboard paste is disabled.\n   * @default false\n   */\n  disableClipboardPaste: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, the column pinning is disabled.\n   * @default false\n   */\n  disableColumnPinning: PropTypes.bool,\n  /**\n   * If `true`, reordering columns is disabled.\n   * @default false\n   */\n  disableColumnReorder: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, filtering with multiple columns is disabled.\n   * @default false\n   */\n  disableMultipleColumnsFiltering: PropTypes.bool,\n  /**\n   * If `true`, the sorting with multiple columns is disabled.\n   * @default false\n   */\n  disableMultipleColumnsSorting: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the row grouping is disabled.\n   * @default false\n   */\n  disableRowGrouping: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, then the feature is fully disabled, and neither property nor method calls will have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Determines the position of an aggregated value.\n   * @param {GridGroupNode} groupNode The current group.\n   * @returns {GridAggregationPosition | null} Position of the aggregated value (if `null`, the group isn't aggregated).\n   * @default (groupNode) => groupNode == null ? 'footer' : 'inline'\n   */\n  getAggregationPosition: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the height of the row detail panel.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {number | string} The height in pixels or \"auto\" to use the content height.\n   * @default \"() => 500\"\n   */\n  getDetailPanelHeight: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * Determines the path of a row in the tree data.\n   * For instance, a row with the path [\"A\", \"B\"] is the child of the row with the path [\"A\"].\n   * Note that all paths must contain at least one element.\n   * @template R\n   * @param {R} row The row from which we want the path.\n   * @returns {string[]} The path to the row.\n   */\n  getTreeDataPath: PropTypes.func,\n  /**\n   * The grouping column used by the tree data.\n   */\n  groupingColDef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Override the height of the header filters.\n   */\n  headerFilterHeight: PropTypes.number,\n  /**\n   * If `true`, enables the data grid filtering on header feature.\n   * @default false\n   */\n  headerFilters: PropTypes.bool,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the row count in the footer is hidden.\n   * It has no effect if the pagination is enabled.\n   * @default false\n   */\n  hideFooterRowCount: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * The initial state of the DataGridPremium.\n   * The data in it is set in the state on initialization but isn't controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a group should be expanded after its creation.\n   * This prop takes priority over the `defaultGroupingExpansionDepth` prop.\n   * @param {GridGroupNode} node The node of the group to test.\n   * @returns {boolean} A boolean indicating if the group is expanded.\n   */\n  isGroupExpandedByDefault: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, moving the mouse pointer outside the grid before releasing the mouse button\n   * in a column re-order action will not cause the column to jump back to its original position.\n   * @default false\n   */\n  keepColumnPositionIfDraggedOutside: PropTypes.bool,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when the row grouping model changes.\n   * @param {GridAggregationModel} model The aggregated columns.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onAggregationModelChange: PropTypes.func,\n  /**\n   * Callback fired before the clipboard paste operation starts.\n   * Use it to confirm or cancel the paste operation.\n   * @param {object} params Params passed to the callback.\n   * @param {string[][]} params.data The raw pasted data split by rows and cells.\n   * @returns {Promise<any>} A promise that resolves to confirm the paste operation, and rejects to cancel it.\n   */\n  onBeforeClipboardPasteStart: PropTypes.func,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple cells changes.\n   * @param {GridCellSelectionModel} cellSelectionModel Object in the shape of [[GridCellSelectionModel]] containing the selected cells.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellSelectionModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when the clipboard paste operation ends.\n   */\n  onClipboardPasteEnd: PropTypes.func,\n  /**\n   * Callback fired when the clipboard paste operation starts.\n   */\n  onClipboardPasteStart: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the detail panel of a row is opened or closed.\n   * @param {GridRowId[]} ids The ids of the rows which have the detail panel open.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onDetailPanelExpandedRowIdsChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Excel export changes.\n   * @param {string} inProgress Indicates if the task is in progress.\n   */\n  onExcelExportStateChange: PropTypes.func,\n  /**\n   * Callback fired when rowCount is set and the next batch of virtualized rows is rendered.\n   * @param {GridFetchRowsParams} params With all properties from [[GridFetchRowsParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFetchRows: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the pinned columns have changed.\n   * @param {GridPinnedColumnFields} pinnedColumns The changed pinned columns.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPinnedColumnsChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the row grouping model changes.\n   * @param {GridRowGroupingModel} model Columns used as grouping criteria.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowGroupingModelChange: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when a row is being reordered.\n   * @param {GridRowOrderChangeParams} params With all properties from [[GridRowOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowOrderChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when scrolling to the bottom of the grid viewport.\n   * @param {GridRowScrollEndParams} params With all properties from [[GridRowScrollEndParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowsScrollEnd: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * If `true`, pagination is enabled.\n   * @default false\n   */\n  pagination: PropTypes.bool,\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * The column fields to display pinned to left or right.\n   */\n  pinnedColumns: PropTypes.object,\n  /**\n   * Rows data to pin on top or bottom.\n   */\n  pinnedRows: PropTypes.shape({\n    bottom: PropTypes.arrayOf(PropTypes.object),\n    top: PropTypes.arrayOf(PropTypes.object)\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * If `single`, all the columns that are grouped are represented in the same grid column.\n   * If `multiple`, each column that is grouped is represented in its own grid column.\n   * @default 'single'\n   */\n  rowGroupingColumnMode: PropTypes.oneOf(['multiple', 'single']),\n  /**\n   * Set the row grouping model of the grid.\n   */\n  rowGroupingModel: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * If `true`, the reordering of rows is enabled.\n   * @default false\n   */\n  rowReordering: PropTypes.bool,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Loading rows can be processed on the server or client-side.\n   * Set it to 'client' if you would like enable infnite loading.\n   * Set it to 'server' if you would like to enable lazy loading.\n   * * @default \"client\"\n   */\n  rowsLoadingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * Set the area in `px` at the bottom of the grid viewport where onRowsScrollEnd is called.\n   * @default 80\n   */\n  scrollEndThreshold: PropTypes.number,\n  /**\n   * If `true`, the vertical borders of the cells are displayed.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The function is used to split the pasted text into rows and cells.\n   * @param {string} text The text pasted from the clipboard.\n   * @returns {string[][] | null} A 2D array of strings. The first dimension is the rows, the second dimension is the columns.\n   * @default (pastedText) => { const text = pastedText.replace(/\\r?\\n$/, ''); return text.split(/\\r\\n|\\n|\\r/).map((row) => row.split('\\t')); }\n   */\n  splitClipboardPastedText: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If positive, the Data Grid will throttle updates coming from `apiRef.current.updateRows` and `apiRef.current.setRows`.\n   * It can be useful if you have a high update rate but do not want to do heavy work like filtering / sorting or rendering on each  individual update.\n   * @default 0\n   */\n  throttleRowsMs: PropTypes.number,\n  /**\n   * If `true`, the rows will be gathered in a tree structure according to the `getTreeDataPath` prop.\n   * @default false\n   */\n  treeData: PropTypes.bool\n} : void 0;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnLookupSelector, useGridApiEventHandler, useGridApiMethod } from '@mui/x-data-grid-pro';\nimport { gridAggregationModelSelector } from './gridAggregationSelectors';\nimport { getAggregationRules, mergeStateWithAggregationModel, areAggregationRulesEqual } from './gridAggregationUtils';\nimport { createAggregationLookup } from './createAggregationLookup';\nexport const aggregationStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.aggregation = {\n    rulesOnLastColumnHydration: {},\n    rulesOnLastRowHydration: {}\n  };\n  return _extends({}, state, {\n    aggregation: {\n      model: props.aggregationModel ?? props.initialState?.aggregation?.model ?? {}\n    }\n  });\n};\nexport const useGridAggregation = (apiRef, props) => {\n  apiRef.current.registerControlState({\n    stateId: 'aggregation',\n    propModel: props.aggregationModel,\n    propOnChange: props.onAggregationModelChange,\n    stateSelector: gridAggregationModelSelector,\n    changeEvent: 'aggregationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setAggregationModel = React.useCallback(model => {\n    const currentModel = gridAggregationModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(mergeStateWithAggregationModel(model));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const applyAggregation = React.useCallback(() => {\n    const aggregationLookup = createAggregationLookup({\n      apiRef,\n      getAggregationPosition: props.getAggregationPosition,\n      aggregationFunctions: props.aggregationFunctions,\n      aggregationRowsScope: props.aggregationRowsScope\n    });\n    apiRef.current.setState(state => _extends({}, state, {\n      aggregation: _extends({}, state.aggregation, {\n        lookup: aggregationLookup\n      })\n    }));\n  }, [apiRef, props.getAggregationPosition, props.aggregationFunctions, props.aggregationRowsScope]);\n  const aggregationApi = {\n    setAggregationModel\n  };\n  useGridApiMethod(apiRef, aggregationApi, 'public');\n\n  /**\n   * EVENTS\n   */\n  const checkAggregationRulesDiff = React.useCallback(() => {\n    const {\n      rulesOnLastRowHydration,\n      rulesOnLastColumnHydration\n    } = apiRef.current.caches.aggregation;\n    const aggregationRules = props.disableAggregation ? {} : getAggregationRules({\n      columnsLookup: gridColumnLookupSelector(apiRef),\n      aggregationModel: gridAggregationModelSelector(apiRef),\n      aggregationFunctions: props.aggregationFunctions\n    });\n\n    // Re-apply the row hydration to add / remove the aggregation footers\n    if (!areAggregationRulesEqual(rulesOnLastRowHydration, aggregationRules)) {\n      apiRef.current.requestPipeProcessorsApplication('hydrateRows');\n      applyAggregation();\n    }\n\n    // Re-apply the column hydration to wrap / unwrap the aggregated columns\n    if (!areAggregationRulesEqual(rulesOnLastColumnHydration, aggregationRules)) {\n      apiRef.current.caches.aggregation.rulesOnLastColumnHydration = aggregationRules;\n      apiRef.current.requestPipeProcessorsApplication('hydrateColumns');\n    }\n  }, [apiRef, applyAggregation, props.aggregationFunctions, props.disableAggregation]);\n  useGridApiEventHandler(apiRef, 'aggregationModelChange', checkAggregationRulesDiff);\n  useGridApiEventHandler(apiRef, 'columnsChange', checkAggregationRulesDiff);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', applyAggregation);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.aggregationModel !== undefined) {\n      apiRef.current.setAggregationModel(props.aggregationModel);\n    }\n  }, [apiRef, props.aggregationModel]);\n};", "import { createSelector } from '@mui/x-data-grid-pro/internals';\nexport const gridAggregationStateSelector = state => state.aggregation;\n\n/**\n * Get the aggregation model, containing the aggregation function of each column.\n * If a column is not in the model, it is not aggregated.\n * @category Aggregation\n */\nexport const gridAggregationModelSelector = createSelector(gridAggregationStateSelector, aggregationState => aggregationState.model);\n\n/**\n * Get the aggregation results as a lookup.\n * @category Aggregation\n */\nexport const gridAggregationLookupSelector = createSelector(gridAggregationStateSelector, aggregationState => aggregationState.lookup);", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport { GRID_ID_AUTOGENERATED } from '@mui/x-data-grid/internals';\nimport { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid-pro';\nimport { addPinnedRow, isDeepEqual, insertNodeInTree, removeNodeFromTree } from '@mui/x-data-grid-pro/internals';\nexport const GRID_AGGREGATION_ROOT_FOOTER_ROW_ID = 'auto-generated-group-footer-root';\nexport const getAggregationFooterRowIdFromGroupId = groupId => {\n  if (groupId == null) {\n    return GRID_AGGREGATION_ROOT_FOOTER_ROW_ID;\n  }\n  return `auto-generated-group-footer-${groupId}`;\n};\nexport const canColumnHaveAggregationFunction = ({\n  colDef,\n  aggregationFunctionName,\n  aggregationFunction\n}) => {\n  if (!colDef) {\n    return false;\n  }\n  if (!aggregationFunction) {\n    return false;\n  }\n  if (colDef.availableAggregationFunctions != null) {\n    return colDef.availableAggregationFunctions.includes(aggregationFunctionName);\n  }\n  if (!aggregationFunction.columnTypes) {\n    return true;\n  }\n  return aggregationFunction.columnTypes.includes(colDef.type);\n};\nexport const getAvailableAggregationFunctions = ({\n  aggregationFunctions,\n  colDef\n}) => Object.keys(aggregationFunctions).filter(aggregationFunctionName => canColumnHaveAggregationFunction({\n  colDef,\n  aggregationFunctionName,\n  aggregationFunction: aggregationFunctions[aggregationFunctionName]\n}));\nexport const mergeStateWithAggregationModel = aggregationModel => state => _extends({}, state, {\n  aggregation: _extends({}, state.aggregation, {\n    model: aggregationModel\n  })\n});\nexport const getAggregationRules = ({\n  columnsLookup,\n  aggregationModel,\n  aggregationFunctions\n}) => {\n  const aggregationRules = {};\n  Object.entries(aggregationModel).forEach(([field, columnItem]) => {\n    if (columnsLookup[field] && canColumnHaveAggregationFunction({\n      colDef: columnsLookup[field],\n      aggregationFunctionName: columnItem,\n      aggregationFunction: aggregationFunctions[columnItem]\n    })) {\n      aggregationRules[field] = {\n        aggregationFunctionName: columnItem,\n        aggregationFunction: aggregationFunctions[columnItem]\n      };\n    }\n  });\n  return aggregationRules;\n};\n/**\n * Add a footer for each group that has at least one column with an aggregated value.\n */\nexport const addFooterRows = ({\n  groupingParams,\n  apiRef,\n  getAggregationPosition,\n  hasAggregationRule\n}) => {\n  let newGroupingParams = _extends({}, groupingParams, {\n    tree: _extends({}, groupingParams.tree),\n    treeDepths: _extends({}, groupingParams.treeDepths)\n  });\n  const updateChildGroupFooter = groupNode => {\n    const shouldHaveFooter = hasAggregationRule && getAggregationPosition(groupNode) === 'footer';\n    if (shouldHaveFooter) {\n      const footerId = getAggregationFooterRowIdFromGroupId(groupNode.id);\n      if (groupNode.footerId !== footerId) {\n        if (groupNode.footerId != null) {\n          removeNodeFromTree({\n            node: newGroupingParams.tree[groupNode.footerId],\n            tree: newGroupingParams.tree,\n            treeDepths: newGroupingParams.treeDepths\n          });\n        }\n        const footerNode = {\n          id: footerId,\n          parent: groupNode.id,\n          depth: groupNode ? groupNode.depth + 1 : 0,\n          type: 'footer'\n        };\n        insertNodeInTree(footerNode, newGroupingParams.tree, newGroupingParams.treeDepths, null);\n      }\n    } else if (groupNode.footerId != null) {\n      removeNodeFromTree({\n        node: newGroupingParams.tree[groupNode.footerId],\n        tree: newGroupingParams.tree,\n        treeDepths: newGroupingParams.treeDepths\n      });\n      newGroupingParams.tree[groupNode.id] = _extends({}, newGroupingParams.tree[groupNode.id], {\n        footerId: null\n      });\n    }\n  };\n  const updateRootGroupFooter = groupNode => {\n    const shouldHaveFooter = hasAggregationRule && getAggregationPosition(groupNode) === 'footer';\n    if (shouldHaveFooter) {\n      const rowId = getAggregationFooterRowIdFromGroupId(null);\n      newGroupingParams = addPinnedRow({\n        groupingParams: newGroupingParams,\n        rowModel: {\n          [GRID_ID_AUTOGENERATED]: rowId\n        },\n        rowId,\n        position: 'bottom',\n        apiRef,\n        isAutoGenerated: true\n      });\n    }\n  };\n  const updateGroupFooter = groupNode => {\n    if (groupNode.id === GRID_ROOT_GROUP_ID) {\n      updateRootGroupFooter(groupNode);\n    } else {\n      updateChildGroupFooter(groupNode);\n    }\n    groupNode.children.forEach(childId => {\n      const childNode = newGroupingParams.tree[childId];\n      if (childNode.type === 'group') {\n        updateGroupFooter(childNode);\n      }\n    });\n  };\n  updateGroupFooter(newGroupingParams.tree[GRID_ROOT_GROUP_ID]);\n  return newGroupingParams;\n};\n\n/**\n * Compares two sets of aggregation rules to determine if they are equal or not.\n */\nexport const areAggregationRulesEqual = (previousValue, newValue) => {\n  const previousFields = Object.keys(previousValue ?? {});\n  const newFields = Object.keys(newValue);\n  if (!isDeepEqual(previousFields, newFields)) {\n    return false;\n  }\n  return newFields.every(field => {\n    const previousRule = previousValue?.[field];\n    const newRule = newValue[field];\n    if (previousRule?.aggregationFunction !== newRule?.aggregationFunction) {\n      return false;\n    }\n    if (previousRule?.aggregationFunctionName !== newRule?.aggregationFunctionName) {\n      return false;\n    }\n    return true;\n  });\n};\nexport const getAggregationFunctionLabel = ({\n  apiRef,\n  aggregationRule\n}) => {\n  if (aggregationRule.aggregationFunction.label != null) {\n    return aggregationRule.aggregationFunction.label;\n  }\n  try {\n    return apiRef.current.getLocaleText(`aggregationFunctionLabel${capitalize(aggregationRule.aggregationFunctionName)}`);\n  } catch (e) {\n    return aggregationRule.aggregationFunctionName;\n  }\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement } from '../components';\nimport { GridCell } from '../components/cell/GridCell';\nimport { GridColumnHeaders } from '../components/GridColumnHeaders';\nimport { GridColumnMenu } from '../components/menu/columnMenu/GridColumnMenu';\nimport { GridDetailPanels } from '../components/GridDetailPanels';\nimport { GridPinnedRows } from '../components/GridPinnedRows';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nimport materialSlots from '../material';\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '../utils/fastMemo';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridBaseColumnHeaders } from './columnHeaders/GridBaseColumnHeaders';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { useGridSelector } from '../../utils';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { gridDimensionsSelector } from '../dimensions';\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { computeOffsetLeft } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridColumnGroupsUnwrappedModelSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { GridScrollbarFillerCell as ScrollbarFiller } from '../../../components/GridScrollbarFillerCell';\nimport { getPinnedCellOffset } from '../../../internals/utils/getPinnedCellOffset';\nimport { GridColumnHeaderSeparatorSides } from '../../../components/columnHeaders/GridColumnHeaderSeparator';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const theme = useTheme();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, theme.direction, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      // TODO: `minFirstColumn` is not used anymore, could be refactored out.\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = !hasVirtualization ? 0 : currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderTop = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderTop && gridClasses['filler--borderTop'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        borderTop: borderTop,\n        pinnedRight: isPinnedRight\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    if (pinnedPosition === 'left' || pinnedPosition === 'right') {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      if (pinnedPosition === 'left') {\n        style = {\n          left: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          right: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        minFirstColumn: leftRenderContext.firstColumnIndex,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        minFirstColumn: pinnedColumns.left.length,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        minFirstColumn: rightRenderContext.firstColumnIndex,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = apiRef.current.getColumn(field);\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + apiRef.current.getColumn(field).computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.headerHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push( /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            minFirstColumn: leftRenderContext.firstColumnIndex,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            minFirstColumn: rightRenderContext.firstColumnIndex,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: true,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };", "// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}", "// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from './icons/GridColumnUnsortedIcon';\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from './icons';\nimport MUISelectOption from './components/MUISelectOption';\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseCheckbox: MUICheckbox,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};", "import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};", "import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};", "import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};", "import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef\n  });\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nexport const useGridTheme = apiRef => {\n  const theme = useTheme();\n  if (!apiRef.current.state.theme) {\n    apiRef.current.state.theme = theme;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        theme\n      }));\n    }\n  }, [apiRef, theme]);\n};", "import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nimport { useGridApiMethod } from '../utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};", "import * as React from 'react';\nimport { Store } from '../../utils/Store';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}", "export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}", "// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}", "import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};", "import { useGridRefs } from './useGridRefs';\nimport { useGridTheme } from './useGridTheme';\nimport { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridTheme(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};", "import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from '../../utils';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { serializeCellValue } from '../export/serializers/csvSerializer';\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'c' && !event.shiftKey && !event.altKey)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};", "import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { buildWarning } from '../../../../utils/warning';\nfunction sanitizeCellValue(value, csvOptions) {\n  if (typeof value === 'string') {\n    if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n      const escapedValue = value.replace(/\"/g, '\"\"');\n      // Make sure value containing delimiter or line break won't be split into multiple cells\n      if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => value.includes(delimiter))) {\n        return `\"${escapedValue}\"`;\n      }\n      if (csvOptions.escapeFormulas) {\n        // See https://owasp.org/www-community/attacks/CSV_Injection\n        if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n          return `'${escapedValue}`;\n        }\n      }\n      return escapedValue;\n    }\n    return value;\n  }\n  return value;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nconst objectFormattedValueWarning = buildWarning(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (value === null || value === undefined) {\n      this.rowString += '';\n    } else if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        objectFormattedValueWarning();\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { EMPTY_PINNED_COLUMN_FIELDS } from './gridColumnsInterfaces';\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}", "import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  const handleColumnReorderChange = React.useCallback(() => {\n    // `colSpan` needs to be recalculated after column reordering\n    lookup.current = {};\n  }, []);\n  useGridApiEventHandler(apiRef, 'columnOrderChange', handleColumnReorderChange);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from '../../../models/gridColumnGrouping';\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from './gridColumnGroupsSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from './gridColumnGroupsUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns';\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};", "import { isLeaf } from '../../../models/gridColumnGrouping';\nimport { isDeepEqual } from '../../../utils/utils';\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};", "import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};", "/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}", "import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridExpandedRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { GRID_ID_AUTOGENERATED } from '../rows/gridRowsUtils';\nimport { defaultGetRowsToExport, getColumnsToExport } from './utils';\nimport { getDerivedPaginationModel } from '../pagination/useGridPaginationModel';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n\n    // the footer is always being placed at the bottom of the page as if all rows are exported\n    // so if getRowsToExport is being used to only export a subset of rows then we need to\n    // adjust the footer position to be correctly placed at the bottom of the grid\n    const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n    gridFooterElement.style.position = 'absolute';\n    gridFooterElement.style.width = '100%';\n    gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from '../density';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPageCountSelector, gridPaginationModelSelector } from './gridPaginationSelector';\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from './gridPaginationUtils';\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { defaultMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from '../../utils/useLazyRef';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowsLookupSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return defaultMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n      const filteringResult = apiRef.current.applyStrategyProcessor('filtering', {\n        isRowMatchingFilters,\n        filterModel: filterModel ?? getDefaultGridFilterModel()\n      });\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filteringResult)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef, props.filterMode, props.disableEval]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore, then remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};", "import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { gridFocusColumnGroupHeaderSelector } from '../focus';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nfunction enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nconst getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nconst getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const theme = useTheme();\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === rowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, theme.direction, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, theme.direction, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const direction = theme.direction;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1));\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef &&\n          // `GRID_TREE_DATA_GROUPING_FIELD` from the Pro package\n          colDef.field === '__tree_data_group__') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, theme.direction, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from './gridPaginationUtils';\nimport { useGridPaginationModel } from './useGridPaginationModel';\nimport { useGridRowCount } from './useGridRowCount';\nimport { useGridPaginationMeta } from './useGridPaginationMeta';\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from '../filter';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from './gridPaginationSelector';\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationMetaSelector } from './gridPaginationSelector';\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutoGeneratedRow } from '../rows/gridRowsUtils';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutoGeneratedRow(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey, isPasteShortcut } from '../../../utils/keyboardUtils';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue) {\n      const fieldType = apiRef.current.getColumn(field).type;\n      switch (fieldType) {\n        case 'boolean':\n          newValue = false;\n          break;\n        case 'date':\n        case 'dateTime':\n        case 'number':\n          newValue = undefined;\n          break;\n        case 'singleSelect':\n          newValue = null;\n          break;\n        case 'string':\n        default:\n          newValue = '';\n          break;\n      }\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};", "import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey, isPasteShortcut } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        newValue = deleteValue ? '' : initialValue;\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector } from './gridRowsSelector';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutoGeneratedRow, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutoGeneratedRow(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = [];\n    updates.forEach(update => {\n      const id = getRowIdFromRowModel(update, props.getRowId, 'A row was provided without id when calling updateRows():');\n      const rowNode = apiRef.current.getRowNode(id);\n      if (rowNode?.type === 'pinnedRow') {\n        // @ts-ignore because otherwise `release:build` doesn't work\n        const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n        const prevModel = pinnedRowsCache.idLookup[id];\n        if (prevModel) {\n          pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n        }\n      } else {\n        nonPinnedRowsUpdates.push(update);\n      }\n    });\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from './gridRowsUtils';\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortModelSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from '../../../DataGrid/useDataGridProps';\n\n// TODO: I think the row heights can now be encoded as a single `size` instead of `sizes.baseXxxx`\n\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\nlet warnedOnceInvalidRowHeight = false;\nconst getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nconst rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nconst getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef(Object.create(null));\n\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const validRowHeight = getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeight\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n        };\n      }\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = typeof rowHeight === 'number' && rowHeight > 0 ? rowHeight : 52;\n      const existingBaseRowHeight = sizes.baseCenter;\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeight;\n\n            // If the row was not measured yet use the estimated row height\n            baseRowHeight = estimatedRowHeight ?? rowHeight;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns invalid value.\n          baseRowHeight = getValidRowHeight(rowHeightFromUser, rowHeight, getRowHeightWarning);\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n      const initialHeights = {\n        baseCenter: baseRowHeight\n      };\n      if (getRowSpacing) {\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = spacing.top ?? 0;\n        initialHeights.spacingBottom = spacing.bottom ?? 0;\n      }\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      /* eslint-disable-next-line no-restricted-syntax, guard-for-in */\n      for (const key in processedSizes) {\n        const value = processedSizes[key];\n        if (key !== 'baseCenter') {\n          otherSizes += value;\n        }\n      }\n      return acc + processedSizes.baseCenter + otherSizes;\n    }, 0);\n    pinnedRows?.top?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows?.bottom?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeight, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows, densityFactor]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeight;\n  }, [rowHeight]);\n  const getRowInternalSizes = rowId => rowsHeightLookup.current[rowId]?.sizes;\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta, props.rowPositionsDebounceMs), [hydrateRowsMeta, props.rowPositionsDebounceMs]);\n  const storeMeasuredRowHeight = React.useCallback((id, height) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    }\n\n    // Only trigger hydration if the value is different, otherwise we trigger a loop\n    const needsHydration = rowsHeightLookup.current[id].sizes.baseCenter !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    return rowsHeightLookup.current[id]?.autoHeight || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeight, filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    getLastMeasuredRowIndex,\n    rowHasAutoHeight\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from '../constants/defaultGridSlotsComponents';\nimport { GridEditModes } from '../models';\nimport { computeSlots, useProps } from '../internals/utils';\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\n\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  columnBufferPx: 150,\n  rowBufferPx: 150,\n  rows: [],\n  rowSelection: true,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnSelector: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleRowSelection: false,\n  disableColumnSorting: false,\n  disableMultipleColumnsSorting: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterMode: 'client',\n  filterDebounceMs: 150,\n  columnHeaderHeight: 56,\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pagination: false,\n  paginationMode: 'client',\n  rowHeight: 52,\n  resizeThrottleMs: 60,\n  pageSizeOptions: [25, 50, 100],\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingOrder: ['asc', 'desc', null],\n  sortingMode: 'client',\n  throttleRowsMs: 0,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  keepNonExistentRowsSelected: false,\n  keepColumnPositionIfDraggedOutside: false,\n  ignoreValueFormatterDuringExport: false,\n  clipboardCopyCellDelimiter: '\\t',\n  rowPositionsDebounceMs: 166,\n  autosizeOnMount: false,\n  disableAutosize: false\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  return React.useMemo(() => _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, themedProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots]);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}", "import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => {\n    const themedProps = _extends({}, (_objectDestructuringEmpty(allProps), allProps));\n    return groupForwardedProps(themedProps);\n  }, [allProps]);\n}", "import { isNumber } from '../../utils/utils';\nimport { GridSignature } from '../../hooks/utils/useGridApiEventHandler';\nexport const propValidatorsDataGrid = [props => props.autoPageSize && props.autoHeight && ['MUI X: `<DataGrid autoPageSize={true} autoHeight={true} />` are not valid props.', 'You cannot use both the `autoPageSize` and `autoHeight` props at the same time because `autoHeight` scales the height of the Data Grid according to the `pageSize`.', '', 'Please remove one of these two props.'].join('\\n') || undefined, props => props.paginationMode === 'client' && props.paginationMeta != null && ['MUI X: Usage of the `paginationMeta` prop with client-side pagination (`paginationMode=\"client\"`) has no effect.', '`paginationMeta` is only meant to be used with `paginationMode=\"server\"`.'].join('\\n') || undefined, props => props.signature === GridSignature.DataGrid && props.paginationMode === 'client' && isNumber(props.rowCount) && ['MUI X: Usage of the `rowCount` prop with client side pagination (`paginationMode=\"client\"`) has no effect.', '`rowCount` is only meant to be used with `paginationMode=\"server\"`.'].join('\\n') || undefined, props => props.paginationMode === 'server' && props.rowCount == null && [\"MUI X: The `rowCount` prop must be passed using `paginationMode='server'`\", 'For more detail, see http://mui.com/components/data-grid/pagination/#index-based-pagination'].join('\\n') || undefined];\nconst warnedOnceCache = new Set();\nfunction warnOnce(message) {\n  if (!warnedOnceCache.has(message)) {\n    console.error(message);\n    warnedOnceCache.add(message);\n  }\n}\nexport function validateProps(props, validators) {\n  validators.forEach(validator => {\n    const warning = validator(props);\n    if (warning) {\n      warnOnce(warning);\n    }\n  });\n}\nexport function clearWarningsCache() {\n  warnedOnceCache.clear();\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const headerFilteringStateInitializer = (state, props) => _extends({}, state, {\n  headerFiltering: {\n    enabled: props.headerFilters ?? false,\n    editing: null,\n    menuOpen: null\n  }\n});\nexport const useGridHeaderFiltering = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridHeaderFiltering');\n  const setHeaderFilterState = React.useCallback(headerFilterState => {\n    apiRef.current.setState(state => {\n      // Safety check to avoid MIT users from using it\n      // This hook should ultimately be moved to the Pro package\n      if (props.signature === 'DataGrid') {\n        return state;\n      }\n      return _extends({}, state, {\n        headerFiltering: {\n          enabled: props.headerFilters ?? false,\n          editing: headerFilterState.editing ?? null,\n          menuOpen: headerFilterState.menuOpen ?? null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.signature, props.headerFilters]);\n  const startHeaderFilterEditMode = React.useCallback(field => {\n    logger.debug(`Starting edit mode on header filter for field: ${field}`);\n    apiRef.current.setHeaderFilterState({\n      editing: field\n    });\n  }, [apiRef, logger]);\n  const stopHeaderFilterEditMode = React.useCallback(() => {\n    logger.debug(`Stopping edit mode on header filter`);\n    apiRef.current.setHeaderFilterState({\n      editing: null\n    });\n  }, [apiRef, logger]);\n  const showHeaderFilterMenu = React.useCallback(field => {\n    logger.debug(`Opening header filter menu for field: ${field}`);\n    apiRef.current.setHeaderFilterState({\n      menuOpen: field\n    });\n  }, [apiRef, logger]);\n  const hideHeaderFilterMenu = React.useCallback(() => {\n    logger.debug(`Hiding header filter menu for active field`);\n    let fieldToFocus = apiRef.current.state.headerFiltering.menuOpen;\n    if (fieldToFocus) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setHeaderFilterState({\n        menuOpen: null\n      });\n      apiRef.current.setColumnHeaderFilterFocus(fieldToFocus);\n    }\n  }, [apiRef, logger]);\n  const headerFilterPrivateApi = {\n    setHeaderFilterState\n  };\n  const headerFilterApi = {\n    startHeaderFilterEditMode,\n    stopHeaderFilterEditMode,\n    showHeaderFilterMenu,\n    hideHeaderFilterMenu\n  };\n  useGridApiMethod(apiRef, headerFilterApi, 'public');\n  useGridApiMethod(apiRef, headerFilterPrivateApi, 'private');\n\n  /*\n   * EFFECTS\n   */\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      apiRef.current.setHeaderFilterState({\n        enabled: props.headerFilters ?? false\n      });\n    }\n  }, [apiRef, props.headerFilters]);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridRowSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridExpandedSortedRowIdsSelector, gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nimport { isMultipleRowSelectionEnabled } from './utils';\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  };\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setRowSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n      if (isSelected) {\n        newSelection.push(id);\n      }\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * EVENTS\n   */\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n    if (hasChanged) {\n      apiRef.current.setRowSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    const filterModel = gridFilterModelSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value, filterModel?.items.length > 0);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getTreeNodeDescendants } from '../rows/gridRowsUtils';\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};", "import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridDimensionsSelector } from '../dimensions';\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const theme = useTheme();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.width,\n        scrollTop: Math.abs(virtualScrollerRef.current.scrollLeft),\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.height,\n        scrollTop: virtualScrollerRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left !== undefined && colRef.current) {\n      const direction = theme.direction === 'rtl' ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, theme.direction, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};", "import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { throttle } from '../../../utils/throttle';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridDimensionsSelector } from './gridDimensionsSelectors';\nimport { gridDensityFactorSelector } from '../density';\nimport { gridRenderContextSelector } from '../virtualization';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const height = parseFloat(computedStyle.height) || 0;\n    const width = parseFloat(computedStyle.width) || 0;\n    const hasHeightChanged = height !== previousSize.current?.height;\n    const hasWidthChanged = width !== previousSize.current?.width;\n    if (!previousSize.current || hasHeightChanged || hasWidthChanged) {\n      const size = {\n        width,\n        height\n      };\n      apiRef.current.publishEvent('resize', size);\n      previousSize.current = size;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (newDimensions.viewportInnerSize.width !== prevDimensions.viewportInnerSize.width || newDimensions.viewportInnerSize.height !== prevDimensions.viewportInnerSize.height) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  const dimensions = apiRef.current.state.dimensions;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensions.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensions.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensions.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensions.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensions.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensions.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensions.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensions.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensions.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensions.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensions.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensions.bottomContainerHeight}px`);\n    set('--height', `${dimensions.rowHeight}px`);\n  }, [root, dimensions]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}", "export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}", "import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useTheme } from '@mui/material/styles';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol } from '../../../utils/domUtils';\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from './gridColumnResizeApi';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from '../../utils';\nimport { gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { createControllablePromise } from '../../../utils/createControllablePromise';\nimport { clamp } from '../../../utils/utils';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridPinnedColumnPosition } from '../columns/gridColumnsInterfaces';\nimport { gridColumnsStateSelector } from '../columns';\n// TODO: remove support for Safari < 13.\n// https://caniuse.com/#search=touch-action\n//\n// Safari, on iOS, supports touch action since v13.\n// Over 80% of the iOS phones are compatible\n// in August 2020.\n// Utilizing the CSS.supports method to check if touch-action is supported.\n// Since CSS.supports is supported on all but Edge@12 and IE and touch-action\n// is supported on both Edge@12 and IE if CSS.supports is not available that means that\n// touch-action will be supported\nlet cachedSupportsTouchActionNone = false;\nfunction doesSupportTouchActionNone() {\n  if (cachedSupportsTouchActionNone === undefined) {\n    if (typeof CSS !== 'undefined' && typeof CSS.supports === 'function') {\n      cachedSupportsTouchActionNone = CSS.supports('touch-action', 'none');\n    } else {\n      cachedSupportsTouchActionNone = true;\n    }\n  }\n  return cachedSupportsTouchActionNone;\n}\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, direction) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (direction === 'rtl') {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const theme = useTheme();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    refs.columnHeaderElement.style.minWidth = `${newWidth}px`;\n    refs.columnHeaderElement.style.maxWidth = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n      headerFilterElement.style.minWidth = `${newWidth}px`;\n      headerFilterElement.style.maxWidth = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n      div.style.minWidth = finalWidth;\n      div.style.maxWidth = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n        div.style.minWidth = finalWidth;\n        div.style.maxWidth = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${colDef.field}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement);\n    resizeDirection.current = getResizeDirection(separator, theme.direction);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    // If touch-action: none; is not supported we need to prevent the scroll manually.\n    if (!doesSupportTouchActionNone()) {\n      event.preventDefault();\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: doesSupportTouchActionNone()\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}", "export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}", "import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};", "import { gridColumnLookupSelector, gridFilteredRowsLookupSelector, gridRowTreeSelector, GRID_ROOT_GROUP_ID } from '@mui/x-data-grid-pro';\nimport { getAggregationRules } from './gridAggregationUtils';\nimport { gridAggregationModelSelector } from './gridAggregationSelectors';\nconst getAggregationCellValue = ({\n  apiRef,\n  groupId,\n  field,\n  aggregationFunction,\n  aggregationRowsScope\n}) => {\n  const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n  const rowIds = apiRef.current.getRowGroupChildren({\n    groupId\n  });\n  const values = [];\n  rowIds.forEach(rowId => {\n    if (aggregationRowsScope === 'filtered' && filteredRowsLookup[rowId] === false) {\n      return;\n    }\n\n    // If the row is a group, we want to aggregate based on its children\n    // For instance in the following tree, we want the aggregated values of A to be based on A.A, A.B.A and A.B.B but not A.B\n    // A\n    //   A.A\n    //   A.B\n    //     A.B.A\n    //     A.B.B\n    const rowNode = apiRef.current.getRowNode(rowId);\n    if (rowNode.type === 'group') {\n      return;\n    }\n    if (typeof aggregationFunction.getCellValue === 'function') {\n      const row = apiRef.current.getRow(rowId);\n      values.push(aggregationFunction.getCellValue({\n        row\n      }));\n    } else {\n      values.push(apiRef.current.getCellValue(rowId, field));\n    }\n  });\n  return aggregationFunction.apply({\n    values,\n    groupId,\n    field // Added per user request in https://github.com/mui/mui-x/issues/6995#issuecomment-1327423455\n  });\n};\nconst getGroupAggregatedValue = ({\n  groupId,\n  apiRef,\n  aggregationRowsScope,\n  aggregatedFields,\n  aggregationRules,\n  position\n}) => {\n  const groupAggregationLookup = {};\n  for (let j = 0; j < aggregatedFields.length; j += 1) {\n    const aggregatedField = aggregatedFields[j];\n    const columnAggregationRules = aggregationRules[aggregatedField];\n    groupAggregationLookup[aggregatedField] = {\n      position,\n      value: getAggregationCellValue({\n        apiRef,\n        groupId,\n        field: aggregatedField,\n        aggregationFunction: columnAggregationRules.aggregationFunction,\n        aggregationRowsScope\n      })\n    };\n  }\n  return groupAggregationLookup;\n};\nexport const createAggregationLookup = ({\n  apiRef,\n  aggregationFunctions,\n  aggregationRowsScope,\n  getAggregationPosition\n}) => {\n  const aggregationRules = getAggregationRules({\n    columnsLookup: gridColumnLookupSelector(apiRef),\n    aggregationModel: gridAggregationModelSelector(apiRef),\n    aggregationFunctions\n  });\n  const aggregatedFields = Object.keys(aggregationRules);\n  if (aggregatedFields.length === 0) {\n    return {};\n  }\n  const aggregationLookup = {};\n  const rowTree = gridRowTreeSelector(apiRef);\n  const createGroupAggregationLookup = groupNode => {\n    for (let i = 0; i < groupNode.children.length; i += 1) {\n      const childId = groupNode.children[i];\n      const childNode = rowTree[childId];\n      if (childNode.type === 'group') {\n        createGroupAggregationLookup(childNode);\n      }\n    }\n    const hasAggregableChildren = groupNode.children.length;\n    if (hasAggregableChildren) {\n      const position = getAggregationPosition(groupNode);\n      if (position != null) {\n        aggregationLookup[groupNode.id] = getGroupAggregatedValue({\n          groupId: groupNode.id,\n          apiRef,\n          aggregatedFields,\n          aggregationRowsScope,\n          aggregationRules,\n          position\n        });\n      }\n    }\n  };\n  createGroupAggregationLookup(rowTree[GRID_ROOT_GROUP_ID]);\n  return aggregationLookup;\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnLookupSelector } from '@mui/x-data-grid-pro';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid-pro/internals';\nimport { getAvailableAggregationFunctions, addFooterRows, getAggregationRules, mergeStateWithAggregationModel } from './gridAggregationUtils';\nimport { wrapColumnWithAggregationValue, unwrapColumnFromAggregation } from './wrapColumnWithAggregation';\nimport { gridAggregationModelSelector } from './gridAggregationSelectors';\nexport const useGridAggregationPreProcessors = (apiRef, props) => {\n  // apiRef.current.caches.aggregation.rulesOnLastColumnHydration is not used because by the time\n  // that the pre-processor is called it will already have been updated with the current rules.\n  const rulesOnLastColumnHydration = React.useRef({});\n  const updateAggregatedColumns = React.useCallback(columnsState => {\n    const aggregationRules = props.disableAggregation ? {} : getAggregationRules({\n      columnsLookup: columnsState.lookup,\n      aggregationModel: gridAggregationModelSelector(apiRef),\n      aggregationFunctions: props.aggregationFunctions\n    });\n    columnsState.orderedFields.forEach(field => {\n      const shouldHaveAggregationValue = !!aggregationRules[field];\n      const haveAggregationColumnValue = !!rulesOnLastColumnHydration.current[field];\n      let column = columnsState.lookup[field];\n      if (haveAggregationColumnValue) {\n        column = unwrapColumnFromAggregation({\n          column\n        });\n      }\n      if (shouldHaveAggregationValue) {\n        column = wrapColumnWithAggregationValue({\n          column,\n          aggregationRule: aggregationRules[field],\n          apiRef\n        });\n      }\n      columnsState.lookup[field] = column;\n    });\n    rulesOnLastColumnHydration.current = aggregationRules;\n    return columnsState;\n  }, [apiRef, props.aggregationFunctions, props.disableAggregation]);\n  const addGroupFooterRows = React.useCallback(value => {\n    const aggregationRules = props.disableAggregation ? {} : getAggregationRules({\n      columnsLookup: gridColumnLookupSelector(apiRef),\n      aggregationModel: gridAggregationModelSelector(apiRef),\n      aggregationFunctions: props.aggregationFunctions\n    });\n    const hasAggregationRule = Object.keys(aggregationRules).length > 0;\n\n    // If we did not have any aggregation footer before, and we still don't have any,\n    // Then we can skip this step\n    if (Object.keys(apiRef.current.caches.aggregation.rulesOnLastRowHydration).length === 0 && !hasAggregationRule) {\n      return value;\n    }\n    apiRef.current.caches.aggregation.rulesOnLastRowHydration = aggregationRules;\n    return addFooterRows({\n      apiRef,\n      groupingParams: value,\n      getAggregationPosition: props.getAggregationPosition,\n      hasAggregationRule\n    });\n  }, [apiRef, props.disableAggregation, props.getAggregationPosition, props.aggregationFunctions]);\n  const addColumnMenuButtons = React.useCallback((columnMenuItems, colDef) => {\n    if (props.disableAggregation || !colDef.aggregable) {\n      return columnMenuItems;\n    }\n    const availableAggregationFunctions = getAvailableAggregationFunctions({\n      aggregationFunctions: props.aggregationFunctions,\n      colDef\n    });\n    if (availableAggregationFunctions.length === 0) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuAggregationItem'];\n  }, [props.aggregationFunctions, props.disableAggregation]);\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    if (props.disableAggregation) {\n      return prevState;\n    }\n    const aggregationModelToExport = gridAggregationModelSelector(apiRef);\n    if (Object.values(aggregationModelToExport).length === 0) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      aggregation: {\n        model: aggregationModelToExport\n      }\n    });\n  }, [apiRef, props.disableAggregation]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    if (props.disableAggregation) {\n      return params;\n    }\n    const aggregationModel = context.stateToRestore.aggregation?.model;\n    if (aggregationModel != null) {\n      apiRef.current.setState(mergeStateWithAggregationModel(aggregationModel));\n    }\n    return params;\n  }, [apiRef, props.disableAggregation]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateAggregatedColumns);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateRows', addGroupFooterRows);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuButtons);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n};", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"aggregationWrappedProperties\"];\nimport * as React from 'react';\nimport { gridAggregationLookupSelector } from './gridAggregationSelectors';\nimport { GridFooterCell } from '../../../components/GridFooterCell';\nimport { GridAggregationHeader } from '../../../components/GridAggregationHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AGGREGATION_WRAPPABLE_PROPERTIES = ['valueGetter', 'valueFormatter', 'renderCell', 'renderHeader', 'filterOperators'];\nconst getAggregationValueWrappedValueGetter = ({\n  value: valueGetter,\n  getCellAggregationResult\n}) => {\n  const wrappedValueGetter = (value, row, column, apiRef) => {\n    const rowId = apiRef.current.getRowId(row);\n    const cellAggregationResult = getCellAggregationResult(rowId, column.field);\n    if (cellAggregationResult != null) {\n      return cellAggregationResult?.value ?? null;\n    }\n    if (valueGetter) {\n      return valueGetter(value, row, column, apiRef);\n    }\n    return row[column.field];\n  };\n  return wrappedValueGetter;\n};\nconst getAggregationValueWrappedValueFormatter = ({\n  value: valueFormatter,\n  aggregationRule,\n  getCellAggregationResult\n}) => {\n  // If neither the inline aggregation function nor the footer aggregation function have a custom value formatter,\n  // Then we don't wrap the column value formatter\n  if (!aggregationRule.aggregationFunction.valueFormatter) {\n    return valueFormatter;\n  }\n  const wrappedValueFormatter = (value, row, column, apiRef) => {\n    const rowId = apiRef.current.getRowId(row);\n    if (rowId != null) {\n      const cellAggregationResult = getCellAggregationResult(rowId, column.field);\n      if (cellAggregationResult != null) {\n        return aggregationRule.aggregationFunction.valueFormatter?.(value, row, column, apiRef);\n      }\n    }\n    if (valueFormatter) {\n      return valueFormatter(value, row, column, apiRef);\n    }\n    return value;\n  };\n  return wrappedValueFormatter;\n};\nconst getAggregationValueWrappedRenderCell = ({\n  value: renderCell,\n  aggregationRule,\n  getCellAggregationResult\n}) => {\n  const wrappedRenderCell = params => {\n    const cellAggregationResult = getCellAggregationResult(params.id, params.field);\n    if (cellAggregationResult != null) {\n      if (!renderCell) {\n        if (cellAggregationResult.position === 'footer') {\n          return /*#__PURE__*/_jsx(GridFooterCell, _extends({}, params));\n        }\n        return params.formattedValue;\n      }\n      const aggregationMeta = {\n        hasCellUnit: aggregationRule.aggregationFunction.hasCellUnit ?? true,\n        aggregationFunctionName: aggregationRule.aggregationFunctionName\n      };\n      return renderCell(_extends({}, params, {\n        aggregation: aggregationMeta\n      }));\n    }\n    if (!renderCell) {\n      return params.formattedValue;\n    }\n    return renderCell(params);\n  };\n  return wrappedRenderCell;\n};\n\n/**\n * Skips the filtering for aggregated rows\n */\nconst getWrappedFilterOperators = ({\n  value: filterOperators,\n  apiRef,\n  getCellAggregationResult\n}) => filterOperators.map(operator => {\n  const baseGetApplyFilterFn = operator.getApplyFilterFn;\n  const getApplyFilterFn = (filterItem, colDef) => {\n    const filterFn = baseGetApplyFilterFn(filterItem, colDef);\n    if (!filterFn) {\n      return null;\n    }\n    return (value, row, column, api) => {\n      if (getCellAggregationResult(apiRef.current.getRowId(row), column.field) != null) {\n        return true;\n      }\n      return filterFn(value, row, column, api);\n    };\n  };\n  return _extends({}, operator, {\n    getApplyFilterFn\n  });\n});\n\n/**\n * Add the aggregation method around the header name\n */\nconst getWrappedRenderHeader = ({\n  value: renderHeader,\n  aggregationRule\n}) => {\n  const wrappedRenderHeader = params => {\n    return /*#__PURE__*/_jsx(GridAggregationHeader, _extends({}, params, {\n      aggregation: {\n        aggregationRule\n      },\n      renderHeader: renderHeader\n    }));\n  };\n  return wrappedRenderHeader;\n};\n\n/**\n * Add a wrapper around each wrappable property of the column to customize the behavior of the aggregation cells.\n */\nexport const wrapColumnWithAggregationValue = ({\n  column,\n  apiRef,\n  aggregationRule\n}) => {\n  const getCellAggregationResult = (id, field) => {\n    let cellAggregationPosition = null;\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode.type === 'group') {\n      cellAggregationPosition = 'inline';\n    } else if (id.toString().startsWith('auto-generated-group-footer-')) {\n      cellAggregationPosition = 'footer';\n    }\n    if (cellAggregationPosition == null) {\n      return null;\n    }\n\n    // TODO: Add custom root id\n    const groupId = cellAggregationPosition === 'inline' ? id : rowNode.parent ?? '';\n    const aggregationResult = gridAggregationLookupSelector(apiRef)?.[groupId]?.[field];\n    if (!aggregationResult || aggregationResult.position !== cellAggregationPosition) {\n      return null;\n    }\n    return aggregationResult;\n  };\n  let didWrapSomeProperty = false;\n  const wrappedColumn = _extends({}, column, {\n    aggregationWrappedProperties: []\n  });\n  const wrapColumnProperty = (property, wrapper) => {\n    const originalValue = column[property];\n    const wrappedProperty = wrapper({\n      apiRef,\n      value: originalValue,\n      colDef: column,\n      aggregationRule,\n      getCellAggregationResult\n    });\n    if (wrappedProperty !== originalValue) {\n      didWrapSomeProperty = true;\n      wrappedColumn[property] = wrappedProperty;\n      wrappedColumn.aggregationWrappedProperties.push({\n        name: property,\n        originalValue,\n        wrappedValue: wrappedProperty\n      });\n    }\n  };\n  wrapColumnProperty('valueGetter', getAggregationValueWrappedValueGetter);\n  wrapColumnProperty('valueFormatter', getAggregationValueWrappedValueFormatter);\n  wrapColumnProperty('renderCell', getAggregationValueWrappedRenderCell);\n  wrapColumnProperty('renderHeader', getWrappedRenderHeader);\n  wrapColumnProperty('filterOperators', getWrappedFilterOperators);\n  if (!didWrapSomeProperty) {\n    return column;\n  }\n  return wrappedColumn;\n};\n\n/**\n * Remove the aggregation wrappers around the wrappable properties of the column.\n */\nexport const unwrapColumnFromAggregation = ({\n  column\n}) => {\n  if (!column.aggregationWrappedProperties) {\n    return column;\n  }\n  const _ref = column,\n    {\n      aggregationWrappedProperties\n    } = _ref,\n    unwrappedColumn = _objectWithoutPropertiesLoose(_ref, _excluded);\n  aggregationWrappedProperties.forEach(({\n    name,\n    originalValue,\n    wrappedValue\n  }) => {\n    // The value changed since we wrapped it\n    if (wrappedValue !== unwrappedColumn[name]) {\n      return;\n    }\n    unwrappedColumn[name] = originalValue;\n  });\n  return unwrappedColumn;\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"formattedValue\", \"colDef\", \"cellMode\", \"row\", \"api\", \"id\", \"value\", \"rowNode\", \"field\", \"focusElementRef\", \"hasFocus\", \"tabIndex\", \"isEditable\"];\nimport * as React from 'react';\nimport { getDataGridUtilityClass } from '@mui/x-data-grid';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridFooterCellRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterCell',\n  overridesResolver: (_, styles) => styles.footerCell\n})(({\n  theme\n}) => ({\n  fontWeight: theme.typography.fontWeightMedium,\n  color: (theme.vars || theme).palette.primary.dark\n}));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridFooterCell(props) {\n  const {\n      formattedValue\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = rootProps;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridFooterCellRoot, _extends({\n    ownerState: ownerState,\n    className: classes.root\n  }, other, {\n    children: formattedValue\n  }));\n}\nexport { GridFooterCell };", "import * as React from 'react';\n/**\n * Hook that instantiate a [[GridApiRef]].\n */\nexport const useGridApiRef = () => React.useRef({});", "'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps } from './useDataGridProps';\nimport { propValidatorsDataGrid, validateProps } from '../internals/utils/propValidation';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nlet propValidators;\nif (process.env.NODE_ENV !== 'production') {\n  propValidators = [...propValidatorsDataGrid,\n  // Only validate in MIT version\n  props => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\n}\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follow the number of rows in the Data Grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, the vertical borders of the cells are displayed.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n};", "import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editing/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { rowSelectionStateInitializer, useGridRowSelection } from '../hooks/features/rowSelection/useGridRowSelection';\nimport { useGridRowSelectionPreProcessors } from '../hooks/features/rowSelection/useGridRowSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { dimensionsStateInitializer, useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nimport { useGridVirtualization, virtualizationStateInitializer } from '../hooks/features/virtualization';\nimport { columnResizeStateInitializer, useGridColumnResize } from '../hooks/features/columnResize/useGridColumnResize';\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  return apiRef;\n};", "import { useGridRootProps as useCommunityGridRootProps } from '@mui/x-data-grid-pro';\nexport const useGridRootProps = useCommunityGridRootProps;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"renderHeader\"];\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses, GridColumnHeaderTitle } from '@mui/x-data-grid';\nimport { getAggregationFunctionLabel } from '../hooks/features/aggregation/gridAggregationUtils';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridAggregationHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'AggregationColumnHeader',\n  overridesResolver: (_, styles) => styles.aggregationColumnHeader\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  [`&.${gridClasses['aggregationColumnHeader--alignRight']}`]: {\n    alignItems: 'flex-end'\n  },\n  [`&.${gridClasses['aggregationColumnHeader--alignCenter']}`]: {\n    alignItems: 'center'\n  }\n});\nconst GridAggregationFunctionLabel = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'AggregationColumnHeaderLabel',\n  overridesResolver: (_, styles) => styles.aggregationColumnHeaderLabel\n})(({\n  theme\n}) => {\n  return {\n    fontSize: theme.typography.caption.fontSize,\n    lineHeight: theme.typography.caption.fontSize,\n    position: 'absolute',\n    bottom: 4,\n    fontWeight: theme.typography.fontWeightMedium,\n    color: (theme.vars || theme).palette.primary.dark,\n    textTransform: 'uppercase'\n  };\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    colDef\n  } = ownerState;\n  const slots = {\n    root: ['aggregationColumnHeader', colDef.headerAlign === 'left' && 'aggregationColumnHeader--alignLeft', colDef.headerAlign === 'center' && 'aggregationColumnHeader--alignCenter', colDef.headerAlign === 'right' && 'aggregationColumnHeader--alignRight'],\n    aggregationLabel: ['aggregationColumnHeaderLabel']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridAggregationHeader(props) {\n  const {\n      renderHeader\n    } = props,\n    params = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    colDef,\n    aggregation\n  } = params;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    classes: rootProps.classes,\n    colDef\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (!aggregation) {\n    return null;\n  }\n  const aggregationLabel = getAggregationFunctionLabel({\n    apiRef,\n    aggregationRule: aggregation.aggregationRule\n  });\n  return /*#__PURE__*/_jsxs(GridAggregationHeaderRoot, {\n    ownerState: ownerState,\n    className: classes.root,\n    children: [renderHeader ? renderHeader(params) : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n      label: colDef.headerName ?? colDef.field,\n      description: colDef.description,\n      columnWidth: colDef.computedWidth\n    }), /*#__PURE__*/_jsx(GridAggregationFunctionLabel, {\n      ownerState: ownerState,\n      className: classes.aggregationLabel,\n      children: aggregationLabel\n    })]\n  });\n}\nexport { GridAggregationHeader };", "import { useGridApiContext as useCommunityGridApiContext } from '@mui/x-data-grid';\nexport const useGridApiContext = useCommunityGridApiContext;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiEventHandler, useGridApiMethod, gridColumnLookupSelector } from '@mui/x-data-grid-pro';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid-pro/internals';\nimport { gridRowGroupingModelSelector, gridRowGroupingSanitizedModelSelector } from './gridRowGroupingSelector';\nimport { getRowGroupingFieldFromGroupingCriteria, ROW_GROUPING_STRATEGY, isGroupingColumn, mergeStateWithRowGroupingModel, setStrategyAvailability, getGroupingRules, areGroupingRulesEqual } from './gridRowGroupingUtils';\nexport const rowGroupingStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rowGrouping = {\n    rulesOnLastRowTreeCreation: []\n  };\n  return _extends({}, state, {\n    rowGrouping: {\n      model: props.rowGroupingModel ?? props.initialState?.rowGrouping?.model ?? []\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (state, method) - can be after, async only\n * @requires useGridRows (state, method) - can be after, async only\n * @requires useGridParamsApi (method) - can be after, async only\n */\nexport const useGridRowGrouping = (apiRef, props) => {\n  apiRef.current.registerControlState({\n    stateId: 'rowGrouping',\n    propModel: props.rowGroupingModel,\n    propOnChange: props.onRowGroupingModelChange,\n    stateSelector: gridRowGroupingModelSelector,\n    changeEvent: 'rowGroupingModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowGroupingModel = React.useCallback(model => {\n    const currentModel = gridRowGroupingModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(mergeStateWithRowGroupingModel(model));\n      setStrategyAvailability(apiRef, props.disableRowGrouping);\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, props.disableRowGrouping]);\n  const addRowGroupingCriteria = React.useCallback((field, groupingIndex) => {\n    const currentModel = gridRowGroupingModelSelector(apiRef);\n    if (currentModel.includes(field)) {\n      return;\n    }\n    const cleanGroupingIndex = groupingIndex ?? currentModel.length;\n    const updatedModel = [...currentModel.slice(0, cleanGroupingIndex), field, ...currentModel.slice(cleanGroupingIndex)];\n    apiRef.current.setRowGroupingModel(updatedModel);\n  }, [apiRef]);\n  const removeRowGroupingCriteria = React.useCallback(field => {\n    const currentModel = gridRowGroupingModelSelector(apiRef);\n    if (!currentModel.includes(field)) {\n      return;\n    }\n    apiRef.current.setRowGroupingModel(currentModel.filter(el => el !== field));\n  }, [apiRef]);\n  const setRowGroupingCriteriaIndex = React.useCallback((field, targetIndex) => {\n    const currentModel = gridRowGroupingModelSelector(apiRef);\n    const currentTargetIndex = currentModel.indexOf(field);\n    if (currentTargetIndex === -1) {\n      return;\n    }\n    const updatedModel = [...currentModel];\n    updatedModel.splice(targetIndex, 0, updatedModel.splice(currentTargetIndex, 1)[0]);\n    apiRef.current.setRowGroupingModel(updatedModel);\n  }, [apiRef]);\n  const rowGroupingApi = {\n    setRowGroupingModel,\n    addRowGroupingCriteria,\n    removeRowGroupingCriteria,\n    setRowGroupingCriteriaIndex\n  };\n  useGridApiMethod(apiRef, rowGroupingApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addColumnMenuButtons = React.useCallback((columnMenuItems, colDef) => {\n    if (props.disableRowGrouping) {\n      return columnMenuItems;\n    }\n    if (isGroupingColumn(colDef.field) || colDef.groupable) {\n      return [...columnMenuItems, 'columnMenuGroupingItem'];\n    }\n    return columnMenuItems;\n  }, [props.disableRowGrouping]);\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const rowGroupingModelToExport = gridRowGroupingModelSelector(apiRef);\n    const shouldExportRowGroupingModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.rowGroupingModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.rowGrouping?.model != null ||\n    // Export if the model is not empty\n    Object.keys(rowGroupingModelToExport).length > 0;\n    if (!shouldExportRowGroupingModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      rowGrouping: {\n        model: rowGroupingModelToExport\n      }\n    });\n  }, [apiRef, props.rowGroupingModel, props.initialState?.rowGrouping?.model]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    if (props.disableRowGrouping) {\n      return params;\n    }\n    const rowGroupingModel = context.stateToRestore.rowGrouping?.model;\n    if (rowGroupingModel != null) {\n      apiRef.current.setState(mergeStateWithRowGroupingModel(rowGroupingModel));\n    }\n    return params;\n  }, [apiRef, props.disableRowGrouping]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuButtons);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (isGroupingColumn(cellParams.field) && event.key === ' ' && !event.shiftKey) {\n      event.stopPropagation();\n      event.preventDefault();\n      if (params.rowNode.type !== 'group') {\n        return;\n      }\n      const isOnGroupingCell = props.rowGroupingColumnMode === 'single' || getRowGroupingFieldFromGroupingCriteria(params.rowNode.groupingField) === params.field;\n      if (!isOnGroupingCell) {\n        return;\n      }\n      apiRef.current.setRowChildrenExpansion(params.id, !params.rowNode.childrenExpanded);\n    }\n  }, [apiRef, props.rowGroupingColumnMode]);\n  const checkGroupingColumnsModelDiff = React.useCallback(() => {\n    const sanitizedRowGroupingModel = gridRowGroupingSanitizedModelSelector(apiRef);\n    const rulesOnLastRowTreeCreation = apiRef.current.caches.rowGrouping.rulesOnLastRowTreeCreation || [];\n    const groupingRules = getGroupingRules({\n      sanitizedRowGroupingModel,\n      columnsLookup: gridColumnLookupSelector(apiRef)\n    });\n    if (!areGroupingRulesEqual(rulesOnLastRowTreeCreation, groupingRules)) {\n      apiRef.current.caches.rowGrouping.rulesOnLastRowTreeCreation = groupingRules;\n      apiRef.current.requestPipeProcessorsApplication('hydrateColumns');\n      setStrategyAvailability(apiRef, props.disableRowGrouping);\n\n      // Refresh the row tree creation strategy processing\n      // TODO: Add a clean way to re-run a strategy processing without publishing a private event\n      if (apiRef.current.getActiveStrategy('rowTree') === ROW_GROUPING_STRATEGY) {\n        apiRef.current.publishEvent('activeStrategyProcessorChange', 'rowTreeCreation');\n      }\n    }\n  }, [apiRef, props.disableRowGrouping]);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'columnsChange', checkGroupingColumnsModelDiff);\n  useGridApiEventHandler(apiRef, 'rowGroupingModelChange', checkGroupingColumnsModelDiff);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.rowGroupingModel !== undefined) {\n      apiRef.current.setRowGroupingModel(props.rowGroupingModel);\n    }\n  }, [apiRef, props.rowGroupingModel]);\n};", "import { gridColumnLookupSelector } from '@mui/x-data-grid-pro';\nimport { createSelector, createSelectorMemoized } from '@mui/x-data-grid/internals';\nconst gridRowGroupingStateSelector = state => state.rowGrouping;\nexport const gridRowGroupingModelSelector = createSelector(gridRowGroupingStateSelector, rowGrouping => rowGrouping.model);\nexport const gridRowGroupingSanitizedModelSelector = createSelectorMemoized(gridRowGroupingModelSelector, gridColumnLookupSelector, (model, columnsLookup) => model.filter(field => !!columnsLookup[field]));", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { passFilterLogic } from '@mui/x-data-grid-pro/internals';\nimport { gridRowGroupingSanitizedModelSelector } from './gridRowGroupingSelector';\nexport const GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD = '__row_group_by_columns_group__';\nexport const ROW_GROUPING_STRATEGY = 'grouping-columns';\nexport const getRowGroupingFieldFromGroupingCriteria = groupingCriteria => {\n  if (groupingCriteria === null) {\n    return GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD;\n  }\n  return `__row_group_by_columns_group_${groupingCriteria}__`;\n};\nexport const getRowGroupingCriteriaFromGroupingField = groupingColDefField => {\n  const match = groupingColDefField.match(/^__row_group_by_columns_group_(.*)__$/);\n  if (!match) {\n    return null;\n  }\n  return match[1];\n};\nexport const isGroupingColumn = field => field === GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD || getRowGroupingCriteriaFromGroupingField(field) !== null;\n/**\n * When filtering a group, we only want to filter according to the items related to this grouping column.\n */\nconst shouldApplyFilterItemOnGroup = (columnField, node) => {\n  if (columnField === GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD) {\n    return true;\n  }\n  const groupingCriteriaField = getRowGroupingCriteriaFromGroupingField(columnField);\n  return groupingCriteriaField === node.groupingField;\n};\n\n/**\n * A leaf is visible if it passed the filter\n * A group is visible if all the following criteria are met:\n * - One of its children is passing the filter\n * - It is passing the filter\n */\nexport const filterRowTreeFromGroupingColumns = params => {\n  const {\n    apiRef,\n    rowTree,\n    isRowMatchingFilters,\n    filterModel\n  } = params;\n  const filteredRowsLookup = {};\n  const filteredDescendantCountLookup = {};\n  const filterCache = {};\n  const filterTreeNode = (node, areAncestorsExpanded, ancestorsResults) => {\n    const filterResults = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    let isPassingFiltering = false;\n    if (isRowMatchingFilters && node.type !== 'footer') {\n      const shouldApplyItem = node.type === 'group' && node.isAutoGenerated ? columnField => shouldApplyFilterItemOnGroup(columnField, node) : undefined;\n      const row = apiRef.current.getRow(node.id);\n      isRowMatchingFilters(row, shouldApplyItem, filterResults);\n    } else {\n      isPassingFiltering = true;\n    }\n    let filteredDescendantCount = 0;\n    if (node.type === 'group') {\n      node.children.forEach(childId => {\n        const childNode = rowTree[childId];\n        const childSubTreeSize = filterTreeNode(childNode, areAncestorsExpanded && !!node.childrenExpanded, [...ancestorsResults, filterResults]);\n        filteredDescendantCount += childSubTreeSize;\n      });\n    }\n    if (isPassingFiltering === false) {\n      if (node.type === 'group') {\n        // If node has children - it's passing if at least one child passes filters\n        isPassingFiltering = filteredDescendantCount > 0;\n      } else {\n        const allResults = [...ancestorsResults, filterResults];\n        isPassingFiltering = passFilterLogic(allResults.map(result => result.passingFilterItems), allResults.map(result => result.passingQuickFilterValues), filterModel, params.apiRef, filterCache);\n      }\n    }\n    filteredRowsLookup[node.id] = isPassingFiltering;\n    if (!isPassingFiltering) {\n      return 0;\n    }\n    filteredDescendantCountLookup[node.id] = filteredDescendantCount;\n    if (node.type !== 'group') {\n      return filteredDescendantCount + 1;\n    }\n    return filteredDescendantCount;\n  };\n  const nodes = Object.values(rowTree);\n  for (let i = 0; i < nodes.length; i += 1) {\n    const node = nodes[i];\n    if (node.depth === 0) {\n      filterTreeNode(node, true, []);\n    }\n  }\n  return {\n    filteredRowsLookup,\n    filteredDescendantCountLookup\n  };\n};\nexport const getColDefOverrides = (groupingColDefProp, fields) => {\n  if (typeof groupingColDefProp === 'function') {\n    return groupingColDefProp({\n      groupingName: ROW_GROUPING_STRATEGY,\n      fields\n    });\n  }\n  return groupingColDefProp;\n};\nexport const mergeStateWithRowGroupingModel = rowGroupingModel => state => _extends({}, state, {\n  rowGrouping: _extends({}, state.rowGrouping, {\n    model: rowGroupingModel\n  })\n});\nexport const setStrategyAvailability = (privateApiRef, disableRowGrouping) => {\n  let isAvailable;\n  if (disableRowGrouping) {\n    isAvailable = () => false;\n  } else {\n    isAvailable = () => {\n      const rowGroupingSanitizedModel = gridRowGroupingSanitizedModelSelector(privateApiRef);\n      return rowGroupingSanitizedModel.length > 0;\n    };\n  }\n  privateApiRef.current.setStrategyAvailability('rowTree', ROW_GROUPING_STRATEGY, isAvailable);\n};\nexport const getCellGroupingCriteria = ({\n  row,\n  colDef,\n  groupingRule,\n  apiRef\n}) => {\n  let key;\n  if (groupingRule.groupingValueGetter) {\n    key = groupingRule.groupingValueGetter(row[groupingRule.field], row, colDef, apiRef);\n  } else {\n    key = row[groupingRule.field];\n  }\n  return {\n    key,\n    field: groupingRule.field\n  };\n};\nexport const getGroupingRules = ({\n  sanitizedRowGroupingModel,\n  columnsLookup\n}) => sanitizedRowGroupingModel.map(field => ({\n  field,\n  groupingValueGetter: columnsLookup[field]?.groupingValueGetter\n}));\n\n/**\n * Compares two sets of grouping rules to determine if they are equal or not.\n */\nexport const areGroupingRulesEqual = (newValue, previousValue) => {\n  if (previousValue.length !== newValue.length) {\n    return false;\n  }\n  return newValue.every((newRule, newRuleIndex) => {\n    const previousRule = previousValue[newRuleIndex];\n    if (previousRule.groupingValueGetter !== newRule.groupingValueGetter) {\n      return false;\n    }\n    if (previousRule.field !== newRule.field) {\n      return false;\n    }\n    return true;\n  });\n};", "import * as React from 'react';\nimport { gridColumnLookupSelector, gridRowTreeSelector, useFirstRender, GRID_CHECKBOX_SELECTION_FIELD } from '@mui/x-data-grid-pro';\nimport { useGridRegisterPipeProcessor, useGridRegisterStrategyProcessor, sortRowTree, createRowTree, updateRowTree, getVisibleRowsLookup } from '@mui/x-data-grid-pro/internals';\nimport { gridRowGroupingModelSelector, gridRowGroupingSanitizedModelSelector } from './gridRowGroupingSelector';\nimport { createGroupingColDefForAllGroupingCriteria, createGroupingColDefForOneGroupingCriteria } from './createGroupingColDef';\nimport { filterRowTreeFromGroupingColumns, getColDefOverrides, ROW_GROUPING_STRATEGY, isGroupingColumn, setStrategyAvailability, getCellGroupingCriteria, getGroupingRules } from './gridRowGroupingUtils';\nexport const useGridRowGroupingPreProcessors = (apiRef, props) => {\n  const getGroupingColDefs = React.useCallback(columnsState => {\n    if (props.disableRowGrouping) {\n      return [];\n    }\n    const groupingColDefProp = props.groupingColDef;\n\n    // We can't use `gridGroupingRowsSanitizedModelSelector` here because the new columns are not in the state yet\n    const rowGroupingModel = gridRowGroupingModelSelector(apiRef).filter(field => !!columnsState.lookup[field]);\n    if (rowGroupingModel.length === 0) {\n      return [];\n    }\n    switch (props.rowGroupingColumnMode) {\n      case 'single':\n        {\n          return [createGroupingColDefForAllGroupingCriteria({\n            apiRef,\n            rowGroupingModel,\n            colDefOverride: getColDefOverrides(groupingColDefProp, rowGroupingModel),\n            columnsLookup: columnsState.lookup\n          })];\n        }\n      case 'multiple':\n        {\n          return rowGroupingModel.map(groupingCriteria => createGroupingColDefForOneGroupingCriteria({\n            groupingCriteria,\n            colDefOverride: getColDefOverrides(groupingColDefProp, [groupingCriteria]),\n            groupedByColDef: columnsState.lookup[groupingCriteria],\n            columnsLookup: columnsState.lookup\n          }));\n        }\n      default:\n        {\n          return [];\n        }\n    }\n  }, [apiRef, props.groupingColDef, props.rowGroupingColumnMode, props.disableRowGrouping]);\n  const updateGroupingColumn = React.useCallback(columnsState => {\n    const groupingColDefs = getGroupingColDefs(columnsState);\n    let newColumnFields = [];\n    const newColumnsLookup = {};\n\n    // We only keep the non-grouping columns\n    columnsState.orderedFields.forEach(field => {\n      if (!isGroupingColumn(field)) {\n        newColumnFields.push(field);\n        newColumnsLookup[field] = columnsState.lookup[field];\n      }\n    });\n\n    // We add the grouping column\n    groupingColDefs.forEach(groupingColDef => {\n      const matchingGroupingColDef = columnsState.lookup[groupingColDef.field];\n      if (matchingGroupingColDef) {\n        groupingColDef.width = matchingGroupingColDef.width;\n        groupingColDef.flex = matchingGroupingColDef.flex;\n      }\n      newColumnsLookup[groupingColDef.field] = groupingColDef;\n    });\n    const startIndex = newColumnFields[0] === GRID_CHECKBOX_SELECTION_FIELD ? 1 : 0;\n    newColumnFields = [...newColumnFields.slice(0, startIndex), ...groupingColDefs.map(colDef => colDef.field), ...newColumnFields.slice(startIndex)];\n    columnsState.orderedFields = newColumnFields;\n    columnsState.lookup = newColumnsLookup;\n    return columnsState;\n  }, [getGroupingColDefs]);\n  const createRowTreeForRowGrouping = React.useCallback(params => {\n    const sanitizedRowGroupingModel = gridRowGroupingSanitizedModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const groupingRules = getGroupingRules({\n      sanitizedRowGroupingModel,\n      columnsLookup\n    });\n    apiRef.current.caches.rowGrouping.rulesOnLastRowTreeCreation = groupingRules;\n    const getRowTreeBuilderNode = rowId => {\n      const row = params.dataRowIdToModelLookup[rowId];\n      const parentPath = groupingRules.map(groupingRule => getCellGroupingCriteria({\n        row,\n        groupingRule,\n        colDef: columnsLookup[groupingRule.field],\n        apiRef\n      })).filter(cell => cell.key != null);\n      const leafGroupingCriteria = {\n        key: rowId.toString(),\n        field: null\n      };\n      return {\n        path: [...parentPath, leafGroupingCriteria],\n        id: rowId\n      };\n    };\n    if (params.updates.type === 'full') {\n      return createRowTree({\n        previousTree: params.previousTree,\n        nodes: params.updates.rows.map(getRowTreeBuilderNode),\n        defaultGroupingExpansionDepth: props.defaultGroupingExpansionDepth,\n        isGroupExpandedByDefault: props.isGroupExpandedByDefault,\n        groupingName: ROW_GROUPING_STRATEGY\n      });\n    }\n    return updateRowTree({\n      nodes: {\n        inserted: params.updates.actions.insert.map(getRowTreeBuilderNode),\n        modified: params.updates.actions.modify.map(getRowTreeBuilderNode),\n        removed: params.updates.actions.remove\n      },\n      previousTree: params.previousTree,\n      previousTreeDepth: params.previousTreeDepths,\n      defaultGroupingExpansionDepth: props.defaultGroupingExpansionDepth,\n      isGroupExpandedByDefault: props.isGroupExpandedByDefault,\n      groupingName: ROW_GROUPING_STRATEGY\n    });\n  }, [apiRef, props.defaultGroupingExpansionDepth, props.isGroupExpandedByDefault]);\n  const filterRows = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    return filterRowTreeFromGroupingColumns({\n      rowTree,\n      isRowMatchingFilters: params.isRowMatchingFilters,\n      filterModel: params.filterModel,\n      apiRef\n    });\n  }, [apiRef]);\n  const sortRows = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    return sortRowTree({\n      rowTree,\n      sortRowList: params.sortRowList,\n      disableChildrenSorting: false,\n      shouldRenderGroupBelowLeaves: true\n    });\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateGroupingColumn);\n  useGridRegisterStrategyProcessor(apiRef, ROW_GROUPING_STRATEGY, 'rowTreeCreation', createRowTreeForRowGrouping);\n  useGridRegisterStrategyProcessor(apiRef, ROW_GROUPING_STRATEGY, 'filtering', filterRows);\n  useGridRegisterStrategyProcessor(apiRef, ROW_GROUPING_STRATEGY, 'sorting', sortRows);\n  useGridRegisterStrategyProcessor(apiRef, ROW_GROUPING_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    setStrategyAvailability(apiRef, props.disableRowGrouping);\n  });\n\n  /**\n   * EFFECTS\n   */\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (!isFirstRender.current) {\n      setStrategyAvailability(apiRef, props.disableRowGrouping);\n    } else {\n      isFirstRender.current = false;\n    }\n  }, [apiRef, props.disableRowGrouping]);\n};", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"leafField\", \"mainGroupingCriteria\", \"hideDescendantCount\"],\n  _excluded2 = [\"leafField\", \"mainGroupingCriteria\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport { GRID_STRING_COL_DEF } from '@mui/x-data-grid-pro';\nimport { isSingleSelectColDef } from '@mui/x-data-grid-pro/internals';\nimport { GridGroupingColumnFooterCell } from '../../../components/GridGroupingColumnFooterCell';\nimport { GridGroupingCriteriaCell } from '../../../components/GridGroupingCriteriaCell';\nimport { GridGroupingColumnLeafCell } from '../../../components/GridGroupingColumnLeafCell';\nimport { getRowGroupingFieldFromGroupingCriteria, GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD } from './gridRowGroupingUtils';\nimport { gridRowGroupingSanitizedModelSelector } from './gridRowGroupingSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GROUPING_COL_DEF_DEFAULT_PROPERTIES = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'custom',\n  disableReorder: true\n});\nconst GROUPING_COL_DEF_FORCED_PROPERTIES = {\n  editable: false,\n  groupable: false\n};\n\n/**\n * When sorting two cells with different grouping criteria, we consider that the cell with the grouping criteria coming first in the model should be displayed below.\n * This can occur when some rows don't have all the fields. In which case we want the rows with the missing field to be displayed above.\n * TODO: Make this index comparator depth invariant, the logic should not be inverted when sorting in the \"desc\" direction (but the current return format of `sortComparator` does not support this behavior).\n */\nconst groupingFieldIndexComparator = (v1, v2, cellParams1, cellParams2) => {\n  const model = gridRowGroupingSanitizedModelSelector(cellParams1.api.state, cellParams1.api.instanceId);\n  const groupingField1 = cellParams1.rowNode.groupingField ?? null;\n  const groupingField2 = cellParams2.rowNode.groupingField ?? null;\n  if (groupingField1 === groupingField2) {\n    return 0;\n  }\n  if (groupingField1 == null) {\n    return -1;\n  }\n  if (groupingField2 == null) {\n    return 1;\n  }\n  if (model.indexOf(groupingField1) < model.indexOf(groupingField2)) {\n    return -1;\n  }\n  return 1;\n};\nconst getLeafProperties = leafColDef => ({\n  headerName: leafColDef.headerName ?? leafColDef.field,\n  sortable: leafColDef.sortable,\n  filterable: leafColDef.filterable,\n  valueOptions: isSingleSelectColDef(leafColDef) ? leafColDef.valueOptions : undefined,\n  filterOperators: leafColDef.filterOperators,\n  sortComparator: (v1, v2, cellParams1, cellParams2) => {\n    // We only want to sort the leaves\n    if (cellParams1.rowNode.type === 'leaf' && cellParams2.rowNode.type === 'leaf') {\n      return leafColDef.sortComparator(v1, v2, cellParams1, cellParams2);\n    }\n    return groupingFieldIndexComparator(v1, v2, cellParams1, cellParams2);\n  }\n});\nconst getGroupingCriteriaProperties = (groupedByColDef, applyHeaderName) => {\n  const properties = {\n    sortable: groupedByColDef.sortable,\n    filterable: groupedByColDef.filterable,\n    valueOptions: isSingleSelectColDef(groupedByColDef) ? groupedByColDef.valueOptions : undefined,\n    sortComparator: (v1, v2, cellParams1, cellParams2) => {\n      // We only want to sort the groups of the current grouping criteria\n      if (cellParams1.rowNode.type === 'group' && cellParams2.rowNode.type === 'group' && cellParams1.rowNode.groupingField === cellParams2.rowNode.groupingField) {\n        const colDef = cellParams1.api.getColumn(cellParams1.rowNode.groupingField);\n        return colDef.sortComparator(v1, v2, cellParams1, cellParams2);\n      }\n      return groupingFieldIndexComparator(v1, v2, cellParams1, cellParams2);\n    },\n    filterOperators: groupedByColDef.filterOperators\n  };\n  if (applyHeaderName) {\n    properties.headerName = groupedByColDef.headerName ?? groupedByColDef.field;\n  }\n  return properties;\n};\n/**\n * Creates the `GridColDef` for a grouping column that only takes care of a single grouping criteria\n */\nexport const createGroupingColDefForOneGroupingCriteria = ({\n  columnsLookup,\n  groupedByColDef,\n  groupingCriteria,\n  colDefOverride\n}) => {\n  const _ref = colDefOverride ?? {},\n    {\n      leafField,\n      mainGroupingCriteria,\n      hideDescendantCount\n    } = _ref,\n    colDefOverrideProperties = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const leafColDef = leafField ? columnsLookup[leafField] : null;\n\n  // The properties that do not depend on the presence of a `leafColDef` and that can be overridden by `colDefOverride`\n  const commonProperties = {\n    width: Math.max((groupedByColDef.width ?? GRID_STRING_COL_DEF.width) + 40, leafColDef?.width ?? 0),\n    renderCell: params => {\n      // Render footer\n      if (params.rowNode.type === 'footer' || params.rowNode.type === 'pinnedRow') {\n        return /*#__PURE__*/_jsx(GridGroupingColumnFooterCell, _extends({}, params));\n      }\n\n      // Render leaves\n      if (params.rowNode.type === 'leaf') {\n        if (leafColDef) {\n          const leafParams = _extends({}, params.api.getCellParams(params.id, leafField), {\n            api: params.api,\n            hasFocus: params.hasFocus\n          });\n          if (leafColDef.renderCell) {\n            return leafColDef.renderCell(leafParams);\n          }\n          return /*#__PURE__*/_jsx(GridGroupingColumnLeafCell, _extends({}, leafParams));\n        }\n        return '';\n      }\n\n      // Render current grouping criteria groups\n      if (params.rowNode.groupingField === groupingCriteria) {\n        return /*#__PURE__*/_jsx(GridGroupingCriteriaCell, _extends({}, params, {\n          hideDescendantCount: hideDescendantCount\n        }));\n      }\n      return '';\n    },\n    valueGetter: (value, row, column, apiRef) => {\n      const rowId = apiRef.current.getRowId(row);\n      const rowNode = apiRef.current.getRowNode(rowId);\n      if (!rowNode || rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n        return undefined;\n      }\n      if (rowNode.type === 'leaf') {\n        if (leafColDef) {\n          return apiRef.current.getCellValue(rowId, leafField);\n        }\n        return undefined;\n      }\n      if (rowNode.groupingField === groupingCriteria) {\n        return rowNode.groupingKey;\n      }\n      return undefined;\n    }\n  };\n\n  // If we have a `mainGroupingCriteria` defined and matching the `groupingCriteria`\n  // Then we apply the sorting / filtering on the groups of this column's grouping criteria based on the properties of `groupedByColDef`.\n  // It can be useful to define a `leafField` for leaves rendering but still use the grouping criteria for the sorting / filtering\n  //\n  // If we have a `leafField` defined and matching an existing column\n  // Then we apply the sorting / filtering on the leaves based on the properties of `leavesColDef`\n  //\n  // By default, we apply the sorting / filtering on the groups of this column's grouping criteria based on the properties of `groupedColDef`.\n  let sourceProperties;\n  if (mainGroupingCriteria && mainGroupingCriteria === groupingCriteria) {\n    sourceProperties = getGroupingCriteriaProperties(groupedByColDef, true);\n  } else if (leafColDef) {\n    sourceProperties = getLeafProperties(leafColDef);\n  } else {\n    sourceProperties = getGroupingCriteriaProperties(groupedByColDef, true);\n  }\n\n  // The properties that can't be overridden with `colDefOverride`\n  const forcedProperties = _extends({\n    field: getRowGroupingFieldFromGroupingCriteria(groupingCriteria)\n  }, GROUPING_COL_DEF_FORCED_PROPERTIES);\n  return _extends({}, GROUPING_COL_DEF_DEFAULT_PROPERTIES, commonProperties, sourceProperties, colDefOverrideProperties, forcedProperties);\n};\n/**\n * Creates the `GridColDef` for a grouping column that takes care of all the grouping criteria\n */\nexport const createGroupingColDefForAllGroupingCriteria = ({\n  apiRef,\n  columnsLookup,\n  rowGroupingModel,\n  colDefOverride\n}) => {\n  const _ref2 = colDefOverride ?? {},\n    {\n      leafField,\n      mainGroupingCriteria,\n      hideDescendantCount\n    } = _ref2,\n    colDefOverrideProperties = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n  const leafColDef = leafField ? columnsLookup[leafField] : null;\n\n  // The properties that do not depend on the presence of a `leafColDef` and that can be overridden by `colDefOverride`\n  const commonProperties = {\n    headerName: apiRef.current.getLocaleText('groupingColumnHeaderName'),\n    width: Math.max(...rowGroupingModel.map(field => (columnsLookup[field].width ?? GRID_STRING_COL_DEF.width) + 40), leafColDef?.width ?? 0),\n    renderCell: params => {\n      // Render footer\n      if (params.rowNode.type === 'footer' || params.rowNode.type === 'pinnedRow') {\n        return /*#__PURE__*/_jsx(GridGroupingColumnFooterCell, _extends({}, params));\n      }\n\n      // Render the leaves\n      if (params.rowNode.type === 'leaf') {\n        if (leafColDef) {\n          const leafParams = _extends({}, params.api.getCellParams(params.id, leafField), {\n            api: params.api,\n            hasFocus: params.hasFocus\n          });\n          if (leafColDef.renderCell) {\n            return leafColDef.renderCell(leafParams);\n          }\n          return /*#__PURE__*/_jsx(GridGroupingColumnLeafCell, _extends({}, leafParams));\n        }\n        return '';\n      }\n\n      // Render the groups\n      return /*#__PURE__*/_jsx(GridGroupingCriteriaCell, _extends({}, params, {\n        hideDescendantCount: hideDescendantCount\n      }));\n    },\n    valueGetter: (value, row) => {\n      const rowId = apiRef.current.getRowId(row);\n      const rowNode = apiRef.current.getRowNode(rowId);\n      if (!rowNode || rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n        return undefined;\n      }\n      if (rowNode.type === 'leaf') {\n        if (leafColDef) {\n          return apiRef.current.getCellValue(rowId, leafField);\n        }\n        return undefined;\n      }\n      return rowNode.groupingKey;\n    }\n  };\n\n  // If we have a `mainGroupingCriteria` defined and matching one of the `orderedGroupedByFields`\n  // Then we apply the sorting / filtering on the groups of this column's grouping criteria based on the properties of `columnsLookup[mainGroupingCriteria]`.\n  // It can be useful to use another grouping criteria than the top level one for the sorting / filtering\n  //\n  // If we have a `leafField` defined and matching an existing column\n  // Then we apply the sorting / filtering on the leaves based on the properties of `leavesColDef`\n  //\n  // By default, we apply the sorting / filtering on the groups of the top level grouping criteria based on the properties of `columnsLookup[orderedGroupedByFields[0]]`.\n  let sourceProperties;\n  if (mainGroupingCriteria && rowGroupingModel.includes(mainGroupingCriteria)) {\n    sourceProperties = getGroupingCriteriaProperties(columnsLookup[mainGroupingCriteria], true);\n  } else if (leafColDef) {\n    sourceProperties = getLeafProperties(leafColDef);\n  } else {\n    sourceProperties = getGroupingCriteriaProperties(columnsLookup[rowGroupingModel[0]], rowGroupingModel.length === 1);\n  }\n\n  // The properties that can't be overridden with `colDefOverride`\n  const forcedProperties = _extends({\n    field: GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD\n  }, GROUPING_COL_DEF_FORCED_PROPERTIES);\n  return _extends({}, GROUPING_COL_DEF_DEFAULT_PROPERTIES, commonProperties, sourceProperties, colDefOverrideProperties, forcedProperties);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { GridFooterCell } from './GridFooterCell';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridGroupingColumnFooterCell(props) {\n  const rootProps = useGridRootProps();\n  const sx = {\n    ml: 0\n  };\n  if (props.rowNode.parent == null) {\n    sx.ml = 0;\n  } else if (rootProps.rowGroupingColumnMode === 'multiple') {\n    sx.ml = 2;\n  } else {\n    sx.ml = theme => `calc(var(--DataGrid-cellOffsetMultiplier) * ${theme.spacing(props.rowNode.depth)})`;\n  }\n  return /*#__PURE__*/_jsx(GridFooterCell, _extends({\n    sx: sx\n  }, props));\n}\nexport { GridGroupingColumnFooterCell };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport Box from '@mui/material/Box';\nimport { useGridSelector, gridFilteredDescendantCountLookupSelector, getDataGridUtilityClass } from '@mui/x-data-grid-pro';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['groupingCriteriaCell'],\n    toggle: ['groupingCriteriaCellToggle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport function GridGroupingCriteriaCell(props) {\n  const {\n    id,\n    field,\n    rowNode,\n    hideDescendantCount,\n    formattedValue\n  } = props;\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const filteredDescendantCountLookup = useGridSelector(apiRef, gridFilteredDescendantCountLookupSelector);\n  const filteredDescendantCount = filteredDescendantCountLookup[rowNode.id] ?? 0;\n  const Icon = rowNode.childrenExpanded ? rootProps.slots.groupingCriteriaCollapseIcon : rootProps.slots.groupingCriteriaExpandIcon;\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid unfolding the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n    apiRef.current.publishEvent('cellKeyDown', props, event);\n  };\n  const handleClick = event => {\n    apiRef.current.setRowChildrenExpansion(id, !rowNode.childrenExpanded);\n    apiRef.current.setCellFocus(id, field);\n    event.stopPropagation();\n  };\n  let cellContent;\n  const colDef = apiRef.current.getColumn(rowNode.groupingField);\n  if (typeof colDef.renderCell === 'function') {\n    cellContent = colDef.renderCell(props);\n  } else if (typeof formattedValue !== 'undefined') {\n    cellContent = /*#__PURE__*/_jsx(\"span\", {\n      children: formattedValue\n    });\n  } else {\n    cellContent = /*#__PURE__*/_jsx(\"span\", {\n      children: rowNode.groupingKey\n    });\n  }\n  return /*#__PURE__*/_jsxs(Box, {\n    className: classes.root,\n    sx: {\n      ml: rootProps.rowGroupingColumnMode === 'multiple' ? 0 : theme => `calc(var(--DataGrid-cellOffsetMultiplier) * ${theme.spacing(rowNode.depth)})`\n    },\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: classes.toggle,\n      children: filteredDescendantCount > 0 && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        size: \"small\",\n        onClick: handleClick,\n        onKeyDown: handleKeyDown,\n        tabIndex: -1,\n        \"aria-label\": rowNode.childrenExpanded ? apiRef.current.getLocaleText('treeDataCollapse') : apiRef.current.getLocaleText('treeDataExpand')\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(Icon, {\n          fontSize: \"inherit\"\n        })\n      }))\n    }), cellContent, !hideDescendantCount && filteredDescendantCount > 0 ? /*#__PURE__*/_jsxs(\"span\", {\n      style: {\n        whiteSpace: 'pre'\n      },\n      children: [\" (\", filteredDescendantCount, \")\"]\n    }) : null]\n  });\n}", "import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridGroupingColumnLeafCell(props) {\n  const {\n    rowNode\n  } = props;\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(Box, {\n    sx: {\n      ml: rootProps.rowGroupingColumnMode === 'multiple' ? 1 : theme => `calc(var(--DataGrid-cellOffsetMultiplier) * ${theme.spacing(rowNode.depth)})`\n    },\n    children: props.formattedValue ?? props.value\n  });\n}\nexport { GridGroupingColumnLeafCell };", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"worker\", \"exceljsPostProcess\", \"exceljsPreProcess\", \"columnsStyles\", \"includeHeaders\", \"getRowsToExport\", \"valueOptionsSheetName\"];\nimport * as React from 'react';\nimport { useGridApiMethod, useGridLogger, useGridApiOptionHandler } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor, exportAs, getColumnsToExport, defaultGetRowsToExport } from '@mui/x-data-grid/internals';\nimport { buildExcel, getDataForValueOptionsSheet, serializeColumns, serializeRow } from './serializer/excelSerializer';\nimport { GridExcelExportMenuItem } from '../../../components';\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const useGridExcelExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridExcelExport');\n  const getDataAsExcel = React.useCallback((options = {}) => {\n    logger.debug(`Get data as excel`);\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    return buildExcel({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      includeHeaders: options.includeHeaders ?? true,\n      includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n      valueOptionsSheetName: options?.valueOptionsSheetName || 'Options',\n      columnsStyles: options?.columnsStyles,\n      exceljsPreProcess: options?.exceljsPreProcess,\n      exceljsPostProcess: options?.exceljsPostProcess,\n      escapeFormulas: options.escapeFormulas ?? true\n    }, apiRef.current);\n  }, [logger, apiRef]);\n  const exportDataAsExcel = React.useCallback(async (options = {}) => {\n    const {\n        worker: workerFn,\n        exceljsPostProcess,\n        exceljsPreProcess,\n        getRowsToExport = defaultGetRowsToExport,\n        valueOptionsSheetName = 'Options'\n      } = options,\n      cloneableOptions = _objectWithoutPropertiesLoose(options, _excluded);\n    const sendExcelToUser = buffer => {\n      const blob = new Blob([buffer], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      });\n      exportAs(blob, 'xlsx', options?.fileName);\n    };\n    if (!workerFn) {\n      apiRef.current.publishEvent('excelExportStateChange', 'pending');\n      const workbook = await getDataAsExcel(options);\n      if (workbook === null) {\n        return;\n      }\n      const content = await workbook.xlsx.writeBuffer();\n      apiRef.current.publishEvent('excelExportStateChange', 'finished');\n      sendExcelToUser(content);\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (exceljsPostProcess) {\n        console.warn([`MUI X: The exceljsPostProcess option is not supported when a web worker is used.`, 'As alternative, pass the callback to the same option in setupExcelExportWebWorker.'].join('\\n'));\n      }\n      if (exceljsPreProcess) {\n        console.warn([`MUI X: The exceljsPreProcess option is not supported when a web worker is used.`, 'As alternative, pass the callback to the same option in setupExcelExportWebWorker.'].join('\\n'));\n      }\n    }\n    const worker = workerFn();\n    apiRef.current.publishEvent('excelExportStateChange', 'pending');\n    worker.onmessage = async event => {\n      sendExcelToUser(event.data);\n      apiRef.current.publishEvent('excelExportStateChange', 'finished');\n      worker.terminate();\n    };\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const valueOptionsData = await getDataForValueOptionsSheet(exportedColumns, valueOptionsSheetName, apiRef.current);\n    const serializedColumns = serializeColumns(exportedColumns, options.columnsStyles || {});\n    const serializedRows = exportedRowIds.map(id => serializeRow(id, exportedColumns, apiRef.current, valueOptionsData, {\n      escapeFormulas: options.escapeFormulas ?? true\n    }));\n    const columnGroupPaths = exportedColumns.reduce((acc, column) => {\n      acc[column.field] = apiRef.current.getColumnGroupPath(column.field);\n      return acc;\n    }, {});\n    const message = {\n      serializedColumns,\n      serializedRows,\n      valueOptionsData,\n      columnGroupPaths,\n      columnGroupDetails: apiRef.current.getAllGroupDetails(),\n      options: cloneableOptions,\n      valueOptionsSheetName\n    };\n    worker.postMessage(message);\n  }, [apiRef, getDataAsExcel]);\n  const excelExportApi = {\n    getDataAsExcel,\n    exportDataAsExcel\n  };\n  useGridApiMethod(apiRef, excelExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.excelOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridExcelExportMenuItem, {\n        options: options.excelOptions\n      }),\n      componentName: 'excelExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n  useGridApiOptionHandler(apiRef, 'excelExportStateChange', props.onExcelExportStateChange);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from '@mui/x-data-grid-pro';\nimport { buildWarning, isObject, isSingleSelectColDef } from '@mui/x-data-grid/internals';\nconst getExcelJs = async () => {\n  const excelJsModule = await import('exceljs');\n  return excelJsModule.default ?? excelJsModule;\n};\nconst warnInvalidFormattedValue = buildWarning(['MUI X: When the value of a field is an object or a `renderCell` is provided, the Excel export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\nconst getFormattedValueOptions = (colDef, row, valueOptions, api) => {\n  if (!colDef.valueOptions) {\n    return [];\n  }\n  let valueOptionsFormatted = valueOptions;\n  if (colDef.valueFormatter) {\n    valueOptionsFormatted = valueOptionsFormatted.map(option => {\n      if (typeof option === 'object') {\n        return option;\n      }\n      return String(colDef.valueFormatter(option, row, colDef, {\n        current: api\n      }));\n    });\n  }\n  return valueOptionsFormatted.map(option => typeof option === 'object' ? option.label : option);\n};\nexport const serializeRow = (id, columns, api, defaultValueOptionsFormulae, options) => {\n  const row = {};\n  const dataValidation = {};\n  const mergedCells = [];\n  const firstCellParams = api.getCellParams(id, columns[0].field);\n  const outlineLevel = firstCellParams.rowNode.depth;\n\n  // `colSpan` is only calculated for rendered rows, so we need to calculate it during export for every row\n  api.calculateColSpan({\n    rowId: id,\n    minFirstColumn: 0,\n    maxLastColumn: columns.length,\n    columns\n  });\n  columns.forEach((column, colIndex) => {\n    const colSpanInfo = api.unstable_getCellColSpanInfo(id, colIndex);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      return;\n    }\n    if (colSpanInfo && colSpanInfo.cellProps.colSpan > 1) {\n      mergedCells.push({\n        leftIndex: colIndex + 1,\n        rightIndex: colIndex + colSpanInfo.cellProps.colSpan\n      });\n    }\n    const cellParams = api.getCellParams(id, column.field);\n    let cellValue;\n    switch (cellParams.colDef.type) {\n      case 'singleSelect':\n        {\n          const castColumn = cellParams.colDef;\n          if (typeof castColumn.valueOptions === 'function') {\n            // If value option depends on the row, set specific options to the cell\n            // This dataValidation is buggy with LibreOffice and does not allow to have coma\n            const valueOptions = castColumn.valueOptions({\n              id,\n              row,\n              field: cellParams.field\n            });\n            const formattedValueOptions = getFormattedValueOptions(castColumn, row, valueOptions, api);\n            dataValidation[castColumn.field] = {\n              type: 'list',\n              allowBlank: true,\n              formulae: [`\"${formattedValueOptions.map(x => x.toString().replaceAll(',', 'CHAR(44)')).join(',')}\"`]\n            };\n          } else {\n            const address = defaultValueOptionsFormulae[column.field].address;\n\n            // If value option is defined for the column, refer to another sheet\n            dataValidation[castColumn.field] = {\n              type: 'list',\n              allowBlank: true,\n              formulae: [address]\n            };\n          }\n          const formattedValue = api.getCellParams(id, castColumn.field).formattedValue;\n          if (process.env.NODE_ENV !== 'production') {\n            if (String(cellParams.formattedValue) === '[object Object]') {\n              warnInvalidFormattedValue();\n            }\n          }\n          if (isObject(formattedValue)) {\n            row[castColumn.field] = formattedValue?.label;\n          } else {\n            row[castColumn.field] = formattedValue;\n          }\n          break;\n        }\n      case 'boolean':\n      case 'number':\n        cellValue = api.getCellParams(id, column.field).value;\n        break;\n      case 'date':\n      case 'dateTime':\n        {\n          // Excel does not do any timezone conversion, so we create a date using UTC instead of local timezone\n          // Solution from: https://github.com/exceljs/exceljs/issues/486#issuecomment-432557582\n          // About Date.UTC(): https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/UTC#exemples\n          const value = api.getCellParams(id, column.field).value;\n          // value may be `undefined` in auto-generated grouping rows\n          if (!value) {\n            break;\n          }\n          const utcDate = new Date(Date.UTC(value.getFullYear(), value.getMonth(), value.getDate(), value.getHours(), value.getMinutes(), value.getSeconds()));\n          row[column.field] = utcDate;\n          break;\n        }\n      case 'actions':\n        break;\n      default:\n        cellValue = api.getCellParams(id, column.field).formattedValue;\n        if (process.env.NODE_ENV !== 'production') {\n          if (String(cellParams.formattedValue) === '[object Object]') {\n            warnInvalidFormattedValue();\n          }\n        }\n        break;\n    }\n    if (typeof cellValue === 'string' && options.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(cellValue[0])) {\n        cellValue = `'${cellValue}`;\n      }\n    }\n    if (typeof cellValue !== 'undefined') {\n      row[column.field] = cellValue;\n    }\n  });\n  return {\n    row,\n    dataValidation,\n    outlineLevel,\n    mergedCells\n  };\n};\nconst defaultColumnsStyles = {\n  [GRID_DATE_COL_DEF.type]: {\n    numFmt: 'dd.mm.yyyy'\n  },\n  [GRID_DATETIME_COL_DEF.type]: {\n    numFmt: 'dd.mm.yyyy hh:mm'\n  }\n};\nexport const serializeColumn = (column, columnsStyles) => {\n  const {\n    field,\n    type\n  } = column;\n  return {\n    key: field,\n    headerText: column.headerName ?? column.field,\n    // Excel width must stay between 0 and 255 (https://support.microsoft.com/en-us/office/change-the-column-width-and-row-height-72f5e3cc-994d-43e8-ae58-9774a0905f46)\n    // From the example of column width behavior (https://docs.microsoft.com/en-US/office/troubleshoot/excel/determine-column-widths#example-of-column-width-behavior)\n    // a value of 10 corresponds to 75px. This is an approximation, because column width depends on the font-size\n    width: Math.min(255, column.width ? column.width / 7.5 : 8.43),\n    style: _extends({}, type && defaultColumnsStyles?.[type], columnsStyles?.[field])\n  };\n};\nconst addColumnGroupingHeaders = (worksheet, columns, columnGroupPaths, columnGroupDetails) => {\n  const maxDepth = Math.max(...columns.map(({\n    key\n  }) => columnGroupPaths[key]?.length ?? 0));\n  if (maxDepth === 0) {\n    return;\n  }\n  for (let rowIndex = 0; rowIndex < maxDepth; rowIndex += 1) {\n    const row = columns.map(({\n      key\n    }) => {\n      const groupingPath = columnGroupPaths[key];\n      if (groupingPath.length <= rowIndex) {\n        return {\n          groupId: null,\n          parents: groupingPath\n        };\n      }\n      return _extends({}, columnGroupDetails[groupingPath[rowIndex]], {\n        parents: groupingPath.slice(0, rowIndex)\n      });\n    });\n    const newRow = worksheet.addRow(row.map(group => group.groupId === null ? null : group?.headerName ?? group.groupId));\n\n    // use `rowCount`, since worksheet can have additional rows added in `exceljsPreProcess`\n    const lastRowIndex = newRow.worksheet.rowCount;\n    let leftIndex = 0;\n    let rightIndex = 1;\n    while (rightIndex < columns.length) {\n      const {\n        groupId: leftGroupId,\n        parents: leftParents\n      } = row[leftIndex];\n      const {\n        groupId: rightGroupId,\n        parents: rightParents\n      } = row[rightIndex];\n      const areInSameGroup = leftGroupId === rightGroupId && leftParents.length === rightParents.length && leftParents.every((leftParent, index) => rightParents[index] === leftParent);\n      if (areInSameGroup) {\n        rightIndex += 1;\n      } else {\n        if (rightIndex - leftIndex > 1) {\n          worksheet.mergeCells(lastRowIndex, leftIndex + 1, lastRowIndex, rightIndex);\n        }\n        leftIndex = rightIndex;\n        rightIndex += 1;\n      }\n    }\n    if (rightIndex - leftIndex > 1) {\n      worksheet.mergeCells(lastRowIndex, leftIndex + 1, lastRowIndex, rightIndex);\n    }\n  }\n};\nexport function serializeColumns(columns, styles) {\n  return columns.map(column => serializeColumn(column, styles));\n}\nexport async function getDataForValueOptionsSheet(columns, valueOptionsSheetName, api) {\n  const candidateColumns = columns.filter(column => isSingleSelectColDef(column) && Array.isArray(column.valueOptions));\n\n  // Creates a temp worksheet to obtain the column letters\n  const excelJS = await getExcelJs();\n  const workbook = new excelJS.Workbook();\n  const worksheet = workbook.addWorksheet('Sheet1');\n  worksheet.columns = candidateColumns.map(column => ({\n    key: column.field\n  }));\n  return candidateColumns.reduce((acc, column) => {\n    const singleSelectColumn = column;\n    const formattedValueOptions = getFormattedValueOptions(singleSelectColumn, {}, singleSelectColumn.valueOptions, api);\n    const header = column.headerName ?? column.field;\n    const values = [header, ...formattedValueOptions];\n    const letter = worksheet.getColumn(column.field).letter;\n    const address = `${valueOptionsSheetName}!$${letter}$2:$${letter}$${values.length}`;\n    acc[column.field] = {\n      values,\n      address\n    };\n    return acc;\n  }, {});\n}\nfunction addSerializedRowToWorksheet(serializedRow, worksheet) {\n  const {\n    row,\n    dataValidation,\n    outlineLevel,\n    mergedCells\n  } = serializedRow;\n  const newRow = worksheet.addRow(row);\n  Object.keys(dataValidation).forEach(field => {\n    newRow.getCell(field).dataValidation = _extends({}, dataValidation[field]);\n  });\n  if (outlineLevel) {\n    newRow.outlineLevel = outlineLevel;\n  }\n\n  // use `rowCount`, since worksheet can have additional rows added in `exceljsPreProcess`\n  const lastRowIndex = newRow.worksheet.rowCount;\n  mergedCells.forEach(mergedCell => {\n    worksheet.mergeCells(lastRowIndex, mergedCell.leftIndex, lastRowIndex, mergedCell.rightIndex);\n  });\n}\nasync function createValueOptionsSheetIfNeeded(valueOptionsData, sheetName, workbook) {\n  if (Object.keys(valueOptionsData).length === 0) {\n    return;\n  }\n  const valueOptionsWorksheet = workbook.addWorksheet(sheetName);\n  valueOptionsWorksheet.columns = Object.keys(valueOptionsData).map(key => ({\n    key\n  }));\n  Object.entries(valueOptionsData).forEach(([field, {\n    values\n  }]) => {\n    valueOptionsWorksheet.getColumn(field).values = values;\n  });\n}\nexport async function buildExcel(options, api) {\n  const {\n    columns,\n    rowIds,\n    includeHeaders,\n    includeColumnGroupsHeaders,\n    valueOptionsSheetName = 'Options',\n    exceljsPreProcess,\n    exceljsPostProcess,\n    columnsStyles = {}\n  } = options;\n  const excelJS = await getExcelJs();\n  const workbook = new excelJS.Workbook();\n  const worksheet = workbook.addWorksheet('Sheet1');\n  const serializedColumns = serializeColumns(columns, columnsStyles);\n  worksheet.columns = serializedColumns;\n  if (exceljsPreProcess) {\n    await exceljsPreProcess({\n      workbook,\n      worksheet\n    });\n  }\n  if (includeColumnGroupsHeaders) {\n    const columnGroupPaths = columns.reduce((acc, column) => {\n      acc[column.field] = api.getColumnGroupPath(column.field);\n      return acc;\n    }, {});\n    addColumnGroupingHeaders(worksheet, serializedColumns, columnGroupPaths, api.getAllGroupDetails());\n  }\n  if (includeHeaders) {\n    worksheet.addRow(columns.map(column => column.headerName ?? column.field));\n  }\n  const valueOptionsData = await getDataForValueOptionsSheet(columns, valueOptionsSheetName, api);\n  createValueOptionsSheetIfNeeded(valueOptionsData, valueOptionsSheetName, workbook);\n  rowIds.forEach(id => {\n    const serializedRow = serializeRow(id, columns, api, valueOptionsData, options);\n    addSerializedRowToWorksheet(serializedRow, worksheet);\n  });\n  if (exceljsPostProcess) {\n    await exceljsPostProcess({\n      workbook,\n      worksheet\n    });\n  }\n  return workbook;\n}\nexport function setupExcelExportWebWorker(workerOptions = {}) {\n  // eslint-disable-next-line no-restricted-globals\n  addEventListener('message', async event => {\n    const {\n      serializedColumns,\n      serializedRows,\n      options,\n      valueOptionsSheetName,\n      valueOptionsData,\n      columnGroupDetails,\n      columnGroupPaths\n    } = event.data;\n    const {\n      exceljsPostProcess,\n      exceljsPreProcess\n    } = workerOptions;\n    const excelJS = await getExcelJs();\n    const workbook = new excelJS.Workbook();\n    const worksheet = workbook.addWorksheet('Sheet1');\n    worksheet.columns = serializedColumns;\n    if (exceljsPreProcess) {\n      await exceljsPreProcess({\n        workbook,\n        worksheet\n      });\n    }\n    if (options.includeColumnGroupsHeaders) {\n      addColumnGroupingHeaders(worksheet, serializedColumns, columnGroupPaths, columnGroupDetails);\n    }\n    const includeHeaders = options.includeHeaders ?? true;\n    if (includeHeaders) {\n      worksheet.addRow(serializedColumns.map(column => column.headerText));\n    }\n    createValueOptionsSheetIfNeeded(valueOptionsData, valueOptionsSheetName, workbook);\n    serializedRows.forEach(serializedRow => {\n      addSerializedRowToWorksheet(serializedRow, worksheet);\n    });\n    if (exceljsPostProcess) {\n      await exceljsPostProcess({\n        workbook,\n        worksheet\n      });\n    }\n    postMessage(await workbook.xlsx.writeBuffer());\n  });\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridExcelExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsExcel(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportExcel')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridExcelExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    columnsStyles: PropTypes.object,\n    disableToolbarButton: PropTypes.bool,\n    escapeFormulas: PropTypes.bool,\n    exceljsPostProcess: PropTypes.func,\n    exceljsPreProcess: PropTypes.func,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    includeColumnGroupsHeaders: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    valueOptionsSheetName: PropTypes.string,\n    worker: PropTypes.func\n  })\n} : void 0;\nexport { GridExcelExportMenuItem };", "import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridWorkspacesIcon = createSvgIcon( /*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M6,13c-2.2,0-4,1.8-4,4s1.8,4,4,4s4-1.8,4-4S8.2,13,6,13z M12,3C9.8,3,8,4.8,8,7s1.8,4,4,4s4-1.8,4-4S14.2,3,12,3z M18,13 c-2.2,0-4,1.8-4,4s1.8,4,4,4s4-1.8,4-4S20.2,13,18,13z\"\n  })\n}), 'Workspaces');\nexport const GridGroupWorkIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM8 17.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5zM9.5 8c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5S9.5 9.38 9.5 8zm6.5 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'GroupWork');\nexport const GridFunctionsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 4H6v2l6.5 6L6 18v2h12v-3h-7l5-5-5-5h7z\"\n}), 'Functions');", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '@mui/x-data-grid-pro';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport { unstable_useId as useId } from '@mui/utils';\nimport Select from '@mui/material/Select';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { canColumnHaveAggregationFunction, getAggregationFunctionLabel, getAvailableAggregationFunctions } from '../hooks/features/aggregation/gridAggregationUtils';\nimport { gridAggregationModelSelector } from '../hooks/features/aggregation/gridAggregationSelectors';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuAggregationItem(props) {\n  const {\n    colDef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const id = useId();\n  const aggregationModel = useGridSelector(apiRef, gridAggregationModelSelector);\n  const availableAggregationFunctions = React.useMemo(() => getAvailableAggregationFunctions({\n    aggregationFunctions: rootProps.aggregationFunctions,\n    colDef\n  }), [colDef, rootProps.aggregationFunctions]);\n  const selectedAggregationRule = React.useMemo(() => {\n    if (!colDef || !aggregationModel[colDef.field]) {\n      return '';\n    }\n    const aggregationFunctionName = aggregationModel[colDef.field];\n    if (canColumnHaveAggregationFunction({\n      colDef,\n      aggregationFunctionName,\n      aggregationFunction: rootProps.aggregationFunctions[aggregationFunctionName]\n    })) {\n      return aggregationFunctionName;\n    }\n    return '';\n  }, [rootProps.aggregationFunctions, aggregationModel, colDef]);\n  const handleAggregationItemChange = event => {\n    const newAggregationItem = event.target?.value || undefined;\n    const currentModel = gridAggregationModelSelector(apiRef);\n    const _colDef$field = colDef.field,\n      otherColumnItems = _objectWithoutPropertiesLoose(currentModel, [_colDef$field].map(_toPropertyKey));\n    const newModel = newAggregationItem == null ? otherColumnItems : _extends({}, otherColumnItems, {\n      [colDef?.field]: newAggregationItem\n    });\n    apiRef.current.setAggregationModel(newModel);\n    apiRef.current.hideColumnMenu();\n  };\n  const label = apiRef.current.getLocaleText('aggregationMenuItemHeader');\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    disableRipple: true,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuAggregationIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: /*#__PURE__*/_jsxs(FormControl, {\n        size: \"small\",\n        fullWidth: true,\n        sx: {\n          minWidth: 150\n        },\n        children: [/*#__PURE__*/_jsx(InputLabel, {\n          id: `${id}-label`,\n          children: label\n        }), /*#__PURE__*/_jsxs(Select, {\n          labelId: `${id}-label`,\n          id: `${id}-input`,\n          value: selectedAggregationRule,\n          label: label,\n          color: \"primary\",\n          onChange: handleAggregationItemChange,\n          onBlur: e => e.stopPropagation(),\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsx(MenuItem, {\n            value: \"\",\n            children: \"...\"\n          }), availableAggregationFunctions.map(aggFunc => /*#__PURE__*/_jsx(MenuItem, {\n            value: aggFunc,\n            children: getAggregationFunctionLabel({\n              apiRef,\n              aggregationRule: {\n                aggregationFunctionName: aggFunc,\n                aggregationFunction: rootProps.aggregationFunctions[aggFunc]\n              }\n            })\n          }, aggFunc))]\n        })]\n      })\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuAggregationItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuAggregationItem };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridGenericColumnMenu, GRID_COLUMN_MENU_SLOTS, GRID_COLUMN_MENU_SLOT_PROPS } from '@mui/x-data-grid-pro';\nimport { GridColumnMenuAggregationItem } from './GridColumnMenuAggregationItem';\nimport { isGroupingColumn } from '../hooks/features/rowGrouping';\nimport { GridColumnMenuRowGroupItem } from './GridColumnMenuRowGroupItem';\nimport { GridColumnMenuRowUngroupItem } from './GridColumnMenuRowUngroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridColumnMenuGroupingItem(props) {\n  const {\n    colDef\n  } = props;\n  if (isGroupingColumn(colDef.field)) {\n    return /*#__PURE__*/_jsx(GridColumnMenuRowGroupItem, _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(GridColumnMenuRowUngroupItem, _extends({}, props));\n}\nexport const GRID_COLUMN_MENU_SLOTS_PREMIUM = _extends({}, GRID_COLUMN_MENU_SLOTS, {\n  columnMenuAggregationItem: GridColumnMenuAggregationItem,\n  columnMenuGroupingItem: GridColumnMenuGroupingItem\n});\nexport const GRID_COLUMN_MENU_SLOT_PROPS_PREMIUM = _extends({}, GRID_COLUMN_MENU_SLOT_PROPS, {\n  columnMenuAggregationItem: {\n    displayOrder: 23\n  },\n  columnMenuGroupingItem: {\n    displayOrder: 27\n  }\n});\nexport const GridPremiumColumnMenu = /*#__PURE__*/React.forwardRef(function GridPremiumColumnMenuSimple(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({\n    ref: ref\n  }, props, {\n    defaultSlots: GRID_COLUMN_MENU_SLOTS_PREMIUM,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS_PREMIUM\n  }));\n});", "import * as React from 'react';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector, gridColumnLookupSelector } from '@mui/x-data-grid-pro';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { gridRowGroupingSanitizedModelSelector } from '../hooks/features/rowGrouping/gridRowGroupingSelector';\nimport { getRowGroupingCriteriaFromGroupingField, GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD, isGroupingColumn } from '../hooks/features/rowGrouping/gridRowGroupingUtils';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridColumnMenuRowGroupItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rowGroupingModel = useGridSelector(apiRef, gridRowGroupingSanitizedModelSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const rootProps = useGridRootProps();\n  const renderUnGroupingMenuItem = field => {\n    const ungroupColumn = event => {\n      apiRef.current.removeRowGroupingCriteria(field);\n      onClick(event);\n    };\n    const groupedColumn = columnsLookup[field];\n    const name = groupedColumn.headerName ?? field;\n    return /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: ungroupColumn,\n      disabled: !groupedColumn.groupable,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuUngroupIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('unGroupColumn')(name)\n      })]\n    }, field);\n  };\n  if (!colDef || !isGroupingColumn(colDef.field)) {\n    return null;\n  }\n  if (colDef.field === GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD) {\n    return /*#__PURE__*/_jsx(React.Fragment, {\n      children: rowGroupingModel.map(renderUnGroupingMenuItem)\n    });\n  }\n  return renderUnGroupingMenuItem(getRowGroupingCriteriaFromGroupingField(colDef.field));\n}", "import * as React from 'react';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { gridColumnLookupSelector, useGridSelector } from '@mui/x-data-grid-pro';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { gridRowGroupingSanitizedModelSelector } from '../hooks/features/rowGrouping/gridRowGroupingSelector';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridColumnMenuRowUngroupItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rowGroupingModel = useGridSelector(apiRef, gridRowGroupingSanitizedModelSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const rootProps = useGridRootProps();\n  if (!colDef.groupable) {\n    return null;\n  }\n  const ungroupColumn = event => {\n    apiRef.current.removeRowGroupingCriteria(colDef.field);\n    onClick(event);\n  };\n  const groupColumn = event => {\n    apiRef.current.addRowGroupingCriteria(colDef.field);\n    onClick(event);\n  };\n  const name = columnsLookup[colDef.field].headerName ?? colDef.field;\n  if (rowGroupingModel.includes(colDef.field)) {\n    return /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: ungroupColumn,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuUngroupIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('unGroupColumn')(name)\n      })]\n    });\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: groupColumn,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuGroupIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('groupColumn')(name)\n    })]\n  });\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ownerDocument, useEventCallback } from '@mui/material/utils';\nimport { getTotalHeaderHeight, isNavigationKey, serializeCellValue, useGridRegisterPipeProcessor, useGridVisibleRows } from '@mui/x-data-grid-pro/internals';\nimport { useGridApiEventHandler, useGridApiMethod, GRID_ACTIONS_COLUMN_TYPE, GRID_CHECKBOX_SELECTION_COL_DEF, GRID_DETAIL_PANEL_TOGGLE_FIELD, gridRowsDataRowIdToIdLookupSelector, gridClasses, gridFocusCellSelector, GRID_REORDER_COL_DEF, useGridSelector, gridSortedRowIdsSelector, gridDimensionsSelector } from '@mui/x-data-grid-pro';\nimport { gridCellSelectionStateSelector } from './gridCellSelectionSelector';\nexport const cellSelectionStateInitializer = (state, props) => _extends({}, state, {\n  cellSelection: _extends({}, props.cellSelectionModel ?? props.initialState?.cellSelection)\n});\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nconst AUTO_SCROLL_SENSITIVITY = 50; // The distance from the edge to start scrolling\nconst AUTO_SCROLL_SPEED = 20; // The speed to scroll once the mouse enters the sensitivity area\n\nexport const useGridCellSelection = (apiRef, props) => {\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const cellWithVirtualFocus = React.useRef();\n  const lastMouseDownCell = React.useRef();\n  const mousePosition = React.useRef(null);\n  const autoScrollRAF = React.useRef();\n  const sortedRowIds = useGridSelector(apiRef, gridSortedRowIdsSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, props);\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  apiRef.current.registerControlState({\n    stateId: 'cellSelection',\n    propModel: props.cellSelectionModel,\n    propOnChange: props.onCellSelectionModelChange,\n    stateSelector: gridCellSelectionStateSelector,\n    changeEvent: 'cellSelectionChange'\n  });\n  const runIfCellSelectionIsEnabled = callback => (...args) => {\n    if (props.cellSelection) {\n      callback(...args);\n    }\n  };\n  const isCellSelected = React.useCallback((id, field) => {\n    if (!props.cellSelection) {\n      return false;\n    }\n    const cellSelectionModel = gridCellSelectionStateSelector(apiRef.current.state);\n    return cellSelectionModel[id] ? !!cellSelectionModel[id][field] : false;\n  }, [apiRef, props.cellSelection]);\n  const getCellSelectionModel = React.useCallback(() => {\n    return gridCellSelectionStateSelector(apiRef.current.state);\n  }, [apiRef]);\n  const setCellSelectionModel = React.useCallback(newModel => {\n    if (!props.cellSelection) {\n      return;\n    }\n    apiRef.current.setState(prevState => _extends({}, prevState, {\n      cellSelection: newModel\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.cellSelection]);\n  const selectCellRange = React.useCallback((start, end, keepOtherSelected = false) => {\n    const startRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(start.id);\n    const startColumnIndex = apiRef.current.getColumnIndex(start.field);\n    const endRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(end.id);\n    const endColumnIndex = apiRef.current.getColumnIndex(end.field);\n    let finalStartRowIndex = startRowIndex;\n    let finalStartColumnIndex = startColumnIndex;\n    let finalEndRowIndex = endRowIndex;\n    let finalEndColumnIndex = endColumnIndex;\n    if (finalStartRowIndex > finalEndRowIndex) {\n      finalStartRowIndex = endRowIndex;\n      finalEndRowIndex = startRowIndex;\n    }\n    if (finalStartColumnIndex > finalEndColumnIndex) {\n      finalStartColumnIndex = endColumnIndex;\n      finalEndColumnIndex = startColumnIndex;\n    }\n    const visibleColumns = apiRef.current.getVisibleColumns();\n    const rowsInRange = visibleRows.rows.slice(finalStartRowIndex, finalEndRowIndex + 1);\n    const columnsInRange = visibleColumns.slice(finalStartColumnIndex, finalEndColumnIndex + 1);\n    const newModel = keepOtherSelected ? apiRef.current.getCellSelectionModel() : {};\n    rowsInRange.forEach(row => {\n      if (!newModel[row.id]) {\n        newModel[row.id] = {};\n      }\n      columnsInRange.forEach(column => {\n        newModel[row.id][column.field] = true;\n      }, {});\n    });\n    apiRef.current.setCellSelectionModel(newModel);\n  }, [apiRef, visibleRows.rows]);\n  const getSelectedCellsAsArray = React.useCallback(() => {\n    const model = apiRef.current.getCellSelectionModel();\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n    return Object.entries(model).reduce((acc, [id, fields]) => [...acc, ...Object.entries(fields).reduce((acc2, [field, isSelected]) => {\n      return isSelected ? [...acc2, {\n        id: idToIdLookup[id],\n        field\n      }] : acc2;\n    }, [])], []);\n  }, [apiRef]);\n  const cellSelectionApi = {\n    isCellSelected,\n    getCellSelectionModel,\n    setCellSelectionModel,\n    selectCellRange,\n    getSelectedCellsAsArray\n  };\n  useGridApiMethod(apiRef, cellSelectionApi, 'public');\n  const hasClickedValidCellForRangeSelection = React.useCallback(params => {\n    if (params.field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      return false;\n    }\n    if (params.field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      return false;\n    }\n    const column = apiRef.current.getColumn(params.field);\n    if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n      return false;\n    }\n    return params.rowNode.type !== 'pinnedRow';\n  }, [apiRef]);\n  const handleMouseUp = useEventCallback(() => {\n    lastMouseDownCell.current = null;\n    apiRef.current.rootElementRef?.current?.classList.remove(gridClasses['root--disableUserSelection']);\n\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopAutoScroll();\n  });\n  const handleCellMouseDown = React.useCallback((params, event) => {\n    // Skip if the click comes from the right-button or, only on macOS, Ctrl is pressed\n    // Fix for https://github.com/mui/mui-x/pull/6567#issuecomment-1329155578\n    const isMacOs = window.navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n    if (event.button !== 0 || event.ctrlKey && isMacOs) {\n      return;\n    }\n    if (params.field === GRID_REORDER_COL_DEF.field) {\n      return;\n    }\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (hasClickedValidCellForRangeSelection(params) && event.shiftKey && focusedCell) {\n      event.preventDefault();\n    }\n    lastMouseDownCell.current = {\n      id: params.id,\n      field: params.field\n    };\n    apiRef.current.rootElementRef?.current?.classList.add(gridClasses['root--disableUserSelection']);\n    const document = ownerDocument(apiRef.current.rootElementRef?.current);\n    document.addEventListener('mouseup', handleMouseUp, {\n      once: true\n    });\n  }, [apiRef, handleMouseUp, hasClickedValidCellForRangeSelection]);\n  const stopAutoScroll = React.useCallback(() => {\n    if (autoScrollRAF.current) {\n      cancelAnimationFrame(autoScrollRAF.current);\n      autoScrollRAF.current = null;\n    }\n  }, []);\n  const handleCellFocusIn = React.useCallback(params => {\n    cellWithVirtualFocus.current = {\n      id: params.id,\n      field: params.field\n    };\n  }, []);\n  const startAutoScroll = React.useCallback(() => {\n    if (autoScrollRAF.current) {\n      return;\n    }\n    if (!apiRef.current.virtualScrollerRef?.current) {\n      return;\n    }\n    function autoScroll() {\n      if (!mousePosition.current || !apiRef.current.virtualScrollerRef?.current) {\n        return;\n      }\n      const {\n        x: mouseX,\n        y: mouseY\n      } = mousePosition.current;\n      const {\n        height,\n        width\n      } = dimensions.viewportInnerSize;\n      let deltaX = 0;\n      let deltaY = 0;\n      let factor = 0;\n      if (mouseY <= AUTO_SCROLL_SENSITIVITY && dimensions.hasScrollY) {\n        // When scrolling up, the multiplier increases going closer to the top edge\n        factor = (AUTO_SCROLL_SENSITIVITY - mouseY) / -AUTO_SCROLL_SENSITIVITY;\n        deltaY = AUTO_SCROLL_SPEED;\n      } else if (mouseY >= height - AUTO_SCROLL_SENSITIVITY && dimensions.hasScrollY) {\n        // When scrolling down, the multiplier increases going closer to the bottom edge\n        factor = (mouseY - (height - AUTO_SCROLL_SENSITIVITY)) / AUTO_SCROLL_SENSITIVITY;\n        deltaY = AUTO_SCROLL_SPEED;\n      } else if (mouseX <= AUTO_SCROLL_SENSITIVITY && dimensions.hasScrollX) {\n        // When scrolling left, the multiplier increases going closer to the left edge\n        factor = (AUTO_SCROLL_SENSITIVITY - mouseX) / -AUTO_SCROLL_SENSITIVITY;\n        deltaX = AUTO_SCROLL_SPEED;\n      } else if (mouseX >= width - AUTO_SCROLL_SENSITIVITY && dimensions.hasScrollX) {\n        // When scrolling right, the multiplier increases going closer to the right edge\n        factor = (mouseX - (width - AUTO_SCROLL_SENSITIVITY)) / AUTO_SCROLL_SENSITIVITY;\n        deltaX = AUTO_SCROLL_SPEED;\n      }\n      if (deltaX !== 0 || deltaY !== 0) {\n        const {\n          scrollLeft,\n          scrollTop\n        } = apiRef.current.virtualScrollerRef.current;\n        apiRef.current.scroll({\n          top: scrollTop + deltaY * factor,\n          left: scrollLeft + deltaX * factor\n        });\n      }\n      autoScrollRAF.current = requestAnimationFrame(autoScroll);\n    }\n    autoScroll();\n  }, [apiRef, dimensions]);\n  const handleCellMouseOver = React.useCallback((params, event) => {\n    if (!lastMouseDownCell.current) {\n      return;\n    }\n    const {\n      id,\n      field\n    } = params;\n    apiRef.current.selectCellRange(lastMouseDownCell.current, {\n      id,\n      field\n    }, event.ctrlKey || event.metaKey);\n    const virtualScrollerRect = apiRef.current.virtualScrollerRef?.current?.getBoundingClientRect();\n    if (!virtualScrollerRect) {\n      return;\n    }\n    const {\n      x,\n      y\n    } = virtualScrollerRect;\n    const {\n      height,\n      width\n    } = dimensions.viewportInnerSize;\n    const mouseX = event.clientX - x;\n    const mouseY = event.clientY - y - totalHeaderHeight;\n    mousePosition.current = {\n      x: mouseX,\n      y: mouseY\n    };\n    const hasEnteredVerticalSensitivityArea = mouseY <= AUTO_SCROLL_SENSITIVITY || mouseY >= height - AUTO_SCROLL_SENSITIVITY;\n    const hasEnteredHorizontalSensitivityArea = mouseX <= AUTO_SCROLL_SENSITIVITY || mouseX >= width - AUTO_SCROLL_SENSITIVITY;\n    const hasEnteredSensitivityArea = hasEnteredVerticalSensitivityArea || hasEnteredHorizontalSensitivityArea;\n    if (hasEnteredSensitivityArea) {\n      // Mouse has entered the sensitity area for the first time\n      startAutoScroll();\n    } else {\n      // Mouse has left the sensitivity area while auto scroll is on\n      stopAutoScroll();\n    }\n  }, [apiRef, startAutoScroll, stopAutoScroll, totalHeaderHeight, dimensions]);\n  const handleCellClick = useEventCallback((params, event) => {\n    const {\n      id,\n      field\n    } = params;\n    if (!hasClickedValidCellForRangeSelection(params)) {\n      return;\n    }\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (event.shiftKey && focusedCell) {\n      apiRef.current.selectCellRange(focusedCell, {\n        id,\n        field\n      });\n      cellWithVirtualFocus.current = {\n        id,\n        field\n      };\n      return;\n    }\n    if (event.ctrlKey || event.metaKey) {\n      // Add the clicked cell to the selection\n      const prevModel = apiRef.current.getCellSelectionModel();\n      apiRef.current.setCellSelectionModel(_extends({}, prevModel, {\n        [id]: _extends({}, prevModel[id], {\n          [field]: !apiRef.current.isCellSelected(id, field)\n        })\n      }));\n    } else {\n      // Clear the selection and keep only the clicked cell selected\n      apiRef.current.setCellSelectionModel({\n        [id]: {\n          [field]: true\n        }\n      });\n    }\n  });\n  const handleCellKeyDown = useEventCallback((params, event) => {\n    if (!isNavigationKey(event.key) || !cellWithVirtualFocus.current) {\n      return;\n    }\n    if (!event.shiftKey) {\n      apiRef.current.setCellSelectionModel({});\n      return;\n    }\n    const {\n      current: otherCell\n    } = cellWithVirtualFocus;\n    let endRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(otherCell.id);\n    let endColumnIndex = apiRef.current.getColumnIndex(otherCell.field);\n    if (event.key === 'ArrowDown') {\n      endRowIndex += 1;\n    } else if (event.key === 'ArrowUp') {\n      endRowIndex -= 1;\n    } else if (event.key === 'ArrowRight') {\n      endColumnIndex += 1;\n    } else if (event.key === 'ArrowLeft') {\n      endColumnIndex -= 1;\n    }\n    if (endRowIndex < 0 || endRowIndex >= visibleRows.rows.length) {\n      return;\n    }\n    const visibleColumns = apiRef.current.getVisibleColumns();\n    if (endColumnIndex < 0 || endColumnIndex >= visibleColumns.length) {\n      return;\n    }\n    cellWithVirtualFocus.current = {\n      id: visibleRows.rows[endRowIndex].id,\n      field: visibleColumns[endColumnIndex].field\n    };\n    apiRef.current.scrollToIndexes({\n      rowIndex: endRowIndex,\n      colIndex: endColumnIndex\n    });\n    const {\n      id,\n      field\n    } = params;\n    apiRef.current.selectCellRange({\n      id,\n      field\n    }, cellWithVirtualFocus.current);\n  });\n  useGridApiEventHandler(apiRef, 'cellClick', runIfCellSelectionIsEnabled(handleCellClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfCellSelectionIsEnabled(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfCellSelectionIsEnabled(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfCellSelectionIsEnabled(handleCellMouseDown));\n  useGridApiEventHandler(apiRef, 'cellMouseOver', runIfCellSelectionIsEnabled(handleCellMouseOver));\n  React.useEffect(() => {\n    if (props.cellSelectionModel) {\n      apiRef.current.setCellSelectionModel(props.cellSelectionModel);\n    }\n  }, [apiRef, props.cellSelectionModel]);\n  React.useEffect(() => {\n    const rootRef = apiRef.current.rootElementRef?.current;\n    return () => {\n      stopAutoScroll();\n      const document = ownerDocument(rootRef);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [apiRef, handleMouseUp, stopAutoScroll]);\n  const checkIfCellIsSelected = React.useCallback((isSelected, {\n    id,\n    field\n  }) => {\n    return apiRef.current.isCellSelected(id, field);\n  }, [apiRef]);\n  const addClassesToCells = React.useCallback((classes, {\n    id,\n    field\n  }) => {\n    if (!visibleRows.range || !apiRef.current.isCellSelected(id, field)) {\n      return classes;\n    }\n    const newClasses = [...classes];\n    const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(id);\n    const columnIndex = apiRef.current.getColumnIndex(field);\n    const visibleColumns = apiRef.current.getVisibleColumns();\n    if (rowIndex > 0) {\n      const {\n        id: previousRowId\n      } = visibleRows.rows[rowIndex - 1];\n      if (!apiRef.current.isCellSelected(previousRowId, field)) {\n        newClasses.push(gridClasses['cell--rangeTop']);\n      }\n    } else {\n      newClasses.push(gridClasses['cell--rangeTop']);\n    }\n    if (rowIndex + visibleRows.range.firstRowIndex < visibleRows.range.lastRowIndex) {\n      const {\n        id: nextRowId\n      } = visibleRows.rows[rowIndex + 1];\n      if (!apiRef.current.isCellSelected(nextRowId, field)) {\n        newClasses.push(gridClasses['cell--rangeBottom']);\n      }\n    } else {\n      newClasses.push(gridClasses['cell--rangeBottom']);\n    }\n    if (columnIndex > 0) {\n      const {\n        field: previousColumnField\n      } = visibleColumns[columnIndex - 1];\n      if (!apiRef.current.isCellSelected(id, previousColumnField)) {\n        newClasses.push(gridClasses['cell--rangeLeft']);\n      }\n    } else {\n      newClasses.push(gridClasses['cell--rangeLeft']);\n    }\n    if (columnIndex < visibleColumns.length - 1) {\n      const {\n        field: nextColumnField\n      } = visibleColumns[columnIndex + 1];\n      if (!apiRef.current.isCellSelected(id, nextColumnField)) {\n        newClasses.push(gridClasses['cell--rangeRight']);\n      }\n    } else {\n      newClasses.push(gridClasses['cell--rangeRight']);\n    }\n    return newClasses;\n  }, [apiRef, visibleRows.range, visibleRows.rows]);\n  const canUpdateFocus = React.useCallback((initialValue, {\n    event,\n    cell\n  }) => {\n    if (!cell || !props.cellSelection || !event.shiftKey) {\n      return initialValue;\n    }\n    if (isKeyboardEvent(event)) {\n      return isNavigationKey(event.key) ? false : initialValue;\n    }\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (hasClickedValidCellForRangeSelection(cell) && focusedCell) {\n      return false;\n    }\n    return initialValue;\n  }, [apiRef, props.cellSelection, hasClickedValidCellForRangeSelection]);\n  const handleClipboardCopy = React.useCallback(value => {\n    if (apiRef.current.getSelectedCellsAsArray().length <= 1) {\n      return value;\n    }\n    const cellSelectionModel = apiRef.current.getCellSelectionModel();\n    const unsortedSelectedRowIds = Object.keys(cellSelectionModel);\n    const sortedSelectedRowIds = sortedRowIds.filter(id => unsortedSelectedRowIds.includes(`${id}`));\n    const copyData = sortedSelectedRowIds.reduce((acc, rowId) => {\n      const fieldsMap = cellSelectionModel[rowId];\n      const rowString = Object.keys(fieldsMap).reduce((acc2, field) => {\n        let cellData;\n        if (fieldsMap[field]) {\n          const cellParams = apiRef.current.getCellParams(rowId, field);\n          cellData = serializeCellValue(cellParams, {\n            csvOptions: {\n              delimiter: clipboardCopyCellDelimiter,\n              shouldAppendQuotes: false,\n              escapeFormulas: false\n            },\n            ignoreValueFormatter\n          });\n        } else {\n          cellData = '';\n        }\n        return acc2 === '' ? cellData : [acc2, cellData].join(clipboardCopyCellDelimiter);\n      }, '');\n      return acc === '' ? rowString : [acc, rowString].join('\\r\\n');\n    }, '');\n    return copyData;\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter, sortedRowIds]);\n  useGridRegisterPipeProcessor(apiRef, 'isCellSelected', checkIfCellIsSelected);\n  useGridRegisterPipeProcessor(apiRef, 'cellClassName', addClassesToCells);\n  useGridRegisterPipeProcessor(apiRef, 'canUpdateFocus', canUpdateFocus);\n  useGridRegisterPipeProcessor(apiRef, 'clipboardCopy', handleClipboardCopy);\n};", "export const gridCellSelectionStateSelector = state => state.cellSelection;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GRID_CHECKBOX_SELECTION_FIELD, gridFocusCellSelector, gridVisibleColumnFieldsSelector, useGridApiOptionHandler, useGridApiEventHandler, gridPaginatedVisibleSortedGridRowIdsSelector, gridExpandedSortedRowIdsSelector } from '@mui/x-data-grid';\nimport { buildWarning, getRowIdFromRowModel, getActiveElement, useGridRegisterPipeProcessor, getPublicApiRef, isPasteShortcut, useGridLogger } from '@mui/x-data-grid/internals';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD, GRID_REORDER_COL_DEF } from '@mui/x-data-grid-pro';\nimport { unstable_debounce as debounce } from '@mui/utils';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\nconst columnFieldsToExcludeFromPaste = [GRID_CHECKBOX_SELECTION_FIELD, GRID_REORDER_COL_DEF.field, GRID_DETAIL_PANEL_TOGGLE_FIELD];\n\n// Batches rows that are updated during clipboard paste to reduce `updateRows` calls\nfunction batchRowUpdates(func, wait) {\n  let rows = [];\n  const debounced = debounce(() => {\n    func(rows);\n    rows = [];\n  }, wait);\n  return row => {\n    rows.push(row);\n    debounced();\n  };\n}\nasync function getTextFromClipboard(rootEl) {\n  return new Promise(resolve => {\n    const focusedCell = getActiveElement(document);\n    const el = document.createElement('input');\n    el.style.width = '0px';\n    el.style.height = '0px';\n    el.style.border = 'none';\n    el.style.margin = '0';\n    el.style.padding = '0';\n    el.style.outline = 'none';\n    el.style.position = 'absolute';\n    el.style.top = '0';\n    el.style.left = '0';\n    const handlePasteEvent = event => {\n      el.removeEventListener('paste', handlePasteEvent);\n      const text = event.clipboardData?.getData('text/plain');\n      if (focusedCell instanceof HTMLElement) {\n        focusedCell.focus({\n          preventScroll: true\n        });\n      }\n      el.remove();\n      resolve(text || '');\n    };\n    el.addEventListener('paste', handlePasteEvent);\n    rootEl.appendChild(el);\n    el.focus({\n      preventScroll: true\n    });\n  });\n}\n\n// Keeps track of updated rows during clipboard paste\nclass CellValueUpdater {\n  constructor(options) {\n    this.rowsToUpdate = {};\n    this.updateRow = void 0;\n    this.options = void 0;\n    this.options = options;\n    this.updateRow = batchRowUpdates(options.apiRef.current.updateRows, 50);\n  }\n  updateCell({\n    rowId,\n    field,\n    pastedCellValue\n  }) {\n    if (pastedCellValue === undefined) {\n      return;\n    }\n    const {\n      apiRef,\n      getRowId\n    } = this.options;\n    const colDef = apiRef.current.getColumn(field);\n    if (!colDef || !colDef.editable) {\n      return;\n    }\n    const row = this.rowsToUpdate[rowId] || _extends({}, apiRef.current.getRow(rowId));\n    if (!row) {\n      return;\n    }\n    let parsedValue = pastedCellValue;\n    if (colDef.pastedValueParser) {\n      parsedValue = colDef.pastedValueParser(pastedCellValue, row, colDef, apiRef);\n    } else if (colDef.valueParser) {\n      parsedValue = colDef.valueParser(parsedValue, row, colDef, apiRef);\n    }\n    if (parsedValue === undefined) {\n      return;\n    }\n    let rowCopy = _extends({}, row);\n    if (typeof colDef.valueSetter === 'function') {\n      rowCopy = colDef.valueSetter(parsedValue, rowCopy, colDef, apiRef);\n    } else {\n      rowCopy[field] = parsedValue;\n    }\n    const newRowId = getRowIdFromRowModel(rowCopy, getRowId);\n    if (String(newRowId) !== String(rowId)) {\n      // We cannot update row id, so this cell value update should be ignored\n      return;\n    }\n    this.rowsToUpdate[rowId] = rowCopy;\n  }\n  applyUpdates() {\n    const {\n      apiRef,\n      processRowUpdate,\n      onProcessRowUpdateError\n    } = this.options;\n    const rowsToUpdate = this.rowsToUpdate;\n    const rowIdsToUpdate = Object.keys(rowsToUpdate);\n    if (rowIdsToUpdate.length === 0) {\n      apiRef.current.publishEvent('clipboardPasteEnd');\n      return;\n    }\n    const handleRowUpdate = async rowId => {\n      const newRow = rowsToUpdate[rowId];\n      if (typeof processRowUpdate === 'function') {\n        const handleError = errorThrown => {\n          if (onProcessRowUpdateError) {\n            onProcessRowUpdateError(errorThrown);\n          } else if (process.env.NODE_ENV !== 'production') {\n            missingOnProcessRowUpdateErrorWarning();\n          }\n        };\n        try {\n          const oldRow = apiRef.current.getRow(rowId);\n          const finalRowUpdate = await processRowUpdate(newRow, oldRow);\n          this.updateRow(finalRowUpdate);\n        } catch (error) {\n          handleError(error);\n        }\n      } else {\n        this.updateRow(newRow);\n      }\n    };\n    const promises = rowIdsToUpdate.map(rowId => {\n      // Wrap in promise that always resolves to avoid Promise.all from stopping on first error.\n      // This is to avoid using `Promise.allSettled` that has worse browser support.\n      return new Promise(resolve => {\n        handleRowUpdate(rowId).then(resolve).catch(resolve);\n      });\n    });\n    Promise.all(promises).then(() => {\n      this.rowsToUpdate = {};\n      apiRef.current.publishEvent('clipboardPasteEnd');\n    });\n  }\n}\nfunction defaultPasteResolver({\n  pastedData,\n  apiRef,\n  updateCell,\n  pagination\n}) {\n  const isSingleValuePasted = pastedData.length === 1 && pastedData[0].length === 1;\n  const cellSelectionModel = apiRef.current.getCellSelectionModel();\n  const selectedCellsArray = apiRef.current.getSelectedCellsAsArray();\n  if (cellSelectionModel && selectedCellsArray.length > 1) {\n    Object.keys(cellSelectionModel).forEach((rowId, rowIndex) => {\n      const rowDataArr = pastedData[isSingleValuePasted ? 0 : rowIndex];\n      const hasRowData = isSingleValuePasted ? true : rowDataArr !== undefined;\n      if (!hasRowData) {\n        return;\n      }\n      Object.keys(cellSelectionModel[rowId]).forEach((field, colIndex) => {\n        const cellValue = isSingleValuePasted ? rowDataArr[0] : rowDataArr[colIndex];\n        updateCell({\n          rowId,\n          field,\n          pastedCellValue: cellValue\n        });\n      });\n    });\n    return;\n  }\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n    if (columnFieldsToExcludeFromPaste.includes(field)) {\n      return false;\n    }\n    return true;\n  });\n  const selectedRows = apiRef.current.getSelectedRows();\n  if (selectedRows.size > 0 && !isSingleValuePasted) {\n    // Multiple values are pasted starting from the first and top-most cell\n    const pastedRowsDataCount = pastedData.length;\n\n    // There's no guarantee that the selected rows are in the same order as the pasted rows\n    selectedRows.forEach((row, rowId) => {\n      let rowData;\n      if (pastedRowsDataCount === 1) {\n        // If only one row is pasted - paste it to all selected rows\n        rowData = pastedData[0];\n      } else {\n        rowData = pastedData.shift();\n      }\n      if (rowData === undefined) {\n        return;\n      }\n      rowData.forEach((newCellValue, cellIndex) => {\n        updateCell({\n          rowId,\n          field: visibleColumnFields[cellIndex],\n          pastedCellValue: newCellValue\n        });\n      });\n    });\n    return;\n  }\n  let selectedCell = gridFocusCellSelector(apiRef);\n  if (!selectedCell && selectedCellsArray.length === 1) {\n    selectedCell = selectedCellsArray[0];\n  }\n  if (!selectedCell) {\n    return;\n  }\n  if (columnFieldsToExcludeFromPaste.includes(selectedCell.field)) {\n    return;\n  }\n  const selectedRowId = selectedCell.id;\n  const selectedRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(selectedRowId);\n  const visibleRowIds = pagination ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n  const selectedFieldIndex = visibleColumnFields.indexOf(selectedCell.field);\n  pastedData.forEach((rowData, index) => {\n    const rowId = visibleRowIds[selectedRowIndex + index];\n    if (typeof rowId === 'undefined') {\n      return;\n    }\n    for (let i = selectedFieldIndex; i < visibleColumnFields.length; i += 1) {\n      const field = visibleColumnFields[i];\n      const stringValue = rowData[i - selectedFieldIndex];\n      updateCell({\n        rowId,\n        field,\n        pastedCellValue: stringValue\n      });\n    }\n  });\n}\nexport const useGridClipboardImport = (apiRef, props) => {\n  const processRowUpdate = props.processRowUpdate;\n  const onProcessRowUpdateError = props.onProcessRowUpdateError;\n  const getRowId = props.getRowId;\n  const enableClipboardPaste = !props.disableClipboardPaste;\n  const rootEl = apiRef.current.rootElementRef?.current;\n  const logger = useGridLogger(apiRef, 'useGridClipboardImport');\n  const splitClipboardPastedText = props.splitClipboardPastedText;\n  const {\n    pagination,\n    onBeforeClipboardPasteStart\n  } = props;\n  const handlePaste = React.useCallback(async (params, event) => {\n    if (!enableClipboardPaste) {\n      return;\n    }\n    if (!isPasteShortcut(event)) {\n      return;\n    }\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell !== null) {\n      const cellMode = apiRef.current.getCellMode(focusedCell.id, focusedCell.field);\n      if (cellMode === 'edit') {\n        // Do not paste data when the cell is in edit mode\n        return;\n      }\n    }\n    if (!rootEl) {\n      return;\n    }\n    const text = await getTextFromClipboard(rootEl);\n    if (!text) {\n      return;\n    }\n    const pastedData = splitClipboardPastedText(text);\n    if (!pastedData) {\n      return;\n    }\n    if (onBeforeClipboardPasteStart) {\n      try {\n        await onBeforeClipboardPasteStart({\n          data: pastedData\n        });\n      } catch (error) {\n        logger.debug('Clipboard paste operation cancelled');\n        return;\n      }\n    }\n    const cellUpdater = new CellValueUpdater({\n      apiRef,\n      processRowUpdate,\n      onProcessRowUpdateError,\n      getRowId\n    });\n    apiRef.current.publishEvent('clipboardPasteStart', {\n      data: pastedData\n    });\n    defaultPasteResolver({\n      pastedData,\n      apiRef: getPublicApiRef(apiRef),\n      updateCell: (...args) => {\n        cellUpdater.updateCell(...args);\n      },\n      pagination\n    });\n    cellUpdater.applyUpdates();\n  }, [apiRef, processRowUpdate, onProcessRowUpdateError, getRowId, enableClipboardPaste, rootEl, splitClipboardPastedText, pagination, onBeforeClipboardPasteStart, logger]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (isPasteShortcut(event) && enableClipboardPaste) {\n      // Do not enter cell edit mode on paste\n      return false;\n    }\n    return initialValue;\n  }, [enableClipboardPaste]);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handlePaste);\n  useGridApiOptionHandler(apiRef, 'clipboardPasteStart', props.onClipboardPasteStart);\n  useGridApiOptionHandler(apiRef, 'clipboardPasteEnd', props.onClipboardPasteEnd);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n};", "import { useGridInitialization, useGridInitializeState, useGridClipboard, useGridColumnMenu, useGridColumns, columnsStateInitializer, useGridDensity, useGridCsvExport, useGridPrintExport, useGridFilter, filterStateInitializer, useGridFocus, useGridKeyboardNavigation, useGridPagination, paginationStateInitializer, useGridPreferencesPanel, useGridEditing, editingStateInitializer, useGridRows, useGridRowsPreProcessors, rowsStateInitializer, useGridRowsMeta, useGridParamsApi, useGridRowSelection, useGridSorting, sortingStateInitializer, useGridScroll, useGridEvents, dimensionsStateInitializer, useGridDimensions, useGridStatePersistence, useGridRowSelectionPreProcessors, columnMenuStateInitializer, densityStateInitializer, focusStateInitializer, preferencePanelStateInitializer, rowsMetaStateInitializer, rowSelectionStateInitializer, useGridColumnReorder, columnReorderStateInitializer, useGridColumnResize, columnResizeStateInitializer, useGridTreeData, useGridTreeDataPreProcessors, useGridColumnPinning, columnPinningStateInitializer, useGridColumnPinningPreProcessors, useGridDetailPanel, detailPanelStateInitializer, useGridDetailPanelPreProcessors, useGridInfiniteLoader, useGridColumnSpanning, useGridRowReorder, useGridRowReorderPreProcessors, useGridRowPinning, useGridRowPinningPreProcessors, rowPinningStateInitializer, useGridColumnGrouping, columnGroupsStateInitializer, useGridLazyLoader, useGridLazyLoaderPreProcessors, headerFilteringStateInitializer, useGridHeaderFiltering, virtualizationStateInitializer, useGridVirtualization } from '@mui/x-data-grid-pro/internals';\n// Premium-only features\nimport { useGridAggregation, aggregationStateInitializer } from '../hooks/features/aggregation/useGridAggregation';\nimport { useGridAggregationPreProcessors } from '../hooks/features/aggregation/useGridAggregationPreProcessors';\nimport { useGridRowGrouping, rowGroupingStateInitializer } from '../hooks/features/rowGrouping/useGridRowGrouping';\nimport { useGridRowGroupingPreProcessors } from '../hooks/features/rowGrouping/useGridRowGroupingPreProcessors';\nimport { useGridExcelExport } from '../hooks/features/export/useGridExcelExport';\nimport { cellSelectionStateInitializer, useGridCellSelection } from '../hooks/features/cellSelection/useGridCellSelection';\nimport { useGridClipboardImport } from '../hooks/features/clipboard/useGridClipboardImport';\nexport const useDataGridPremiumComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowReorderPreProcessors(apiRef, props);\n  useGridRowGroupingPreProcessors(apiRef, props);\n  useGridTreeDataPreProcessors(apiRef, props);\n  useGridLazyLoaderPreProcessors(apiRef, props);\n  useGridRowPinningPreProcessors(apiRef);\n  useGridAggregationPreProcessors(apiRef, props);\n  useGridDetailPanelPreProcessors(apiRef, props);\n  // The column pinning `hydrateColumns` pre-processor must be after every other `hydrateColumns` pre-processors\n  // Because it changes the order of the columns.\n  useGridColumnPinningPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(headerFilteringStateInitializer, apiRef, props);\n  useGridInitializeState(rowGroupingStateInitializer, apiRef, props);\n  useGridInitializeState(aggregationStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(cellSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(detailPanelStateInitializer, apiRef, props);\n  useGridInitializeState(columnPinningStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowPinningStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnReorderStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridRowGrouping(apiRef, props);\n  useGridHeaderFiltering(apiRef, props);\n  useGridTreeData(apiRef);\n  useGridAggregation(apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridCellSelection(apiRef, props);\n  useGridColumnPinning(apiRef, props);\n  useGridRowPinning(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridDetailPanel(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridClipboardImport(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnReorder(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridRowReorder(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridInfiniteLoader(apiRef, props);\n  useGridLazyLoader(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridExcelExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  return apiRef;\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { DATA_GRID_PRO_PROPS_DEFAULT_VALUES, GRID_DEFAULT_LOCALE_TEXT } from '@mui/x-data-grid-pro';\nimport { computeSlots, useProps } from '@mui/x-data-grid-pro/internals';\nimport { GRID_AGGREGATION_FUNCTIONS } from '../hooks/features/aggregation';\nimport { DATA_GRID_PREMIUM_DEFAULT_SLOTS_COMPONENTS } from '../constants/dataGridPremiumDefaultSlotsComponents';\n\n/**\n * The default values of `DataGridPremiumPropsWithDefaultValue` to inject in the props of DataGridPremium.\n */\nexport const DATA_GRID_PREMIUM_PROPS_DEFAULT_VALUES = _extends({}, DATA_GRID_PRO_PROPS_DEFAULT_VALUES, {\n  cellSelection: false,\n  disableAggregation: false,\n  disableRowGrouping: false,\n  rowGroupingColumnMode: 'single',\n  aggregationFunctions: GRID_AGGREGATION_FUNCTIONS,\n  aggregationRowsScope: 'filtered',\n  getAggregationPosition: groupNode => groupNode.depth === -1 ? 'footer' : 'inline',\n  disableClipboardPaste: false,\n  splitClipboardPastedText: pastedText => {\n    // Excel on Windows adds an empty line break at the end of the copied text.\n    // See https://github.com/mui/mui-x/issues/9103\n    const text = pastedText.replace(/\\r?\\n$/, '');\n    return text.split(/\\r\\n|\\n|\\r/).map(row => row.split('\\t'));\n  }\n});\nconst defaultSlots = DATA_GRID_PREMIUM_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridPremiumProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  return React.useMemo(() => _extends({}, DATA_GRID_PREMIUM_PROPS_DEFAULT_VALUES, themedProps, {\n    localeText,\n    slots,\n    signature: 'DataGridPremium'\n  }), [themedProps, localeText, slots]);\n};", "import { isNumber } from '@mui/x-data-grid-pro/internals';\nconst sumAgg = {\n  apply: ({\n    values\n  }) => {\n    let sum = 0;\n    for (let i = 0; i < values.length; i += 1) {\n      const value = values[i];\n      if (isNumber(value)) {\n        sum += value;\n      }\n    }\n    return sum;\n  },\n  columnTypes: ['number']\n};\nconst avgAgg = {\n  apply: ({\n    values\n  }) => {\n    if (values.length === 0) {\n      return null;\n    }\n    let sum = 0;\n    let valuesCount = 0;\n    for (let i = 0; i < values.length; i += 1) {\n      const value = values[i];\n      if (isNumber(value)) {\n        valuesCount += 1;\n        sum += value;\n      }\n    }\n    return sum / valuesCount;\n  },\n  columnTypes: ['number']\n};\nconst minAgg = {\n  apply: ({\n    values\n  }) => {\n    if (values.length === 0) {\n      return null;\n    }\n    let min = +Infinity;\n    for (let i = 0; i < values.length; i += 1) {\n      const value = values[i];\n      if (value != null && value < min) {\n        min = value;\n      }\n    }\n    return min;\n  },\n  columnTypes: ['number', 'date', 'dateTime']\n};\nconst maxAgg = {\n  apply: ({\n    values\n  }) => {\n    if (values.length === 0) {\n      return null;\n    }\n    let max = -Infinity;\n    for (let i = 0; i < values.length; i += 1) {\n      const value = values[i];\n      if (value != null && value > max) {\n        max = value;\n      }\n    }\n    return max;\n  },\n  columnTypes: ['number', 'date', 'dateTime']\n};\nconst sizeAgg = {\n  apply: ({\n    values\n  }) => {\n    return values.filter(value => typeof value !== 'undefined').length;\n  },\n  valueFormatter: value => {\n    if (value == null || !isNumber(value)) {\n      return value;\n    }\n    return value.toLocaleString();\n  },\n  hasCellUnit: false\n};\nexport const GRID_AGGREGATION_FUNCTIONS = {\n  sum: sumAgg,\n  avg: avgAgg,\n  min: minAgg,\n  max: maxAgg,\n  size: sizeAgg\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DATA_GRID_PRO_DEFAULT_SLOTS_COMPONENTS } from '@mui/x-data-grid-pro/internals';\nimport { GridPremiumColumnMenu } from '../components/GridPremiumColumnMenu';\nimport materialSlots from '../material';\nexport const DATA_GRID_PREMIUM_DEFAULT_SLOTS_COMPONENTS = _extends({}, DATA_GRID_PRO_DEFAULT_SLOTS_COMPONENTS, materialSlots, {\n  columnMenu: GridPremiumColumnMenu\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridWorkspacesIcon, GridGroupWorkIcon, GridFunctionsIcon } from './icons';\nconst iconsSlots = {\n  columnMenuUngroupIcon: GridWorkspacesIcon,\n  columnMenuGroupIcon: GridGroupWorkIcon,\n  columnMenuAggregationIcon: GridFunctionsIcon\n};\nconst materialSlots = _extends({}, iconsSlots);\nexport default materialSlots;", "import { ponyfillGlobal } from '@mui/utils';\nexport const getReleaseInfo = () => {\n  const releaseInfo = \"MTcxNjQxNTIwMDAwMA==\";\n  if (process.env.NODE_ENV !== 'production') {\n    // A simple hack to set the value in the test environment (has no build step).\n    // eslint-disable-next-line no-useless-concat\n    if (releaseInfo === '__RELEASE' + '_INFO__') {\n      // eslint-disable-next-line no-underscore-dangle\n      return ponyfillGlobal.__MUI_RELEASE_INFO__;\n    }\n  }\n  return releaseInfo;\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnVisibilityModelSelector } from '@mui/x-data-grid-pro';\nconst updateColumnVisibilityModel = (columnVisibilityModel, rowGroupingModel, prevRowGroupingModel) => {\n  const newColumnVisibilityModel = _extends({}, columnVisibilityModel);\n  rowGroupingModel?.forEach(field => {\n    if (!prevRowGroupingModel?.includes(field)) {\n      newColumnVisibilityModel[field] = false;\n    }\n  });\n  prevRowGroupingModel?.forEach(field => {\n    if (!rowGroupingModel?.includes(field)) {\n      newColumnVisibilityModel[field] = true;\n    }\n  });\n  return newColumnVisibilityModel;\n};\n\n/**\n * Automatically hide columns when added to the row grouping model and stop hiding them when they are removed.\n * Handles both the `props.initialState.rowGrouping.model` and `props.rowGroupingModel`\n * Does not work when used with the `hide` property of `GridColDef`\n */\nexport const useKeepGroupedColumnsHidden = props => {\n  const initialProps = React.useRef(props);\n  const rowGroupingModel = React.useRef(props.rowGroupingModel ?? props.initialState?.rowGrouping?.model);\n  React.useEffect(() => {\n    props.apiRef.current.subscribeEvent('rowGroupingModelChange', newModel => {\n      const columnVisibilityModel = updateColumnVisibilityModel(gridColumnVisibilityModelSelector(props.apiRef), newModel, rowGroupingModel.current);\n      props.apiRef.current.setColumnVisibilityModel(columnVisibilityModel);\n      rowGroupingModel.current = newModel;\n    });\n  }, [props.apiRef]);\n  return React.useMemo(() => {\n    const invariantInitialState = initialProps.current.initialState;\n    const columnVisibilityModel = updateColumnVisibilityModel(invariantInitialState?.columns?.columnVisibilityModel, rowGroupingModel.current, undefined);\n    return _extends({}, invariantInitialState, {\n      columns: _extends({}, invariantInitialState?.columns, {\n        columnVisibilityModel\n      })\n    });\n  }, []);\n};", "import { blue, green, lightBlue, orange, pink, purple, red } from '@mui/material/colors';\nexport const COLORS = [pink[500], blue[500], orange[500], red[500], green[500], lightBlue[500], purple[500]];\nexport const STATUS_OPTIONS = ['Open', 'PartiallyFilled', 'Filled', 'Rejected'];\nexport const TAXCODE_OPTIONS = ['BR', '1250L', '20G', 'BC45', 'IGN179'];\nexport const RATE_TYPE_OPTIONS = ['Fixed', 'Floating'];\nexport const CONTRACT_TYPE_OPTIONS = ['FP', 'TM', 'CR'];\nexport const INCOTERM_OPTIONS = ['EXW (Ex Works)', 'FAS (Free Alongside Ship)', 'FCA (Free Carrier)', 'CPT (Carriage Paid To)', 'DAP (Delivered at Place)', 'DPU (Delivered at Place Unloaded)', 'DDP (Delivered Duty Paid)'];\nexport const COMMODITY_OPTIONS = ['Corn', 'Oats', 'Rough Rice', 'Soybeans', 'Rapeseed', 'Soybeans', 'Soybean Meal', 'Soybean Oil', 'Wheat', 'Milk', 'Cocoa', 'Coffee C', 'Cotton No.2', 'Sugar No.11', 'Sugar No.14', 'Frozen Concentrated Orange Juice', 'Adzuki bean', 'Robusta coffee'];\nexport const CURRENCY_OPTIONS = ['USD', 'GBP', 'JPY', 'EUR', 'BRL', 'MXN', 'AUD', 'CAD', 'NZD', 'ARS', 'CHF', 'THB', 'HKD', 'TRY'];\nexport const COUNTRY_OPTIONS = ['United States', 'United Kingdom', 'Japan', 'France', 'Brazil', 'Mexico', 'Australia', 'Canada', 'New Zealand', 'Argentina', 'Switzerland', 'Thailand', 'Hong Kong', 'Turkey'];\nexport const COUNTRY_ISO_OPTIONS = [{\n  value: 'AD',\n  code: 'AD',\n  label: 'Andorra',\n  phone: '376'\n}, {\n  value: 'AE',\n  code: 'AE',\n  label: 'United Arab Emirates',\n  phone: '971'\n}, {\n  value: 'AF',\n  code: 'AF',\n  label: 'Afghanistan',\n  phone: '93'\n}, {\n  value: 'AG',\n  code: 'AG',\n  label: 'Antigua and Barbuda',\n  phone: '1-268'\n}, {\n  value: 'AI',\n  code: 'AI',\n  label: 'Anguilla',\n  phone: '1-264'\n}, {\n  value: 'AL',\n  code: 'AL',\n  label: 'Albania',\n  phone: '355'\n}, {\n  value: 'AM',\n  code: 'AM',\n  label: 'Armenia',\n  phone: '374'\n}, {\n  value: 'AO',\n  code: 'AO',\n  label: 'Angola',\n  phone: '244'\n}, {\n  value: 'AQ',\n  code: 'AQ',\n  label: 'Antarctica',\n  phone: '672'\n}, {\n  value: 'AR',\n  code: 'AR',\n  label: 'Argentina',\n  phone: '54'\n}, {\n  value: 'AS',\n  code: 'AS',\n  label: 'American Samoa',\n  phone: '1-684'\n}, {\n  value: 'AT',\n  code: 'AT',\n  label: 'Austria',\n  phone: '43'\n}, {\n  value: 'AU',\n  code: 'AU',\n  label: 'Australia',\n  phone: '61',\n  suggested: true\n}, {\n  value: 'AW',\n  code: 'AW',\n  label: 'Aruba',\n  phone: '297'\n}, {\n  value: 'AX',\n  code: 'AX',\n  label: 'Alland Islands',\n  phone: '358'\n}, {\n  value: 'AZ',\n  code: 'AZ',\n  label: 'Azerbaijan',\n  phone: '994'\n}, {\n  value: 'BA',\n  code: 'BA',\n  label: 'Bosnia and Herzegovina',\n  phone: '387'\n}, {\n  value: 'BB',\n  code: 'BB',\n  label: 'Barbados',\n  phone: '1-246'\n}, {\n  value: 'BD',\n  code: 'BD',\n  label: 'Bangladesh',\n  phone: '880'\n}, {\n  value: 'BE',\n  code: 'BE',\n  label: 'Belgium',\n  phone: '32'\n}, {\n  value: 'BF',\n  code: 'BF',\n  label: 'Burkina Faso',\n  phone: '226'\n}, {\n  value: 'BG',\n  code: 'BG',\n  label: 'Bulgaria',\n  phone: '359'\n}, {\n  value: 'BH',\n  code: 'BH',\n  label: 'Bahrain',\n  phone: '973'\n}, {\n  value: 'BI',\n  code: 'BI',\n  label: 'Burundi',\n  phone: '257'\n}, {\n  value: 'BJ',\n  code: 'BJ',\n  label: 'Benin',\n  phone: '229'\n}, {\n  value: 'BL',\n  code: 'BL',\n  label: 'Saint Barthelemy',\n  phone: '590'\n}, {\n  value: 'BM',\n  code: 'BM',\n  label: 'Bermuda',\n  phone: '1-441'\n}, {\n  value: 'BN',\n  code: 'BN',\n  label: 'Brunei Darussalam',\n  phone: '673'\n}, {\n  value: 'BO',\n  code: 'BO',\n  label: 'Bolivia',\n  phone: '591'\n}, {\n  value: 'BR',\n  code: 'BR',\n  label: 'Brazil',\n  phone: '55'\n}, {\n  value: 'BS',\n  code: 'BS',\n  label: 'Bahamas',\n  phone: '1-242'\n}, {\n  value: 'BT',\n  code: 'BT',\n  label: 'Bhutan',\n  phone: '975'\n}, {\n  value: 'BV',\n  code: 'BV',\n  label: 'Bouvet Island',\n  phone: '47'\n}, {\n  value: 'BW',\n  code: 'BW',\n  label: 'Botswana',\n  phone: '267'\n}, {\n  value: 'BY',\n  code: 'BY',\n  label: 'Belarus',\n  phone: '375'\n}, {\n  value: 'BZ',\n  code: 'BZ',\n  label: 'Belize',\n  phone: '501'\n}, {\n  value: 'CA',\n  code: 'CA',\n  label: 'Canada',\n  phone: '1',\n  suggested: true\n}, {\n  value: 'CC',\n  code: 'CC',\n  label: 'Cocos (Keeling) Islands',\n  phone: '61'\n}, {\n  value: 'CD',\n  code: 'CD',\n  label: 'Congo, Democratic Republic of the',\n  phone: '243'\n}, {\n  value: 'CF',\n  code: 'CF',\n  label: 'Central African Republic',\n  phone: '236'\n}, {\n  value: 'CG',\n  code: 'CG',\n  label: 'Congo, Republic of the',\n  phone: '242'\n}, {\n  value: 'CH',\n  code: 'CH',\n  label: 'Switzerland',\n  phone: '41'\n}, {\n  value: 'CI',\n  code: 'CI',\n  label: \"Cote d'Ivoire\",\n  phone: '225'\n}, {\n  value: 'CK',\n  code: 'CK',\n  label: 'Cook Islands',\n  phone: '682'\n}, {\n  value: 'CL',\n  code: 'CL',\n  label: 'Chile',\n  phone: '56'\n}, {\n  value: 'CM',\n  code: 'CM',\n  label: 'Cameroon',\n  phone: '237'\n}, {\n  value: 'CN',\n  code: 'CN',\n  label: 'China',\n  phone: '86'\n}, {\n  value: 'CO',\n  code: 'CO',\n  label: 'Colombia',\n  phone: '57'\n}, {\n  value: 'CR',\n  code: 'CR',\n  label: 'Costa Rica',\n  phone: '506'\n}, {\n  value: 'CU',\n  code: 'CU',\n  label: 'Cuba',\n  phone: '53'\n}, {\n  value: 'CV',\n  code: 'CV',\n  label: 'Cape Verde',\n  phone: '238'\n}, {\n  value: 'CW',\n  code: 'CW',\n  label: 'Curacao',\n  phone: '599'\n}, {\n  value: 'CX',\n  code: 'CX',\n  label: 'Christmas Island',\n  phone: '61'\n}, {\n  value: 'CY',\n  code: 'CY',\n  label: 'Cyprus',\n  phone: '357'\n}, {\n  value: 'CZ',\n  code: 'CZ',\n  label: 'Czech Republic',\n  phone: '420'\n}, {\n  value: 'DE',\n  code: 'DE',\n  label: 'Germany',\n  phone: '49',\n  suggested: true\n}, {\n  value: 'DJ',\n  code: 'DJ',\n  label: 'Djibouti',\n  phone: '253'\n}, {\n  value: 'DK',\n  code: 'DK',\n  label: 'Denmark',\n  phone: '45'\n}, {\n  value: 'DM',\n  code: 'DM',\n  label: 'Dominica',\n  phone: '1-767'\n}, {\n  value: 'DO',\n  code: 'DO',\n  label: 'Dominican Republic',\n  phone: '1-809'\n}, {\n  value: 'DZ',\n  code: 'DZ',\n  label: 'Algeria',\n  phone: '213'\n}, {\n  value: 'EC',\n  code: 'EC',\n  label: 'Ecuador',\n  phone: '593'\n}, {\n  value: 'EE',\n  code: 'EE',\n  label: 'Estonia',\n  phone: '372'\n}, {\n  value: 'EG',\n  code: 'EG',\n  label: 'Egypt',\n  phone: '20'\n}, {\n  value: 'EH',\n  code: 'EH',\n  label: 'Western Sahara',\n  phone: '212'\n}, {\n  value: 'ER',\n  code: 'ER',\n  label: 'Eritrea',\n  phone: '291'\n}, {\n  value: 'ES',\n  code: 'ES',\n  label: 'Spain',\n  phone: '34'\n}, {\n  value: 'ET',\n  code: 'ET',\n  label: 'Ethiopia',\n  phone: '251'\n}, {\n  value: 'FI',\n  code: 'FI',\n  label: 'Finland',\n  phone: '358'\n}, {\n  value: 'FJ',\n  code: 'FJ',\n  label: 'Fiji',\n  phone: '679'\n}, {\n  value: 'FK',\n  code: 'FK',\n  label: 'Falkland Islands (Malvinas)',\n  phone: '500'\n}, {\n  value: 'FM',\n  code: 'FM',\n  label: 'Micronesia, Federated States of',\n  phone: '691'\n}, {\n  value: 'FO',\n  code: 'FO',\n  label: 'Faroe Islands',\n  phone: '298'\n}, {\n  value: 'FR',\n  code: 'FR',\n  label: 'France',\n  phone: '33',\n  suggested: true\n}, {\n  value: 'GA',\n  code: 'GA',\n  label: 'Gabon',\n  phone: '241'\n}, {\n  value: 'GB',\n  code: 'GB',\n  label: 'United Kingdom',\n  phone: '44'\n}, {\n  value: 'GD',\n  code: 'GD',\n  label: 'Grenada',\n  phone: '1-473'\n}, {\n  value: 'GE',\n  code: 'GE',\n  label: 'Georgia',\n  phone: '995'\n}, {\n  value: 'GF',\n  code: 'GF',\n  label: 'French Guiana',\n  phone: '594'\n}, {\n  value: 'GG',\n  code: 'GG',\n  label: 'Guernsey',\n  phone: '44'\n}, {\n  value: 'GH',\n  code: 'GH',\n  label: 'Ghana',\n  phone: '233'\n}, {\n  value: 'GI',\n  code: 'GI',\n  label: 'Gibraltar',\n  phone: '350'\n}, {\n  value: 'GL',\n  code: 'GL',\n  label: 'Greenland',\n  phone: '299'\n}, {\n  value: 'GM',\n  code: 'GM',\n  label: 'Gambia',\n  phone: '220'\n}, {\n  value: 'GN',\n  code: 'GN',\n  label: 'Guinea',\n  phone: '224'\n}, {\n  value: 'GP',\n  code: 'GP',\n  label: 'Guadeloupe',\n  phone: '590'\n}, {\n  value: 'GQ',\n  code: 'GQ',\n  label: 'Equatorial Guinea',\n  phone: '240'\n}, {\n  value: 'GR',\n  code: 'GR',\n  label: 'Greece',\n  phone: '30'\n}, {\n  value: 'GS',\n  code: 'GS',\n  label: 'South Georgia and the South Sandwich Islands',\n  phone: '500'\n}, {\n  value: 'GT',\n  code: 'GT',\n  label: 'Guatemala',\n  phone: '502'\n}, {\n  value: 'GU',\n  code: 'GU',\n  label: 'Guam',\n  phone: '1-671'\n}, {\n  value: 'GW',\n  code: 'GW',\n  label: 'Guinea-Bissau',\n  phone: '245'\n}, {\n  value: 'GY',\n  code: 'GY',\n  label: 'Guyana',\n  phone: '592'\n}, {\n  value: 'HK',\n  code: 'HK',\n  label: 'Hong Kong',\n  phone: '852'\n}, {\n  value: 'HM',\n  code: 'HM',\n  label: 'Heard Island and McDonald Islands',\n  phone: '672'\n}, {\n  value: 'HN',\n  code: 'HN',\n  label: 'Honduras',\n  phone: '504'\n}, {\n  value: 'HR',\n  code: 'HR',\n  label: 'Croatia',\n  phone: '385'\n}, {\n  value: 'HT',\n  code: 'HT',\n  label: 'Haiti',\n  phone: '509'\n}, {\n  value: 'HU',\n  code: 'HU',\n  label: 'Hungary',\n  phone: '36'\n}, {\n  value: 'ID',\n  code: 'ID',\n  label: 'Indonesia',\n  phone: '62'\n}, {\n  value: 'IE',\n  code: 'IE',\n  label: 'Ireland',\n  phone: '353'\n}, {\n  value: 'IL',\n  code: 'IL',\n  label: 'Israel',\n  phone: '972'\n}, {\n  value: 'IM',\n  code: 'IM',\n  label: 'Isle of Man',\n  phone: '44'\n}, {\n  value: 'IN',\n  code: 'IN',\n  label: 'India',\n  phone: '91'\n}, {\n  value: 'IO',\n  code: 'IO',\n  label: 'British Indian Ocean Territory',\n  phone: '246'\n}, {\n  value: 'IQ',\n  code: 'IQ',\n  label: 'Iraq',\n  phone: '964'\n}, {\n  value: 'IR',\n  code: 'IR',\n  label: 'Iran, Islamic Republic of',\n  phone: '98'\n}, {\n  value: 'IS',\n  code: 'IS',\n  label: 'Iceland',\n  phone: '354'\n}, {\n  value: 'IT',\n  code: 'IT',\n  label: 'Italy',\n  phone: '39'\n}, {\n  value: 'JE',\n  code: 'JE',\n  label: 'Jersey',\n  phone: '44'\n}, {\n  value: 'JM',\n  code: 'JM',\n  label: 'Jamaica',\n  phone: '1-876'\n}, {\n  value: 'JO',\n  code: 'JO',\n  label: 'Jordan',\n  phone: '962'\n}, {\n  value: 'JP',\n  code: 'JP',\n  label: 'Japan',\n  phone: '81',\n  suggested: true\n}, {\n  value: 'KE',\n  code: 'KE',\n  label: 'Kenya',\n  phone: '254'\n}, {\n  value: 'KG',\n  code: 'KG',\n  label: 'Kyrgyzstan',\n  phone: '996'\n}, {\n  value: 'KH',\n  code: 'KH',\n  label: 'Cambodia',\n  phone: '855'\n}, {\n  value: 'KI',\n  code: 'KI',\n  label: 'Kiribati',\n  phone: '686'\n}, {\n  value: 'KM',\n  code: 'KM',\n  label: 'Comoros',\n  phone: '269'\n}, {\n  value: 'KN',\n  code: 'KN',\n  label: 'Saint Kitts and Nevis',\n  phone: '1-869'\n}, {\n  value: 'KP',\n  code: 'KP',\n  label: \"Korea, Democratic People's Republic of\",\n  phone: '850'\n}, {\n  value: 'KR',\n  code: 'KR',\n  label: 'Korea, Republic of',\n  phone: '82'\n}, {\n  value: 'KW',\n  code: 'KW',\n  label: 'Kuwait',\n  phone: '965'\n}, {\n  value: 'KY',\n  code: 'KY',\n  label: 'Cayman Islands',\n  phone: '1-345'\n}, {\n  value: 'KZ',\n  code: 'KZ',\n  label: 'Kazakhstan',\n  phone: '7'\n}, {\n  value: 'LA',\n  code: 'LA',\n  label: \"Lao People's Democratic Republic\",\n  phone: '856'\n}, {\n  value: 'LB',\n  code: 'LB',\n  label: 'Lebanon',\n  phone: '961'\n}, {\n  value: 'LC',\n  code: 'LC',\n  label: 'Saint Lucia',\n  phone: '1-758'\n}, {\n  value: 'LI',\n  code: 'LI',\n  label: 'Liechtenstein',\n  phone: '423'\n}, {\n  value: 'LK',\n  code: 'LK',\n  label: 'Sri Lanka',\n  phone: '94'\n}, {\n  value: 'LR',\n  code: 'LR',\n  label: 'Liberia',\n  phone: '231'\n}, {\n  value: 'LS',\n  code: 'LS',\n  label: 'Lesotho',\n  phone: '266'\n}, {\n  value: 'LT',\n  code: 'LT',\n  label: 'Lithuania',\n  phone: '370'\n}, {\n  value: 'LU',\n  code: 'LU',\n  label: 'Luxembourg',\n  phone: '352'\n}, {\n  value: 'LV',\n  code: 'LV',\n  label: 'Latvia',\n  phone: '371'\n}, {\n  value: 'LY',\n  code: 'LY',\n  label: 'Libya',\n  phone: '218'\n}, {\n  value: 'MA',\n  code: 'MA',\n  label: 'Morocco',\n  phone: '212'\n}, {\n  value: 'MC',\n  code: 'MC',\n  label: 'Monaco',\n  phone: '377'\n}, {\n  value: 'MD',\n  code: 'MD',\n  label: 'Moldova, Republic of',\n  phone: '373'\n}, {\n  value: 'ME',\n  code: 'ME',\n  label: 'Montenegro',\n  phone: '382'\n}, {\n  value: 'MF',\n  code: 'MF',\n  label: 'Saint Martin (French part)',\n  phone: '590'\n}, {\n  value: 'MG',\n  code: 'MG',\n  label: 'Madagascar',\n  phone: '261'\n}, {\n  value: 'MH',\n  code: 'MH',\n  label: 'Marshall Islands',\n  phone: '692'\n}, {\n  value: 'MK',\n  code: 'MK',\n  label: 'North Macedonia',\n  phone: '389'\n}, {\n  value: 'ML',\n  code: 'ML',\n  label: 'Mali',\n  phone: '223'\n}, {\n  value: 'MM',\n  code: 'MM',\n  label: 'Myanmar',\n  phone: '95'\n}, {\n  value: 'MN',\n  code: 'MN',\n  label: 'Mongolia',\n  phone: '976'\n}, {\n  value: 'MO',\n  code: 'MO',\n  label: 'Macao',\n  phone: '853'\n}, {\n  value: 'MP',\n  code: 'MP',\n  label: 'Northern Mariana Islands',\n  phone: '1-670'\n}, {\n  value: 'MQ',\n  code: 'MQ',\n  label: 'Martinique',\n  phone: '596'\n}, {\n  value: 'MR',\n  code: 'MR',\n  label: 'Mauritania',\n  phone: '222'\n}, {\n  value: 'MS',\n  code: 'MS',\n  label: 'Montserrat',\n  phone: '1-664'\n}, {\n  value: 'MT',\n  code: 'MT',\n  label: 'Malta',\n  phone: '356'\n}, {\n  value: 'MU',\n  code: 'MU',\n  label: 'Mauritius',\n  phone: '230'\n}, {\n  value: 'MV',\n  code: 'MV',\n  label: 'Maldives',\n  phone: '960'\n}, {\n  value: 'MW',\n  code: 'MW',\n  label: 'Malawi',\n  phone: '265'\n}, {\n  value: 'MX',\n  code: 'MX',\n  label: 'Mexico',\n  phone: '52'\n}, {\n  value: 'MY',\n  code: 'MY',\n  label: 'Malaysia',\n  phone: '60'\n}, {\n  value: 'MZ',\n  code: 'MZ',\n  label: 'Mozambique',\n  phone: '258'\n}, {\n  value: 'NA',\n  code: 'NA',\n  label: 'Namibia',\n  phone: '264'\n}, {\n  value: 'NC',\n  code: 'NC',\n  label: 'New Caledonia',\n  phone: '687'\n}, {\n  value: 'NE',\n  code: 'NE',\n  label: 'Niger',\n  phone: '227'\n}, {\n  value: 'NF',\n  code: 'NF',\n  label: 'Norfolk Island',\n  phone: '672'\n}, {\n  value: 'NG',\n  code: 'NG',\n  label: 'Nigeria',\n  phone: '234'\n}, {\n  value: 'NI',\n  code: 'NI',\n  label: 'Nicaragua',\n  phone: '505'\n}, {\n  value: 'NL',\n  code: 'NL',\n  label: 'Netherlands',\n  phone: '31'\n}, {\n  value: 'NO',\n  code: 'NO',\n  label: 'Norway',\n  phone: '47'\n}, {\n  value: 'NP',\n  code: 'NP',\n  label: 'Nepal',\n  phone: '977'\n}, {\n  value: 'NR',\n  code: 'NR',\n  label: 'Nauru',\n  phone: '674'\n}, {\n  value: 'NU',\n  code: 'NU',\n  label: 'Niue',\n  phone: '683'\n}, {\n  value: 'NZ',\n  code: 'NZ',\n  label: 'New Zealand',\n  phone: '64'\n}, {\n  value: 'OM',\n  code: 'OM',\n  label: 'Oman',\n  phone: '968'\n}, {\n  value: 'PA',\n  code: 'PA',\n  label: 'Panama',\n  phone: '507'\n}, {\n  value: 'PE',\n  code: 'PE',\n  label: 'Peru',\n  phone: '51'\n}, {\n  value: 'PF',\n  code: 'PF',\n  label: 'French Polynesia',\n  phone: '689'\n}, {\n  value: 'PG',\n  code: 'PG',\n  label: 'Papua New Guinea',\n  phone: '675'\n}, {\n  value: 'PH',\n  code: 'PH',\n  label: 'Philippines',\n  phone: '63'\n}, {\n  value: 'PK',\n  code: 'PK',\n  label: 'Pakistan',\n  phone: '92'\n}, {\n  value: 'PL',\n  code: 'PL',\n  label: 'Poland',\n  phone: '48'\n}, {\n  value: 'PM',\n  code: 'PM',\n  label: 'Saint Pierre and Miquelon',\n  phone: '508'\n}, {\n  value: 'PN',\n  code: 'PN',\n  label: 'Pitcairn',\n  phone: '870'\n}, {\n  value: 'PR',\n  code: 'PR',\n  label: 'Puerto Rico',\n  phone: '1'\n}, {\n  value: 'PS',\n  code: 'PS',\n  label: 'Palestine, State of',\n  phone: '970'\n}, {\n  value: 'PT',\n  code: 'PT',\n  label: 'Portugal',\n  phone: '351'\n}, {\n  value: 'PW',\n  code: 'PW',\n  label: 'Palau',\n  phone: '680'\n}, {\n  value: 'PY',\n  code: 'PY',\n  label: 'Paraguay',\n  phone: '595'\n}, {\n  value: 'QA',\n  code: 'QA',\n  label: 'Qatar',\n  phone: '974'\n}, {\n  value: 'RE',\n  code: 'RE',\n  label: 'Reunion',\n  phone: '262'\n}, {\n  value: 'RO',\n  code: 'RO',\n  label: 'Romania',\n  phone: '40'\n}, {\n  value: 'RS',\n  code: 'RS',\n  label: 'Serbia',\n  phone: '381'\n}, {\n  value: 'RU',\n  code: 'RU',\n  label: 'Russian Federation',\n  phone: '7'\n}, {\n  value: 'RW',\n  code: 'RW',\n  label: 'Rwanda',\n  phone: '250'\n}, {\n  value: 'SA',\n  code: 'SA',\n  label: 'Saudi Arabia',\n  phone: '966'\n}, {\n  value: 'SB',\n  code: 'SB',\n  label: 'Solomon Islands',\n  phone: '677'\n}, {\n  value: 'SC',\n  code: 'SC',\n  label: 'Seychelles',\n  phone: '248'\n}, {\n  value: 'SD',\n  code: 'SD',\n  label: 'Sudan',\n  phone: '249'\n}, {\n  value: 'SE',\n  code: 'SE',\n  label: 'Sweden',\n  phone: '46'\n}, {\n  value: 'SG',\n  code: 'SG',\n  label: 'Singapore',\n  phone: '65'\n}, {\n  value: 'SH',\n  code: 'SH',\n  label: 'Saint Helena',\n  phone: '290'\n}, {\n  value: 'SI',\n  code: 'SI',\n  label: 'Slovenia',\n  phone: '386'\n}, {\n  value: 'SJ',\n  code: 'SJ',\n  label: 'Svalbard and Jan Mayen',\n  phone: '47'\n}, {\n  value: 'SK',\n  code: 'SK',\n  label: 'Slovakia',\n  phone: '421'\n}, {\n  value: 'SL',\n  code: 'SL',\n  label: 'Sierra Leone',\n  phone: '232'\n}, {\n  value: 'SM',\n  code: 'SM',\n  label: 'San Marino',\n  phone: '378'\n}, {\n  value: 'SN',\n  code: 'SN',\n  label: 'Senegal',\n  phone: '221'\n}, {\n  value: 'SO',\n  code: 'SO',\n  label: 'Somalia',\n  phone: '252'\n}, {\n  value: 'SR',\n  code: 'SR',\n  label: 'Suriname',\n  phone: '597'\n}, {\n  value: 'SS',\n  code: 'SS',\n  label: 'South Sudan',\n  phone: '211'\n}, {\n  value: 'ST',\n  code: 'ST',\n  label: 'Sao Tome and Principe',\n  phone: '239'\n}, {\n  value: 'SV',\n  code: 'SV',\n  label: 'El Salvador',\n  phone: '503'\n}, {\n  value: 'SX',\n  code: 'SX',\n  label: 'Sint Maarten (Dutch part)',\n  phone: '1-721'\n}, {\n  value: 'SY',\n  code: 'SY',\n  label: 'Syrian Arab Republic',\n  phone: '963'\n}, {\n  value: 'SZ',\n  code: 'SZ',\n  label: 'Swaziland',\n  phone: '268'\n}, {\n  value: 'TC',\n  code: 'TC',\n  label: 'Turks and Caicos Islands',\n  phone: '1-649'\n}, {\n  value: 'TD',\n  code: 'TD',\n  label: 'Chad',\n  phone: '235'\n}, {\n  value: 'TF',\n  code: 'TF',\n  label: 'French Southern Territories',\n  phone: '262'\n}, {\n  value: 'TG',\n  code: 'TG',\n  label: 'Togo',\n  phone: '228'\n}, {\n  value: 'TH',\n  code: 'TH',\n  label: 'Thailand',\n  phone: '66'\n}, {\n  value: 'TJ',\n  code: 'TJ',\n  label: 'Tajikistan',\n  phone: '992'\n}, {\n  value: 'TK',\n  code: 'TK',\n  label: 'Tokelau',\n  phone: '690'\n}, {\n  value: 'TL',\n  code: 'TL',\n  label: 'Timor-Leste',\n  phone: '670'\n}, {\n  value: 'TM',\n  code: 'TM',\n  label: 'Turkmenistan',\n  phone: '993'\n}, {\n  value: 'TN',\n  code: 'TN',\n  label: 'Tunisia',\n  phone: '216'\n}, {\n  value: 'TO',\n  code: 'TO',\n  label: 'Tonga',\n  phone: '676'\n}, {\n  value: 'TR',\n  code: 'TR',\n  label: 'Turkey',\n  phone: '90'\n}, {\n  value: 'TT',\n  code: 'TT',\n  label: 'Trinidad and Tobago',\n  phone: '1-868'\n}, {\n  value: 'TV',\n  code: 'TV',\n  label: 'Tuvalu',\n  phone: '688'\n}, {\n  value: 'TW',\n  code: 'TW',\n  label: 'Taiwan, Province of China',\n  phone: '886'\n}, {\n  value: 'TZ',\n  code: 'TZ',\n  label: 'United Republic of Tanzania',\n  phone: '255'\n}, {\n  value: 'UA',\n  code: 'UA',\n  label: 'Ukraine',\n  phone: '380'\n}, {\n  value: 'UG',\n  code: 'UG',\n  label: 'Uganda',\n  phone: '256'\n}, {\n  value: 'US',\n  code: 'US',\n  label: 'United States',\n  phone: '1',\n  suggested: true\n}, {\n  value: 'UY',\n  code: 'UY',\n  label: 'Uruguay',\n  phone: '598'\n}, {\n  value: 'UZ',\n  code: 'UZ',\n  label: 'Uzbekistan',\n  phone: '998'\n}, {\n  value: 'VA',\n  code: 'VA',\n  label: 'Holy See (Vatican City State)',\n  phone: '379'\n}, {\n  value: 'VC',\n  code: 'VC',\n  label: 'Saint Vincent and the Grenadines',\n  phone: '1-784'\n}, {\n  value: 'VE',\n  code: 'VE',\n  label: 'Venezuela',\n  phone: '58'\n}, {\n  value: 'VG',\n  code: 'VG',\n  label: 'British Virgin Islands',\n  phone: '1-284'\n}, {\n  value: 'VI',\n  code: 'VI',\n  label: 'US Virgin Islands',\n  phone: '1-340'\n}, {\n  value: 'VN',\n  code: 'VN',\n  label: 'Vietnam',\n  phone: '84'\n}, {\n  value: 'VU',\n  code: 'VU',\n  label: 'Vanuatu',\n  phone: '678'\n}, {\n  value: 'WF',\n  code: 'WF',\n  label: 'Wallis and Futuna',\n  phone: '681'\n}, {\n  value: 'WS',\n  code: 'WS',\n  label: 'Samoa',\n  phone: '685'\n}, {\n  value: 'XK',\n  code: 'XK',\n  label: 'Kosovo',\n  phone: '383'\n}, {\n  value: 'YE',\n  code: 'YE',\n  label: 'Yemen',\n  phone: '967'\n}, {\n  value: 'YT',\n  code: 'YT',\n  label: 'Mayotte',\n  phone: '262'\n}, {\n  value: 'ZA',\n  code: 'ZA',\n  label: 'South Africa',\n  phone: '27'\n}, {\n  value: 'ZM',\n  code: 'ZM',\n  label: 'Zambia',\n  phone: '260'\n}, {\n  value: 'ZW',\n  code: 'ZW',\n  label: 'Zimbabwe',\n  phone: '263'\n}];\nexport const COUNTRY_ISO_OPTIONS_SORTED = [...COUNTRY_ISO_OPTIONS].sort((v1, v2) => v1.label.localeCompare(v2.label));", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { useGridApiContext } from '@mui/x-data-grid-premium';\nimport Slider, { sliderClasses } from '@mui/material/Slider';\nimport Tooltip from '@mui/material/Tooltip';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport { alpha, styled } from '@mui/material/styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledSlider = styled(Slider)(({\n  theme\n}) => ({\n  display: 'flex',\n  height: '100%',\n  width: '100%',\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: 0,\n  borderRadius: 0,\n  [`& .${sliderClasses.rail}`]: {\n    height: '100%',\n    backgroundColor: 'transparent'\n  },\n  [`& .${sliderClasses.track}`]: {\n    height: '100%',\n    transition: theme.transitions.create('background-color', {\n      duration: theme.transitions.duration.shorter\n    }),\n    '&.low': {\n      backgroundColor: '#f44336'\n    },\n    '&.medium': {\n      backgroundColor: '#efbb5aa3'\n    },\n    '&.high': {\n      backgroundColor: '#088208a3'\n    }\n  },\n  [`& .${sliderClasses.thumb}`]: {\n    height: '100%',\n    width: 5,\n    borderRadius: 0,\n    marginTop: 0,\n    backgroundColor: alpha('#000000', 0.2)\n  }\n}));\nfunction ValueLabelComponent(props) {\n  const {\n    children,\n    open,\n    value\n  } = props;\n  return /*#__PURE__*/_jsx(Tooltip, {\n    open: open,\n    enterTouchDelay: 0,\n    placement: \"top\",\n    title: value,\n    children: children\n  });\n}\nfunction EditProgress(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const [valueState, setValueState] = React.useState(Number(value));\n  const apiRef = useGridApiContext();\n  const updateCellEditProps = React.useCallback(newValue => {\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newValue\n    });\n  }, [apiRef, field, id]);\n  const debouncedUpdateCellEditProps = React.useMemo(() => debounce(updateCellEditProps, 60), [updateCellEditProps]);\n  const handleChange = (event, newValue) => {\n    setValueState(newValue);\n    debouncedUpdateCellEditProps(newValue);\n  };\n  React.useEffect(() => {\n    setValueState(Number(value));\n  }, [value]);\n  const handleRef = element => {\n    if (element) {\n      element.querySelector('[type=\"range\"]').focus();\n    }\n  };\n  return /*#__PURE__*/_jsx(StyledSlider, {\n    ref: handleRef,\n    classes: {\n      track: clsx(valueState < 0.3 && \"low\", valueState >= 0.3 && valueState <= 0.7 && \"medium\", valueState > 0.7 && \"high\")\n    },\n    value: valueState,\n    max: 1,\n    step: 0.00001,\n    onChange: handleChange,\n    components: {\n      ValueLabel: ValueLabelComponent\n    },\n    valueLabelDisplay: \"auto\",\n    valueLabelFormat: newValue => `${(newValue * 100).toLocaleString()} %`\n  });\n}\nexport function renderEditProgress(params) {\n  return /*#__PURE__*/_jsx(EditProgress, _extends({}, params));\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext, useGridRootProps, GridEditModes } from '@mui/x-data-grid-premium';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport ReportProblemIcon from '@mui/icons-material/ReportProblem';\nimport InfoIcon from '@mui/icons-material/Info';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DoneIcon from '@mui/icons-material/Done';\nimport { STATUS_OPTIONS } from '../services/static-data';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EditStatus(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n  const handleChange = async event => {\n    const isValid = await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: event.target.value\n    });\n    if (isValid && rootProps.editMode === GridEditModes.Cell) {\n      apiRef.current.stopCellEditMode({\n        id,\n        field,\n        cellToFocusAfter: 'below'\n      });\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'backdropClick') {\n      apiRef.current.stopCellEditMode({\n        id,\n        field,\n        ignoreModifications: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsx(Select, {\n    value: value,\n    onChange: handleChange,\n    MenuProps: {\n      onClose: handleClose\n    },\n    sx: {\n      height: '100%',\n      '& .MuiSelect-select': {\n        display: 'flex',\n        alignItems: 'center',\n        pl: 1\n      }\n    },\n    autoFocus: true,\n    fullWidth: true,\n    open: true,\n    children: STATUS_OPTIONS.map(option => {\n      let IconComponent = null;\n      if (option === 'Rejected') {\n        IconComponent = ReportProblemIcon;\n      } else if (option === 'Open') {\n        IconComponent = InfoIcon;\n      } else if (option === 'PartiallyFilled') {\n        IconComponent = AutorenewIcon;\n      } else if (option === 'Filled') {\n        IconComponent = DoneIcon;\n      }\n      let label = option;\n      if (option === 'PartiallyFilled') {\n        label = 'Partially Filled';\n      }\n      return /*#__PURE__*/_jsxs(MenuItem, {\n        value: option,\n        children: [/*#__PURE__*/_jsx(ListItemIcon, {\n          sx: {\n            minWidth: 36\n          },\n          children: /*#__PURE__*/_jsx(IconComponent, {\n            fontSize: \"small\"\n          })\n        }), /*#__PURE__*/_jsx(ListItemText, {\n          primary: label,\n          sx: {\n            overflow: 'hidden'\n          }\n        })]\n      }, option);\n    })\n  });\n}\nexport function renderEditStatus(params) {\n  return /*#__PURE__*/_jsx(EditStatus, _extends({}, params));\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '@mui/x-data-grid-premium';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { INCOTERM_OPTIONS } from '../services/static-data';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EditIncoterm(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const apiRef = useGridApiContext();\n  const handleChange = async event => {\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: event.target.value\n    }, event);\n    apiRef.current.stopCellEditMode({\n      id,\n      field\n    });\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'backdropClick') {\n      apiRef.current.stopCellEditMode({\n        id,\n        field\n      });\n    }\n  };\n  return /*#__PURE__*/_jsx(Select, {\n    value: value,\n    onChange: handleChange,\n    MenuProps: {\n      onClose: handleClose\n    },\n    sx: {\n      height: '100%',\n      '& .MuiSelect-select': {\n        display: 'flex',\n        alignItems: 'center',\n        pl: 1\n      }\n    },\n    autoFocus: true,\n    fullWidth: true,\n    open: true,\n    children: INCOTERM_OPTIONS.map(option => {\n      const tooltip = option.slice(option.indexOf('(') + 1, option.indexOf(')'));\n      const code = option.slice(0, option.indexOf('(')).trim();\n      return /*#__PURE__*/_jsxs(MenuItem, {\n        value: option,\n        children: [/*#__PURE__*/_jsx(ListItemIcon, {\n          sx: {\n            minWidth: 36\n          },\n          children: code\n        }), /*#__PURE__*/_jsx(ListItemText, {\n          primary: tooltip,\n          sx: {\n            overflow: 'hidden'\n          }\n        })]\n      }, option);\n    })\n  });\n}\nexport function renderEditIncoterm(params) {\n  return /*#__PURE__*/_jsx(EditIncoterm, _extends({}, params));\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Rating from '@mui/material/Rating';\nimport { useGridApiContext } from '@mui/x-data-grid-premium';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EditRating(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const apiRef = useGridApiContext();\n  const changedThroughKeyboard = React.useRef(false);\n  const handleChange = async event => {\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: Number(event.target.value)\n    }, event);\n    if (!changedThroughKeyboard.current) {\n      apiRef.current.stopCellEditMode({\n        id,\n        field\n      });\n    }\n    changedThroughKeyboard.current = false;\n  };\n  const handleRef = element => {\n    if (element) {\n      if (value !== 0) {\n        element.querySelector(`input[value=\"${value}\"]`).focus();\n      } else {\n        element.querySelector('input[value=\"\"]').focus();\n      }\n    }\n  };\n  const handleKeyDown = event => {\n    if (event.key.startsWith('Arrow')) {\n      changedThroughKeyboard.current = true;\n    } else {\n      changedThroughKeyboard.current = false;\n    }\n  };\n  return /*#__PURE__*/_jsxs(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: '24px',\n      color: 'text.secondary',\n      mr: 1\n    },\n    children: [/*#__PURE__*/_jsx(Rating, {\n      ref: handleRef,\n      name: \"rating\",\n      value: Number(value),\n      precision: 1,\n      onChange: handleChange,\n      sx: {\n        mr: 1\n      },\n      onKeyDown: handleKeyDown\n    }), Number(value)]\n  });\n}\nexport function renderEditRating(params) {\n  return /*#__PURE__*/_jsx(EditRating, _extends({}, params));\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '@mui/x-data-grid-premium';\nimport Autocomplete, { autocompleteClasses } from '@mui/material/Autocomplete';\nimport InputBase from '@mui/material/InputBase';\nimport Box from '@mui/material/Box';\nimport { styled } from '@mui/material/styles';\nimport { COUNTRY_ISO_OPTIONS } from '../services/static-data';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst StyledAutocomplete = styled(Autocomplete)(({\n  theme\n}) => ({\n  height: '100%',\n  [`& .${autocompleteClasses.inputRoot}`]: _extends({}, theme.typography.body2, {\n    padding: '1px 0',\n    height: '100%',\n    '& input': {\n      padding: '0 16px',\n      height: '100%'\n    }\n  })\n}));\nfunction EditCountry(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const apiRef = useGridApiContext();\n  const handleChange = React.useCallback(async (event, newValue) => {\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newValue\n    }, event);\n    apiRef.current.stopCellEditMode({\n      id,\n      field\n    });\n  }, [apiRef, field, id]);\n  return /*#__PURE__*/_jsx(StyledAutocomplete, {\n    value: value,\n    onChange: handleChange,\n    options: COUNTRY_ISO_OPTIONS,\n    getOptionLabel: option => option.label,\n    autoHighlight: true,\n    fullWidth: true,\n    open: true,\n    disableClearable: true,\n    renderOption: (optionProps, option) => /*#__PURE__*/_jsxs(Box, _extends({\n      component: \"li\",\n      sx: {\n        '& > img': {\n          mr: 1.5,\n          flexShrink: 0\n        }\n      }\n    }, optionProps, {\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        loading: \"lazy\",\n        width: \"20\",\n        src: `https://flagcdn.com/w20/${option.code.toLowerCase()}.png`,\n        srcSet: `https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`,\n        alt: \"\"\n      }), option.label]\n    })),\n    renderInput: params => /*#__PURE__*/_jsx(InputBase, _extends({\n      autoFocus: true,\n      fullWidth: true,\n      id: params.id,\n      inputProps: _extends({}, params.inputProps, {\n        autoComplete: 'new-password' // disable autocomplete and autofill\n      })\n    }, params.InputProps))\n  });\n}\nexport function renderEditCountry(params) {\n  return /*#__PURE__*/_jsx(EditCountry, _extends({}, params));\n}", "import { Chance } from 'chance';\nimport { COLORS, COMMODITY_OPTIONS, CONTRACT_TYPE_OPTIONS, COUNTRY_ISO_OPTIONS, CURRENCY_OPTIONS, INCOTERM_OPTIONS, RATE_TYPE_OPTIONS, STATUS_OPTIONS, TAXCODE_OPTIONS } from './static-data';\nlet chance;\nlet chanceGuid;\nif (typeof DISABLE_CHANCE_RANDOM !== 'undefined' && DISABLE_CHANCE_RANDOM) {\n  chance = new Chance(() => 0.5);\n  chanceGuid = new Chance(42);\n} else {\n  chance = new Chance();\n  chanceGuid = chance;\n}\n/**\n * Wrap a data generator that returns a string and add a prefix if the value generated has already been given\n */\nconst uniquenessHandler = generator => (data, context) => {\n  const rawValue = generator(data, context);\n  if (!context.values) {\n    return rawValue;\n  }\n  const valueCount = (context.values[rawValue] ?? 0) + 1;\n  context.values[rawValue] = valueCount + 1;\n  if (valueCount > 1) {\n    return `${rawValue} ${valueCount}`;\n  }\n  return rawValue;\n};\nfunction dateFuture(years, refDate) {\n  let date = new Date();\n  if (typeof refDate !== 'undefined') {\n    date = new Date(Date.parse(refDate));\n  }\n  const range = {\n    min: 1000,\n    max: (years || 1) * 365 * 24 * 3600 * 1000\n  };\n\n  // some time from now to N years later, in milliseconds\n  const past = date.getTime() + chance.integer(range);\n  date.setTime(past);\n  return date;\n}\nfunction dateRecent(days, refDate) {\n  let date = new Date();\n  if (typeof refDate !== 'undefined') {\n    date = new Date(Date.parse(refDate));\n  }\n  const range = {\n    min: 1000,\n    max: (days || 1) * 24 * 3600 * 1000\n  };\n\n  // some time from now to N days ago, in milliseconds\n  const past = date.getTime() - chance.integer(range);\n  date.setTime(past);\n  return date;\n}\nfunction datePast(years, refDate) {\n  let date = new Date();\n  if (typeof refDate !== 'undefined') {\n    date = new Date(Date.parse(refDate));\n  }\n  const range = {\n    min: 1000,\n    max: (years || 1) * 365 * 24 * 3600 * 1000\n  };\n\n  // some time from now to N years ago, in milliseconds\n  const past = date.getTime() - chance.integer(range);\n  date.setTime(past);\n  return date;\n}\nexport const random = (min, max) => chance.floating({\n  min,\n  max\n});\nexport const randomInt = (min, max) => chance.integer({\n  min,\n  max\n});\nexport const randomPrice = (min = 0, max = 100000) => Number(random(min, max).toFixed(2));\nexport const randomRate = () => random(0, 1);\nexport const randomDate = (start, end) => new Date(start.getTime() + chance.floating({\n  min: 0,\n  max: 1\n}) * (end.getTime() - start.getTime()));\nexport const randomArrayItem = arr => arr[randomInt(0, arr.length - 1)];\nexport const randomBoolean = () => randomArrayItem([true, false]);\nexport const randomColor = () => randomArrayItem(COLORS);\nexport const randomId = () => chanceGuid.guid();\nexport const randomDesk = () => `D-${chance.integer({\n  min: 0,\n  max: 10000\n})}`;\nexport const randomCommodity = () => randomArrayItem(COMMODITY_OPTIONS);\nexport const randomTraderName = () => chance.name();\nexport const randomUserName = () => chance.twitter();\nexport const randomEmail = () => chance.email();\nexport const randomUrl = () => chance.url();\nexport const randomPhoneNumber = () => chance.phone();\nexport const randomUnitPrice = () => randomPrice(1, 100);\nexport const randomUnitPriceCurrency = () => randomArrayItem(CURRENCY_OPTIONS);\nexport const randomQuantity = () => randomInt(1000, 100000);\nexport const randomFeeRate = () => Number(random(0.1, 0.4).toFixed(3));\nexport const randomIncoterm = () => randomArrayItem(INCOTERM_OPTIONS);\nexport const randomStatusOptions = () => randomArrayItem(STATUS_OPTIONS);\nexport const randomPnL = () => random(-100000000, 100000000);\nexport const randomMaturityDate = () => dateFuture();\nexport const randomTradeDate = () => dateRecent();\nexport const randomBrokerId = () => chance.guid();\nexport const randomCompanyName = () => chance.company();\nexport const randomCountry = () => randomArrayItem(COUNTRY_ISO_OPTIONS);\nexport const randomCurrency = () => randomArrayItem(CURRENCY_OPTIONS);\nexport const randomAddress = () => chance.address();\nexport const randomCity = () => chance.city();\nexport const randomTaxCode = () => randomArrayItem(TAXCODE_OPTIONS);\nexport const randomContractType = () => randomArrayItem(CONTRACT_TYPE_OPTIONS);\nexport const randomRateType = () => randomArrayItem(RATE_TYPE_OPTIONS);\nexport const randomCreatedDate = () => datePast();\nexport const randomUpdatedDate = () => dateRecent();\nexport const randomJobTitle = () => chance.profession();\nexport const randomRating = () => randomInt(1, 5);\nexport const randomName = uniquenessHandler(() => chance.name());\nexport const generateFilledQuantity = data => Number((data.quantity * randomRate()).toFixed()) / data.quantity;\nexport const generateIsFilled = data => data.quantity === data.filledQuantity;", "export default function asyncWorker({\n  work,\n  tasks,\n  done\n}) {\n  const myNonEssentialWork = deadline => {\n    // If there is a surplus time in the frame, or timeout\n    while ((deadline.timeRemaining() > 0 || deadline.didTimeout) && tasks.current > 0) {\n      work();\n    }\n    if (tasks.current > 0) {\n      requestIdleCallback(myNonEssentialWork);\n    } else {\n      done();\n    }\n  };\n\n  // Don't use requestIdleCallback if the time is mock, better to run synchronously in such case.\n  if (typeof requestIdleCallback === 'function' && !requestIdleCallback.clock) {\n    requestIdleCallback(myNonEssentialWork);\n  } else {\n    while (tasks.current > 0) {\n      work();\n    }\n    done();\n  }\n}", "import asyncWorker from './asyncWorker';\nexport function getRealGridData(rowLength, columns) {\n  return new Promise(resolve => {\n    const tasks = {\n      current: rowLength\n    };\n    const rows = [];\n    const indexedValues = {};\n    function work() {\n      const row = {};\n      for (let j = 0; j < columns.length; j += 1) {\n        const column = columns[j];\n        if (column.generateData) {\n          const context = {};\n          if (column.dataGeneratorUniquenessEnabled) {\n            let fieldValues = indexedValues[column.field];\n            if (!fieldValues) {\n              fieldValues = {};\n              indexedValues[column.field] = fieldValues;\n            }\n            context.values = fieldValues;\n          }\n          row[column.field] = column.generateData(row, context);\n        }\n      }\n      rows.push(row);\n      tasks.current -= 1;\n    }\n    const columnVisibilityModel = {};\n    columns.forEach(col => {\n      if (col.hide) {\n        columnVisibilityModel[col.field] = false;\n      }\n    });\n    asyncWorker({\n      work,\n      done: () => resolve({\n        columns,\n        rows,\n        initialState: {\n          columns: {\n            columnVisibilityModel\n          }\n        }\n      }),\n      tasks\n    });\n  });\n}", "export const currencyPairs = ['USDGBP', 'USDEUR', 'GBPEUR', 'JPYUSD', 'MXNUSD', 'BTCUSD', 'USDCAD', 'EURJPY', 'EURUSD', 'EURCHF', 'USDCHF', 'EURGBP', 'GBPUSD', 'AUDCAD', 'NZDUSD', 'GBPCHF', 'AUDUSD', 'GBPJPY', 'USDJPY', 'CHFJPY', 'EURCAD', 'AUDJPY', 'EURAUD', 'AUDNZD', 'CADEUR', 'CHFMXN', 'ETHUSD', 'BCHUSD', 'ETHBTC', 'XRPUSD', 'XRPBTC', 'USDLTC', 'USDXRP', 'USDDSH', 'USDBCH', 'JPYEUR', 'JPYUSD', 'JPYGBP', 'JPYCAD', 'JPYCHF', 'JPYAUD', 'JPYNZD', 'JPYSGD', 'JPYNOK', 'JPYRUB', 'JPYSEK', 'JPYTRY', 'JPYZAR', 'JPYHKD', 'JPYCNH', 'JPYDKK', 'JPYMXN', 'JPYPLN', 'JPYXAG', 'JPYXAU', 'JPYBTC', 'JPYETH', 'JPYLTC', 'JPYXRP', 'JPYDSH', 'JPYBCH', 'GBPEUR', 'GBPRUB', 'GBPTRY'];\nexport const getBasicGridData = (rowLength, colLength) => {\n  const data = [];\n  const pricesColLength = colLength - 2;\n  for (let i = 0; i < rowLength; i += 1) {\n    const idx = i >= currencyPairs.length ? i % currencyPairs.length : i;\n    const model = {\n      id: i,\n      currencyPair: currencyPairs[idx]\n    };\n    for (let j = 1; j <= pricesColLength; j += 1) {\n      model[`price${j}M`] = Number(`${i.toString()}${j}`); // randomPrice(0.7, 2);\n    }\n    data.push(model);\n  }\n  const columns = [{\n    field: 'id',\n    headerName: 'id',\n    type: 'number'\n  }, {\n    field: 'currencyPair',\n    headerName: 'Currency Pair'\n  }];\n  for (let j = 1; j <= pricesColLength; j += 1) {\n    // const y = Math.floor(j / 12);\n    columns.push({\n      field: `price${j}M`,\n      headerName: `${j}M`,\n      type: 'number'\n    }); // (y > 0 ? `${y}Y` : '') + `${j - y * 12}M`\n  }\n  columns.length = colLength; // we cut the array in case < 2;\n  return {\n    columns,\n    rows: data\n  };\n};", "import { gridStringOrNumberComparator } from '@mui/x-data-grid-premium';\nimport { randomCommodity, randomDesk, randomEmail, randomFeeRate, generateFilledQuantity, randomId, randomIncoterm, generateIsFilled, randomQuantity, randomTraderName, randomUnitPrice, randomUnitPriceCurrency, randomStatusOptions, randomPnL, randomTradeDate, randomMaturityDate, randomBrokerId, randomCompanyName, randomCountry, randomCurrency, randomAddress, randomCity, randomUpdatedDate, randomCreatedDate, randomRateType, randomContractType, randomTaxCode } from '../services';\nimport { renderCountry, renderEmail, renderIncoterm, renderPnl, renderProgress, renderStatus, renderTotalPrice, renderEditCurrency, renderEditProgress, renderEditStatus, renderEditIncoterm } from '../renderer';\nimport { CONTRACT_TYPE_OPTIONS, COUNTRY_ISO_OPTIONS_SORTED, CURRENCY_OPTIONS, INCOTERM_OPTIONS, RATE_TYPE_OPTIONS, STATUS_OPTIONS, TAXCODE_OPTIONS } from '../services/static-data';\nexport const getCommodityColumns = (editable = false) => [{\n  field: 'id',\n  generateData: randomId,\n  hide: true\n}, {\n  field: 'desk',\n  headerName: 'Desk',\n  generateData: randomDesk,\n  width: 110\n}, {\n  field: 'commodity',\n  headerName: 'Commodity',\n  generateData: randomCommodity,\n  width: 180,\n  editable\n}, {\n  field: 'traderName',\n  headerName: 'Trader Name',\n  generateData: randomTraderName,\n  width: 120,\n  editable\n}, {\n  field: 'traderEmail',\n  headerName: 'Trader Email',\n  generateData: randomEmail,\n  renderCell: renderEmail,\n  width: 150,\n  editable\n}, {\n  field: 'quantity',\n  headerName: 'Quantity',\n  type: 'number',\n  width: 140,\n  generateData: randomQuantity,\n  editable,\n  valueParser: value => Number(value)\n}, {\n  field: 'filledQuantity',\n  headerName: 'Filled Quantity',\n  generateData: generateFilledQuantity,\n  renderCell: renderProgress,\n  renderEditCell: renderEditProgress,\n  availableAggregationFunctions: ['min', 'max', 'avg', 'size'],\n  type: 'number',\n  width: 120,\n  editable\n}, {\n  field: 'isFilled',\n  headerName: 'Is Filled',\n  align: 'center',\n  generateData: generateIsFilled,\n  type: 'boolean',\n  width: 80,\n  editable\n}, {\n  field: 'status',\n  headerName: 'Status',\n  generateData: randomStatusOptions,\n  renderCell: renderStatus,\n  renderEditCell: renderEditStatus,\n  type: 'singleSelect',\n  valueOptions: STATUS_OPTIONS,\n  width: 150,\n  editable\n}, {\n  field: 'unitPrice',\n  headerName: 'Unit Price',\n  generateData: randomUnitPrice,\n  type: 'number',\n  editable,\n  valueParser: value => Number(value)\n}, {\n  field: 'unitPriceCurrency',\n  headerName: 'Unit Price Currency',\n  generateData: randomUnitPriceCurrency,\n  renderEditCell: renderEditCurrency,\n  type: 'singleSelect',\n  valueOptions: CURRENCY_OPTIONS,\n  width: 120,\n  editable\n}, {\n  field: 'subTotal',\n  headerName: 'Sub Total',\n  valueGetter: (value, row) => row.quantity == null || row.unitPrice == null ? null : row.quantity * row.unitPrice,\n  type: 'number',\n  width: 120\n}, {\n  field: 'feeRate',\n  headerName: 'Fee Rate',\n  generateData: randomFeeRate,\n  type: 'number',\n  width: 80,\n  editable,\n  valueParser: value => Number(value)\n}, {\n  field: 'feeAmount',\n  headerName: 'Fee Amount',\n  valueGetter: (value, row) => row.feeRate == null || row.quantity == null || row.unitPrice == null ? null : row.feeRate * row.quantity * row.unitPrice,\n  type: 'number',\n  width: 120\n}, {\n  field: 'incoTerm',\n  generateData: randomIncoterm,\n  renderCell: renderIncoterm,\n  renderEditCell: renderEditIncoterm,\n  type: 'singleSelect',\n  valueOptions: INCOTERM_OPTIONS,\n  editable\n}, {\n  field: 'totalPrice',\n  headerName: 'Total in USD',\n  valueGetter: (value, row) => row.feeRate == null || row.quantity == null || row.unitPrice == null ? null : row.feeRate + row.quantity * row.unitPrice,\n  renderCell: renderTotalPrice,\n  type: 'number',\n  width: 160\n}, {\n  field: 'pnl',\n  headerName: 'PnL',\n  generateData: randomPnL,\n  renderCell: renderPnl,\n  type: 'number',\n  width: 140\n}, {\n  field: 'maturityDate',\n  headerName: 'Maturity Date',\n  generateData: randomMaturityDate,\n  type: 'date',\n  editable\n}, {\n  field: 'tradeDate',\n  headerName: 'Trade Date',\n  generateData: randomTradeDate,\n  type: 'date',\n  editable\n}, {\n  field: 'brokerId',\n  headerName: 'Broker Id',\n  generateData: randomBrokerId,\n  hide: true,\n  editable\n}, {\n  field: 'brokerName',\n  headerName: 'Broker Name',\n  generateData: randomCompanyName,\n  width: 140,\n  editable\n}, {\n  field: 'counterPartyName',\n  headerName: 'Counterparty',\n  generateData: randomCompanyName,\n  width: 180,\n  editable\n}, {\n  field: 'counterPartyCountry',\n  headerName: 'Counterparty Country',\n  type: 'singleSelect',\n  generateData: randomCountry,\n  renderCell: renderCountry,\n  valueOptions: COUNTRY_ISO_OPTIONS_SORTED,\n  valueParser: value => {\n    if (typeof value === 'string') {\n      return COUNTRY_ISO_OPTIONS_SORTED.find(country => country.value === value);\n    }\n    return value;\n  },\n  valueFormatter: value => value?.label,\n  groupingValueGetter: value => value.code,\n  sortComparator: (v1, v2, param1, param2) => gridStringOrNumberComparator(v1.label, v2.label, param1, param2),\n  editable,\n  width: 120\n}, {\n  field: 'counterPartyCurrency',\n  headerName: 'Counterparty Currency',\n  generateData: randomCurrency,\n  renderEditCell: renderEditCurrency,\n  type: 'singleSelect',\n  valueOptions: CURRENCY_OPTIONS,\n  editable\n}, {\n  field: 'counterPartyAddress',\n  headerName: 'Counterparty Address',\n  generateData: randomAddress,\n  width: 200,\n  editable\n}, {\n  field: 'counterPartyCity',\n  headerName: 'Counterparty City',\n  generateData: randomCity,\n  width: 120,\n  editable\n}, {\n  field: 'taxCode',\n  headerName: 'Tax Code',\n  generateData: randomTaxCode,\n  type: 'singleSelect',\n  valueOptions: TAXCODE_OPTIONS,\n  editable\n}, {\n  field: 'contractType',\n  headerName: 'Contract Type',\n  generateData: randomContractType,\n  type: 'singleSelect',\n  valueOptions: CONTRACT_TYPE_OPTIONS,\n  editable\n}, {\n  field: 'rateType',\n  headerName: 'Rate Type',\n  generateData: randomRateType,\n  type: 'singleSelect',\n  valueOptions: RATE_TYPE_OPTIONS,\n  editable\n}, {\n  field: 'lastUpdated',\n  headerName: 'Updated on',\n  generateData: randomUpdatedDate,\n  type: 'dateTime',\n  width: 180,\n  editable\n}, {\n  field: 'dateCreated',\n  headerName: 'Created on',\n  generateData: randomCreatedDate,\n  type: 'date',\n  width: 150,\n  editable\n}];", "import { gridStringOrNumberComparator } from '@mui/x-data-grid-premium';\nimport { randomCity, randomCompanyName, randomCountry, randomCreatedDate, randomEmail, randomId, randomJobTitle, randomPhoneNumber, randomRating, randomUpdatedDate, randomUrl, randomUserName, randomBoolean, randomName, randomColor, randomInt } from '../services';\nimport { renderAvatar, renderCountry, renderEmail, renderLink, renderRating, renderEditRating, renderEditCountry } from '../renderer';\nimport { COUNTRY_ISO_OPTIONS_SORTED } from '../services/static-data';\nexport const getEmployeeColumns = () => [{\n  field: 'id',\n  generateData: randomId,\n  hide: true\n}, {\n  field: 'avatar',\n  headerName: 'Avatar',\n  generateData: randomColor,\n  display: 'flex',\n  renderCell: renderAvatar,\n  valueGetter: (value, row) => row.name == null || row.avatar == null ? null : {\n    name: row.name,\n    color: row.avatar\n  },\n  sortable: false,\n  filterable: false,\n  groupable: false,\n  aggregable: false,\n  disableExport: true\n}, {\n  field: 'name',\n  headerName: 'Name',\n  generateData: randomName,\n  dataGeneratorUniquenessEnabled: true,\n  width: 120,\n  editable: true,\n  groupable: false,\n  aggregable: false\n}, {\n  field: 'website',\n  headerName: 'Website',\n  generateData: randomUrl,\n  renderCell: renderLink,\n  width: 160,\n  editable: true,\n  groupable: false,\n  aggregable: false\n}, {\n  field: 'rating',\n  headerName: 'Rating',\n  generateData: randomRating,\n  display: 'flex',\n  renderCell: renderRating,\n  renderEditCell: renderEditRating,\n  width: 180,\n  type: 'number',\n  editable: true,\n  availableAggregationFunctions: ['avg', 'min', 'max', 'size']\n}, {\n  field: 'email',\n  headerName: 'Email',\n  generateData: randomEmail,\n  renderCell: renderEmail,\n  width: 150,\n  editable: true\n}, {\n  field: 'phone',\n  headerName: 'Phone',\n  generateData: randomPhoneNumber,\n  width: 150,\n  editable: true\n}, {\n  field: 'username',\n  headerName: 'Username',\n  generateData: randomUserName,\n  width: 150,\n  editable: true\n}, {\n  field: 'city',\n  headerName: 'City',\n  generateData: randomCity,\n  editable: true\n}, {\n  field: 'country',\n  headerName: 'Country',\n  type: 'singleSelect',\n  valueOptions: COUNTRY_ISO_OPTIONS_SORTED,\n  valueFormatter: value => value?.label,\n  generateData: randomCountry,\n  renderCell: renderCountry,\n  renderEditCell: renderEditCountry,\n  sortComparator: (v1, v2, param1, param2) => gridStringOrNumberComparator(v1.label, v2.label, param1, param2),\n  width: 150,\n  editable: true\n}, {\n  field: 'company',\n  headerName: 'Company',\n  generateData: randomCompanyName,\n  width: 180,\n  editable: true\n}, {\n  field: 'position',\n  headerName: 'Position',\n  generateData: randomJobTitle,\n  width: 180,\n  editable: true\n}, {\n  field: 'lastUpdated',\n  headerName: 'Updated on',\n  generateData: randomUpdatedDate,\n  type: 'dateTime',\n  width: 180,\n  editable: true\n}, {\n  field: 'dateCreated',\n  headerName: 'Created on',\n  generateData: randomCreatedDate,\n  type: 'date',\n  width: 120,\n  editable: true\n}, {\n  field: 'isAdmin',\n  headerName: 'Is admin?',\n  generateData: randomBoolean,\n  type: 'boolean',\n  width: 150,\n  editable: true\n}, {\n  field: 'salary',\n  headerName: 'Salary',\n  generateData: () => randomInt(30000, 80000),\n  type: 'number',\n  valueFormatter: value => {\n    if (!value || typeof value !== 'number') {\n      return value;\n    }\n    return `${value.toLocaleString()}$`;\n  }\n}];", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport LRUCache from 'lru-cache';\nimport { getRealGridData } from '../services/real-data-service';\nimport { getCommodityColumns } from '../columns/commodities.columns';\nimport { getEmployeeColumns } from '../columns/employees.columns';\nimport asyncWorker from '../services/asyncWorker';\nimport { addTreeDataOptionsToDemoData } from '../services/tree-data-generator';\nconst dataCache = new LRUCache({\n  max: 10,\n  ttl: 60 * 5 * 1e3 // 5 minutes\n});\n// Generate fake data from a seed.\n// It's about x20 faster than getRealData.\nasync function extrapolateSeed(rowLength, data) {\n  return new Promise(resolve => {\n    const seed = data.rows;\n    const rows = data.rows.slice();\n    const tasks = {\n      current: rowLength - seed.length\n    };\n    function work() {\n      const row = {};\n      for (let j = 0; j < data.columns.length; j += 1) {\n        const column = data.columns[j];\n        const index = Math.round(Math.random() * (seed.length - 1));\n        if (column.field === 'id') {\n          row.id = `id-${tasks.current + seed.length}`;\n        } else {\n          row[column.field] = seed[index][column.field];\n        }\n      }\n      rows.push(row);\n      tasks.current -= 1;\n    }\n    asyncWorker({\n      work,\n      done: () => resolve(_extends({}, data, {\n        rows\n      })),\n      tasks\n    });\n  });\n}\nconst deepFreeze = object => {\n  // Retrieve the property names defined on object\n  const propNames = Object.getOwnPropertyNames(object);\n\n  // Freeze properties before freezing self\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const name of propNames) {\n    const value = object[name];\n    if (value && typeof value === 'object') {\n      deepFreeze(value);\n    }\n  }\n  return Object.freeze(object);\n};\nexport const getColumnsFromOptions = options => {\n  let columns = options.dataSet === 'Commodity' ? getCommodityColumns(options.editable) : getEmployeeColumns();\n  if (options.visibleFields) {\n    columns = columns.map(col => options.visibleFields?.includes(col.field) ? col : _extends({}, col, {\n      hide: true\n    }));\n  }\n  if (options.maxColumns) {\n    columns = columns.slice(0, options.maxColumns);\n  }\n  return columns;\n};\nexport const getInitialState = (options, columns) => {\n  const columnVisibilityModel = {};\n  columns.forEach(col => {\n    if (col.hide) {\n      columnVisibilityModel[col.field] = false;\n    }\n  });\n  const groupingField = options.treeData?.groupingField;\n  if (groupingField) {\n    columnVisibilityModel[groupingField] = false;\n  }\n  return {\n    columns: {\n      columnVisibilityModel\n    }\n  };\n};\nexport const useDemoData = options => {\n  const [rowLength, setRowLength] = React.useState(options.rowLength);\n  const [index, setIndex] = React.useState(0);\n  const [loading, setLoading] = React.useState(true);\n  const columns = React.useMemo(() => {\n    return getColumnsFromOptions({\n      dataSet: options.dataSet,\n      editable: options.editable,\n      maxColumns: options.maxColumns,\n      visibleFields: options.visibleFields\n    });\n  }, [options.dataSet, options.editable, options.maxColumns, options.visibleFields]);\n  const [data, setData] = React.useState(() => {\n    return addTreeDataOptionsToDemoData({\n      columns,\n      rows: [],\n      initialState: getInitialState(options, columns)\n    }, options.treeData);\n  });\n  React.useEffect(() => {\n    const cacheKey = `${options.dataSet}-${rowLength}-${index}-${options.maxColumns}`;\n\n    // Cache to allow fast switch between the JavaScript and TypeScript version\n    // of the demos.\n    if (dataCache.has(cacheKey)) {\n      const newData = dataCache.get(cacheKey);\n      setData(newData);\n      setLoading(false);\n      return undefined;\n    }\n    let active = true;\n    (async () => {\n      setLoading(true);\n      let newData;\n      if (rowLength > 1000) {\n        newData = await getRealGridData(1000, columns);\n        newData = await extrapolateSeed(rowLength, newData);\n      } else {\n        newData = await getRealGridData(rowLength, columns);\n      }\n      if (!active) {\n        return;\n      }\n      newData = addTreeDataOptionsToDemoData(newData, {\n        maxDepth: options.treeData?.maxDepth,\n        groupingField: options.treeData?.groupingField,\n        averageChildren: options.treeData?.averageChildren\n      });\n\n      // It's quite slow. No need for it in production.\n      if (process.env.NODE_ENV !== 'production') {\n        deepFreeze(newData);\n      }\n      dataCache.set(cacheKey, newData);\n      setData(newData);\n      setLoading(false);\n    })();\n    return () => {\n      active = false;\n    };\n  }, [rowLength, options.dataSet, options.maxColumns, options.treeData?.maxDepth, options.treeData?.groupingField, options.treeData?.averageChildren, index, columns]);\n  return {\n    data,\n    loading,\n    setRowLength,\n    loadNewData: () => {\n      setIndex(oldIndex => oldIndex + 1);\n    }\n  };\n};", "const perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst hasAbortController = typeof AbortController === 'function'\n\n// minimal backwards-compatibility polyfill\n// this doesn't have nearly all the checks and whatnot that\n// actual AbortController/Signal has, but it's enough for\n// our purposes, and if used properly, behaves the same.\nconst AC = hasAbortController\n  ? AbortController\n  : class AbortController {\n      constructor() {\n        this.signal = new AS()\n      }\n      abort(reason = new Error('This operation was aborted')) {\n        this.signal.reason = this.signal.reason || reason\n        this.signal.aborted = true\n        this.signal.dispatchEvent({\n          type: 'abort',\n          target: this.signal,\n        })\n      }\n    }\n\nconst hasAbortSignal = typeof AbortSignal === 'function'\n// Some polyfills put this on the AC class, not global\nconst hasACAbortSignal = typeof AC.AbortSignal === 'function'\nconst AS = hasAbortSignal\n  ? AbortSignal\n  : hasACAbortSignal\n  ? AC.AbortController\n  : class AbortSignal {\n      constructor() {\n        this.reason = undefined\n        this.aborted = false\n        this._listeners = []\n      }\n      dispatchEvent(e) {\n        if (e.type === 'abort') {\n          this.aborted = true\n          this.onabort(e)\n          this._listeners.forEach(f => f(e), this)\n        }\n      }\n      onabort() {}\n      addEventListener(ev, fn) {\n        if (ev === 'abort') {\n          this._listeners.push(fn)\n        }\n      }\n      removeEventListener(ev, fn) {\n        if (ev === 'abort') {\n          this._listeners = this._listeners.filter(f => f !== fn)\n        }\n      }\n    }\n\nconst warned = new Set()\nconst deprecatedOption = (opt, instead) => {\n  const code = `LRU_CACHE_OPTION_${opt}`\n  if (shouldWarn(code)) {\n    warn(code, `${opt} option`, `options.${instead}`, LRUCache)\n  }\n}\nconst deprecatedMethod = (method, instead) => {\n  const code = `LRU_CACHE_METHOD_${method}`\n  if (shouldWarn(code)) {\n    const { prototype } = LRUCache\n    const { get } = Object.getOwnPropertyDescriptor(prototype, method)\n    warn(code, `${method} method`, `cache.${instead}()`, get)\n  }\n}\nconst deprecatedProperty = (field, instead) => {\n  const code = `LRU_CACHE_PROPERTY_${field}`\n  if (shouldWarn(code)) {\n    const { prototype } = LRUCache\n    const { get } = Object.getOwnPropertyDescriptor(prototype, field)\n    warn(code, `${field} property`, `cache.${instead}`, get)\n  }\n}\n\nconst emitWarning = (...a) => {\n  typeof process === 'object' &&\n  process &&\n  typeof process.emitWarning === 'function'\n    ? process.emitWarning(...a)\n    : console.error(...a)\n}\n\nconst shouldWarn = code => !warned.has(code)\n\nconst warn = (code, what, instead, fn) => {\n  warned.add(code)\n  const msg = `The ${what} is deprecated. Please use ${instead} instead.`\n  emitWarning(msg, 'DeprecationWarning', code, fn)\n}\n\nconst isPosInt = n => n && n === Math.floor(n) && n > 0 && isFinite(n)\n\n/* istanbul ignore next - This is a little bit ridiculous, tbh.\n * The maximum array length is 2^32-1 or thereabouts on most JS impls.\n * And well before that point, you're caching the entire world, I mean,\n * that's ~32GB of just integers for the next/prev links, plus whatever\n * else to hold that many keys and values.  Just filling the memory with\n * zeroes at init time is brutal when you get that big.\n * But why not be complete?\n * Maybe in the future, these limits will have expanded. */\nconst getUintArray = max =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n\nclass ZeroArray extends Array {\n  constructor(size) {\n    super(size)\n    this.fill(0)\n  }\n}\n\nclass Stack {\n  constructor(max) {\n    if (max === 0) {\n      return []\n    }\n    const UintArray = getUintArray(max)\n    this.heap = new UintArray(max)\n    this.length = 0\n  }\n  push(n) {\n    this.heap[this.length++] = n\n  }\n  pop() {\n    return this.heap[--this.length]\n  }\n}\n\nclass LRUCache {\n  constructor(options = {}) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      maxEntrySize = 0,\n      sizeCalculation,\n      fetchMethod,\n      fetchContext,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n    } = options\n\n    // deprecated options, don't trigger a warning for getting them if\n    // the thing being passed in is another LRUCache we're copying.\n    const { length, maxAge, stale } =\n      options instanceof LRUCache ? {} : options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.max = max\n    this.maxSize = maxSize\n    this.maxEntrySize = maxEntrySize || this.maxSize\n    this.sizeCalculation = sizeCalculation || length\n    if (this.sizeCalculation) {\n      if (!this.maxSize && !this.maxEntrySize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    this.fetchMethod = fetchMethod || null\n    if (this.fetchMethod && typeof this.fetchMethod !== 'function') {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n\n    this.fetchContext = fetchContext\n    if (!this.fetchMethod && fetchContext !== undefined) {\n      throw new TypeError(\n        'cannot set fetchContext without fetchMethod'\n      )\n    }\n\n    this.keyMap = new Map()\n    this.keyList = new Array(max).fill(null)\n    this.valList = new Array(max).fill(null)\n    this.next = new UintArray(max)\n    this.prev = new UintArray(max)\n    this.head = 0\n    this.tail = 0\n    this.free = new Stack(max)\n    this.initialFill = 1\n    this.size = 0\n\n    if (typeof dispose === 'function') {\n      this.dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.disposeAfter = disposeAfter\n      this.disposed = []\n    } else {\n      this.disposeAfter = null\n      this.disposed = null\n    }\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\n    this.ignoreFetchAbort = !!ignoreFetchAbort\n\n    // NB: maxEntrySize is set to maxSize if it's set\n    if (this.maxEntrySize !== 0) {\n      if (this.maxSize !== 0) {\n        if (!isPosInt(this.maxSize)) {\n          throw new TypeError(\n            'maxSize must be a positive integer if specified'\n          )\n        }\n      }\n      if (!isPosInt(this.maxEntrySize)) {\n        throw new TypeError(\n          'maxEntrySize must be a positive integer if specified'\n        )\n      }\n      this.initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale || !!stale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || maxAge || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.max === 0 && this.ttl === 0 && this.maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.max && !this.maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n\n    if (stale) {\n      deprecatedOption('stale', 'allowStale')\n    }\n    if (maxAge) {\n      deprecatedOption('maxAge', 'ttl')\n    }\n    if (length) {\n      deprecatedOption('length', 'sizeCalculation')\n    }\n  }\n\n  getRemainingTTL(key) {\n    return this.has(key, { updateAgeOnHas: false }) ? Infinity : 0\n  }\n\n  initializeTTLTracking() {\n    this.ttls = new ZeroArray(this.max)\n    this.starts = new ZeroArray(this.max)\n\n    this.setItemTTL = (index, ttl, start = perf.now()) => {\n      this.starts[index] = ttl !== 0 ? start : 0\n      this.ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.isStale(index)) {\n            this.delete(this.keyList[index])\n          }\n        }, ttl + 1)\n        /* istanbul ignore else - unref() not supported on all platforms */\n        if (t.unref) {\n          t.unref()\n        }\n      }\n    }\n\n    this.updateItemAge = index => {\n      this.starts[index] = this.ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    this.statusTTL = (status, index) => {\n      if (status) {\n        status.ttl = this.ttls[index]\n        status.start = this.starts[index]\n        status.now = cachedNow || getNow()\n        status.remainingTTL = status.now + status.ttl - status.start\n      }\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        /* istanbul ignore else - not available on all platforms */\n        if (t.unref) {\n          t.unref()\n        }\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      return this.ttls[index] === 0 || this.starts[index] === 0\n        ? Infinity\n        : this.starts[index] +\n            this.ttls[index] -\n            (cachedNow || getNow())\n    }\n\n    this.isStale = index => {\n      return (\n        this.ttls[index] !== 0 &&\n        this.starts[index] !== 0 &&\n        (cachedNow || getNow()) - this.starts[index] >\n          this.ttls[index]\n      )\n    }\n  }\n  updateItemAge(_index) {}\n  statusTTL(_status, _index) {}\n  setItemTTL(_index, _ttl, _start) {}\n  isStale(_index) {\n    return false\n  }\n\n  initializeSizeTracking() {\n    this.calculatedSize = 0\n    this.sizes = new ZeroArray(this.max)\n    this.removeItemSize = index => {\n      this.calculatedSize -= this.sizes[index]\n      this.sizes[index] = 0\n    }\n    this.requireSize = (k, v, size, sizeCalculation) => {\n      // provisionally accept background fetches.\n      // actual value size will be checked when they return.\n      if (this.isBackgroundFetch(v)) {\n        return 0\n      }\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer). ' +\n              'When maxSize or maxEntrySize is used, sizeCalculation or size ' +\n              'must be set.'\n          )\n        }\n      }\n      return size\n    }\n    this.addItemSize = (index, size, status) => {\n      this.sizes[index] = size\n      if (this.maxSize) {\n        const maxSize = this.maxSize - this.sizes[index]\n        while (this.calculatedSize > maxSize) {\n          this.evict(true)\n        }\n      }\n      this.calculatedSize += this.sizes[index]\n      if (status) {\n        status.entrySize = size\n        status.totalCalculatedSize = this.calculatedSize\n      }\n    }\n  }\n  removeItemSize(_index) {}\n  addItemSize(_index, _size) {}\n  requireSize(_k, _v, size, sizeCalculation) {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize or maxEntrySize on cache'\n      )\n    }\n  }\n\n  *indexes({ allowStale = this.allowStale } = {}) {\n    if (this.size) {\n      for (let i = this.tail; true; ) {\n        if (!this.isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.isStale(i)) {\n          yield i\n        }\n        if (i === this.head) {\n          break\n        } else {\n          i = this.prev[i]\n        }\n      }\n    }\n  }\n\n  *rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.size) {\n      for (let i = this.head; true; ) {\n        if (!this.isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.isStale(i)) {\n          yield i\n        }\n        if (i === this.tail) {\n          break\n        } else {\n          i = this.next[i]\n        }\n      }\n    }\n  }\n\n  isValidIndex(index) {\n    return (\n      index !== undefined &&\n      this.keyMap.get(this.keyList[index]) === index\n    )\n  }\n\n  *entries() {\n    for (const i of this.indexes()) {\n      if (\n        this.valList[i] !== undefined &&\n        this.keyList[i] !== undefined &&\n        !this.isBackgroundFetch(this.valList[i])\n      ) {\n        yield [this.keyList[i], this.valList[i]]\n      }\n    }\n  }\n  *rentries() {\n    for (const i of this.rindexes()) {\n      if (\n        this.valList[i] !== undefined &&\n        this.keyList[i] !== undefined &&\n        !this.isBackgroundFetch(this.valList[i])\n      ) {\n        yield [this.keyList[i], this.valList[i]]\n      }\n    }\n  }\n\n  *keys() {\n    for (const i of this.indexes()) {\n      if (\n        this.keyList[i] !== undefined &&\n        !this.isBackgroundFetch(this.valList[i])\n      ) {\n        yield this.keyList[i]\n      }\n    }\n  }\n  *rkeys() {\n    for (const i of this.rindexes()) {\n      if (\n        this.keyList[i] !== undefined &&\n        !this.isBackgroundFetch(this.valList[i])\n      ) {\n        yield this.keyList[i]\n      }\n    }\n  }\n\n  *values() {\n    for (const i of this.indexes()) {\n      if (\n        this.valList[i] !== undefined &&\n        !this.isBackgroundFetch(this.valList[i])\n      ) {\n        yield this.valList[i]\n      }\n    }\n  }\n  *rvalues() {\n    for (const i of this.rindexes()) {\n      if (\n        this.valList[i] !== undefined &&\n        !this.isBackgroundFetch(this.valList[i])\n      ) {\n        yield this.valList[i]\n      }\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  find(fn, getOptions) {\n    for (const i of this.indexes()) {\n      const v = this.valList[i]\n      const value = this.isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      if (fn(value, this.keyList[i], this)) {\n        return this.get(this.keyList[i], getOptions)\n      }\n    }\n  }\n\n  forEach(fn, thisp = this) {\n    for (const i of this.indexes()) {\n      const v = this.valList[i]\n      const value = this.isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.keyList[i], this)\n    }\n  }\n\n  rforEach(fn, thisp = this) {\n    for (const i of this.rindexes()) {\n      const v = this.valList[i]\n      const value = this.isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.keyList[i], this)\n    }\n  }\n\n  get prune() {\n    deprecatedMethod('prune', 'purgeStale')\n    return this.purgeStale\n  }\n\n  purgeStale() {\n    let deleted = false\n    for (const i of this.rindexes({ allowStale: true })) {\n      if (this.isStale(i)) {\n        this.delete(this.keyList[i])\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  dump() {\n    const arr = []\n    for (const i of this.indexes({ allowStale: true })) {\n      const key = this.keyList[i]\n      const v = this.valList[i]\n      const value = this.isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      const entry = { value }\n      if (this.ttls) {\n        entry.ttl = this.ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - this.starts[i]\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.sizes) {\n        entry.size = this.sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  load(arr) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset.\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  dispose(_v, _k, _reason) {}\n\n  set(\n    k,\n    v,\n    {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      status,\n    } = {}\n  ) {\n    size = this.requireSize(k, v, size, sizeCalculation)\n    // if the item doesn't fit, don't do anything\n    // NB: maxEntrySize set to maxSize by default\n    if (this.maxEntrySize && size > this.maxEntrySize) {\n      if (status) {\n        status.set = 'miss'\n        status.maxEntrySizeExceeded = true\n      }\n      // have to delete, in case a background fetch is there already.\n      // in non-async cases, this is a no-op\n      this.delete(k)\n      return this\n    }\n    let index = this.size === 0 ? undefined : this.keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = this.newIndex()\n      this.keyList[index] = k\n      this.valList[index] = v\n      this.keyMap.set(k, index)\n      this.next[this.tail] = index\n      this.prev[index] = this.tail\n      this.tail = index\n      this.size++\n      this.addItemSize(index, size, status)\n      if (status) {\n        status.set = 'add'\n      }\n      noUpdateTTL = false\n    } else {\n      // update\n      this.moveToTail(index)\n      const oldVal = this.valList[index]\n      if (v !== oldVal) {\n        if (this.isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort(new Error('replaced'))\n        } else {\n          if (!noDisposeOnSet) {\n            this.dispose(oldVal, k, 'set')\n            if (this.disposeAfter) {\n              this.disposed.push([oldVal, k, 'set'])\n            }\n          }\n        }\n        this.removeItemSize(index)\n        this.valList[index] = v\n        this.addItemSize(index, size, status)\n        if (status) {\n          status.set = 'replace'\n          const oldValue =\n            oldVal && this.isBackgroundFetch(oldVal)\n              ? oldVal.__staleWhileFetching\n              : oldVal\n          if (oldValue !== undefined) status.oldValue = oldValue\n        }\n      } else if (status) {\n        status.set = 'update'\n      }\n    }\n    if (ttl !== 0 && this.ttl === 0 && !this.ttls) {\n      this.initializeTTLTracking()\n    }\n    if (!noUpdateTTL) {\n      this.setItemTTL(index, ttl, start)\n    }\n    this.statusTTL(status, index)\n    if (this.disposeAfter) {\n      while (this.disposed.length) {\n        this.disposeAfter(...this.disposed.shift())\n      }\n    }\n    return this\n  }\n\n  newIndex() {\n    if (this.size === 0) {\n      return this.tail\n    }\n    if (this.size === this.max && this.max !== 0) {\n      return this.evict(false)\n    }\n    if (this.free.length !== 0) {\n      return this.free.pop()\n    }\n    // initial fill, just keep writing down the list\n    return this.initialFill++\n  }\n\n  pop() {\n    if (this.size) {\n      const val = this.valList[this.head]\n      this.evict(true)\n      return val\n    }\n  }\n\n  evict(free) {\n    const head = this.head\n    const k = this.keyList[head]\n    const v = this.valList[head]\n    if (this.isBackgroundFetch(v)) {\n      v.__abortController.abort(new Error('evicted'))\n    } else {\n      this.dispose(v, k, 'evict')\n      if (this.disposeAfter) {\n        this.disposed.push([v, k, 'evict'])\n      }\n    }\n    this.removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.keyList[head] = null\n      this.valList[head] = null\n      this.free.push(head)\n    }\n    this.head = this.next[head]\n    this.keyMap.delete(k)\n    this.size--\n    return head\n  }\n\n  has(k, { updateAgeOnHas = this.updateAgeOnHas, status } = {}) {\n    const index = this.keyMap.get(k)\n    if (index !== undefined) {\n      if (!this.isStale(index)) {\n        if (updateAgeOnHas) {\n          this.updateItemAge(index)\n        }\n        if (status) status.has = 'hit'\n        this.statusTTL(status, index)\n        return true\n      } else if (status) {\n        status.has = 'stale'\n        this.statusTTL(status, index)\n      }\n    } else if (status) {\n      status.has = 'miss'\n    }\n    return false\n  }\n\n  // like get(), but without any LRU updating or TTL expiration\n  peek(k, { allowStale = this.allowStale } = {}) {\n    const index = this.keyMap.get(k)\n    if (index !== undefined && (allowStale || !this.isStale(index))) {\n      const v = this.valList[index]\n      // either stale and allowed, or forcing a refresh of non-stale value\n      return this.isBackgroundFetch(v) ? v.__staleWhileFetching : v\n    }\n  }\n\n  backgroundFetch(k, index, options, context) {\n    const v = index === undefined ? undefined : this.valList[index]\n    if (this.isBackgroundFetch(v)) {\n      return v\n    }\n    const ac = new AC()\n    if (options.signal) {\n      options.signal.addEventListener('abort', () =>\n        ac.abort(options.signal.reason)\n      )\n    }\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n    const cb = (v, updateCache = false) => {\n      const { aborted } = ac.signal\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\n      if (options.status) {\n        if (aborted && !updateCache) {\n          options.status.fetchAborted = true\n          options.status.fetchError = ac.signal.reason\n          if (ignoreAbort) options.status.fetchAbortIgnored = true\n        } else {\n          options.status.fetchResolved = true\n        }\n      }\n      if (aborted && !ignoreAbort && !updateCache) {\n        return fetchFail(ac.signal.reason)\n      }\n      // either we didn't abort, and are still here, or we did, and ignored\n      if (this.valList[index] === p) {\n        if (v === undefined) {\n          if (p.__staleWhileFetching) {\n            this.valList[index] = p.__staleWhileFetching\n          } else {\n            this.delete(k)\n          }\n        } else {\n          if (options.status) options.status.fetchUpdated = true\n          this.set(k, v, fetchOpts.options)\n        }\n      }\n      return v\n    }\n    const eb = er => {\n      if (options.status) {\n        options.status.fetchRejected = true\n        options.status.fetchError = er\n      }\n      return fetchFail(er)\n    }\n    const fetchFail = er => {\n      const { aborted } = ac.signal\n      const allowStaleAborted =\n        aborted && options.allowStaleOnFetchAbort\n      const allowStale =\n        allowStaleAborted || options.allowStaleOnFetchRejection\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\n      if (this.valList[index] === p) {\n        // if we allow stale on fetch rejections, then we need to ensure that\n        // the stale value is not removed from the cache when the fetch fails.\n        const del = !noDelete || p.__staleWhileFetching === undefined\n        if (del) {\n          this.delete(k)\n        } else if (!allowStaleAborted) {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          // leave it untouched if we're still waiting for an\n          // aborted background fetch that hasn't yet returned.\n          this.valList[index] = p.__staleWhileFetching\n        }\n      }\n      if (allowStale) {\n        if (options.status && p.__staleWhileFetching !== undefined) {\n          options.status.returnedStale = true\n        }\n        return p.__staleWhileFetching\n      } else if (p.__returned === p) {\n        throw er\n      }\n    }\n    const pcall = (res, rej) => {\n      this.fetchMethod(k, v, fetchOpts).then(v => res(v), rej)\n      // ignored, we go until we finish, regardless.\n      // defer check until we are actually aborting,\n      // so fetchMethod can override.\n      ac.signal.addEventListener('abort', () => {\n        if (\n          !options.ignoreFetchAbort ||\n          options.allowStaleOnFetchAbort\n        ) {\n          res()\n          // when it eventually resolves, update the cache.\n          if (options.allowStaleOnFetchAbort) {\n            res = v => cb(v, true)\n          }\n        }\n      })\n    }\n    if (options.status) options.status.fetchDispatched = true\n    const p = new Promise(pcall).then(cb, eb)\n    p.__abortController = ac\n    p.__staleWhileFetching = v\n    p.__returned = null\n    if (index === undefined) {\n      // internal, don't expose status.\n      this.set(k, p, { ...fetchOpts.options, status: undefined })\n      index = this.keyMap.get(k)\n    } else {\n      this.valList[index] = p\n    }\n    return p\n  }\n\n  isBackgroundFetch(p) {\n    return (\n      p &&\n      typeof p === 'object' &&\n      typeof p.then === 'function' &&\n      Object.prototype.hasOwnProperty.call(\n        p,\n        '__staleWhileFetching'\n      ) &&\n      Object.prototype.hasOwnProperty.call(p, '__returned') &&\n      (p.__returned === p || p.__returned === null)\n    )\n  }\n\n  // this takes the union of get() and set() opts, because it does both\n  async fetch(\n    k,\n    {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      fetchContext = this.fetchContext,\n      forceRefresh = false,\n      status,\n      signal,\n    } = {}\n  ) {\n    if (!this.fetchMethod) {\n      if (status) status.fetch = 'get'\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        status,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n      status,\n      signal,\n    }\n\n    let index = this.keyMap.get(k)\n    if (index === undefined) {\n      if (status) status.fetch = 'miss'\n      const p = this.backgroundFetch(k, index, options, fetchContext)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.valList[index]\n      if (this.isBackgroundFetch(v)) {\n        const stale =\n          allowStale && v.__staleWhileFetching !== undefined\n        if (status) {\n          status.fetch = 'inflight'\n          if (stale) status.returnedStale = true\n        }\n        return stale ? v.__staleWhileFetching : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      const isStale = this.isStale(index)\n      if (!forceRefresh && !isStale) {\n        if (status) status.fetch = 'hit'\n        this.moveToTail(index)\n        if (updateAgeOnGet) {\n          this.updateItemAge(index)\n        }\n        this.statusTTL(status, index)\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.backgroundFetch(k, index, options, fetchContext)\n      const hasStale = p.__staleWhileFetching !== undefined\n      const staleVal = hasStale && allowStale\n      if (status) {\n        status.fetch = hasStale && isStale ? 'stale' : 'refresh'\n        if (staleVal && isStale) status.returnedStale = true\n      }\n      return staleVal ? p.__staleWhileFetching : (p.__returned = p)\n    }\n  }\n\n  get(\n    k,\n    {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status,\n    } = {}\n  ) {\n    const index = this.keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.valList[index]\n      const fetching = this.isBackgroundFetch(value)\n      this.statusTTL(status, index)\n      if (this.isStale(index)) {\n        if (status) status.get = 'stale'\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.delete(k)\n          }\n          if (status) status.returnedStale = allowStale\n          return allowStale ? value : undefined\n        } else {\n          if (status) {\n            status.returnedStale =\n              allowStale && value.__staleWhileFetching !== undefined\n          }\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        if (status) status.get = 'hit'\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching.\n        // If it's not stale, and fetching, AND has a __staleWhileFetching\n        // value, then that means the user fetched with {forceRefresh:true},\n        // so it's safe to return that value.\n        if (fetching) {\n          return value.__staleWhileFetching\n        }\n        this.moveToTail(index)\n        if (updateAgeOnGet) {\n          this.updateItemAge(index)\n        }\n        return value\n      }\n    } else if (status) {\n      status.get = 'miss'\n    }\n  }\n\n  connect(p, n) {\n    this.prev[n] = p\n    this.next[p] = n\n  }\n\n  moveToTail(index) {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.tail) {\n      if (index === this.head) {\n        this.head = this.next[index]\n      } else {\n        this.connect(this.prev[index], this.next[index])\n      }\n      this.connect(this.tail, index)\n      this.tail = index\n    }\n  }\n\n  get del() {\n    deprecatedMethod('del', 'delete')\n    return this.delete\n  }\n\n  delete(k) {\n    let deleted = false\n    if (this.size !== 0) {\n      const index = this.keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.size === 1) {\n          this.clear()\n        } else {\n          this.removeItemSize(index)\n          const v = this.valList[index]\n          if (this.isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('deleted'))\n          } else {\n            this.dispose(v, k, 'delete')\n            if (this.disposeAfter) {\n              this.disposed.push([v, k, 'delete'])\n            }\n          }\n          this.keyMap.delete(k)\n          this.keyList[index] = null\n          this.valList[index] = null\n          if (index === this.tail) {\n            this.tail = this.prev[index]\n          } else if (index === this.head) {\n            this.head = this.next[index]\n          } else {\n            this.next[this.prev[index]] = this.next[index]\n            this.prev[this.next[index]] = this.prev[index]\n          }\n          this.size--\n          this.free.push(index)\n        }\n      }\n    }\n    if (this.disposed) {\n      while (this.disposed.length) {\n        this.disposeAfter(...this.disposed.shift())\n      }\n    }\n    return deleted\n  }\n\n  clear() {\n    for (const index of this.rindexes({ allowStale: true })) {\n      const v = this.valList[index]\n      if (this.isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error('deleted'))\n      } else {\n        const k = this.keyList[index]\n        this.dispose(v, k, 'delete')\n        if (this.disposeAfter) {\n          this.disposed.push([v, k, 'delete'])\n        }\n      }\n    }\n\n    this.keyMap.clear()\n    this.valList.fill(null)\n    this.keyList.fill(null)\n    if (this.ttls) {\n      this.ttls.fill(0)\n      this.starts.fill(0)\n    }\n    if (this.sizes) {\n      this.sizes.fill(0)\n    }\n    this.head = 0\n    this.tail = 0\n    this.initialFill = 1\n    this.free.length = 0\n    this.calculatedSize = 0\n    this.size = 0\n    if (this.disposed) {\n      while (this.disposed.length) {\n        this.disposeAfter(...this.disposed.shift())\n      }\n    }\n  }\n\n  get reset() {\n    deprecatedMethod('reset', 'clear')\n    return this.clear\n  }\n\n  get length() {\n    deprecatedProperty('length', 'size')\n    return this.size\n  }\n\n  static get AbortController() {\n    return AC\n  }\n  static get AbortSignal() {\n    return AS\n  }\n}\n\nexport default LRUCache\n", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { randomArrayItem } from './random-generator';\nexport const addTreeDataOptionsToDemoData = (data, options = {}) => {\n  const {\n    averageChildren = 2,\n    maxDepth = 1,\n    groupingField\n  } = options;\n  const hasTreeData = maxDepth > 1 && groupingField != null;\n  if (!hasTreeData) {\n    return data;\n  }\n  if (data.rows.length > 1000) {\n    throw new Error('MUI X: useDemoData tree data mode only works up to 1000 rows.');\n  }\n  const rowsByTreeDepth = {};\n  const rowsCount = data.rows.length;\n  const groupingCol = data.columns.find(col => col.field === options.groupingField);\n  if (!groupingCol) {\n    throw new Error('MUI X: The tree data grouping field does not exist.');\n  }\n  data.initialState.columns.columnVisibilityModel[groupingField] = false;\n  for (let i = 0; i < rowsCount; i += 1) {\n    const row = data.rows[i];\n    const currentChunk = Math.floor(i * (averageChildren ** maxDepth - 1) / rowsCount) + 1;\n    const currentDepth = Math.floor(Math.log(currentChunk) / Math.log(averageChildren));\n    if (!rowsByTreeDepth[currentDepth]) {\n      rowsByTreeDepth[currentDepth] = {\n        rows: {},\n        rowIndexes: []\n      };\n    }\n    rowsByTreeDepth[currentDepth].rows[i] = {\n      value: row,\n      parentIndex: null\n    };\n    rowsByTreeDepth[currentDepth].rowIndexes.push(i);\n  }\n  Object.entries(rowsByTreeDepth).forEach(([depthStr, {\n    rows\n  }]) => {\n    const depth = Number(depthStr);\n    Object.values(rows).forEach(row => {\n      const path = [];\n      let previousRow = null;\n      for (let k = depth; k >= 0; k -= 1) {\n        let rowTemp;\n        if (k === depth) {\n          if (depth > 0) {\n            row.parentIndex = Number(randomArrayItem(rowsByTreeDepth[depth - 1].rowIndexes));\n          }\n          rowTemp = row;\n        } else {\n          rowTemp = rowsByTreeDepth[k].rows[previousRow.parentIndex];\n        }\n        path.unshift(rowTemp.value[groupingField]);\n        previousRow = rowTemp;\n      }\n      row.value.path = path;\n    });\n  });\n  return _extends({}, data, {\n    groupingColDef: {\n      headerName: groupingCol.headerName ?? groupingCol.field,\n      width: 250\n    },\n    getTreeDataPath: row => row.path,\n    treeData: true\n  });\n};", "import * as React from 'react';\nimport { getBasicGridData } from '../services';\nexport const useBasicDemoData = (nbRows, nbCols) => {\n  return React.useMemo(() => getBasicGridData(nbRows, nbCols), [nbRows, nbCols]);\n};", "const currencyFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0\n});\nconst COLUMNS = [{\n  field: 'title',\n  headerName: 'Title',\n  width: 200,\n  groupable: false\n}, {\n  field: 'gross',\n  headerName: 'Gross',\n  type: 'number',\n  width: 150,\n  groupable: false,\n  valueFormatter: value => {\n    if (!value) {\n      return '';\n    }\n    return currencyFormatter.format(value);\n  }\n}, {\n  field: 'company',\n  headerName: 'Company',\n  width: 200\n}, {\n  field: 'director',\n  headerName: 'Director',\n  width: 200\n}, {\n  field: 'year',\n  headerName: 'Year',\n  type: 'number',\n  availableAggregationFunctions: ['max', 'min']\n}, {\n  field: 'cinematicUniverse',\n  headerName: 'Cinematic Universe',\n  width: 220\n}];\nconst ROWS = [{\n  id: 0,\n  title: 'Avatar',\n  gross: 2847246203,\n  budget: 237000000,\n  director: 'James Cameron',\n  company: '20th Century Fox',\n  year: 2009,\n  imdbRating: 7.9,\n  composer: {\n    name: 'James Horner'\n  }\n}, {\n  id: 1,\n  title: 'Avengers: Endgame',\n  gross: 2797501328,\n  budget: 356000000,\n  director: 'Anthony & Joe Russo',\n  company: 'Disney Studios',\n  year: 2019,\n  imdbRating: 8.4,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Alan Silvestri'\n  }\n}, {\n  id: 2,\n  title: 'Titanic',\n  gross: 2187425379,\n  budget: 200000000,\n  director: 'James Cameron',\n  company: '20th Century Fox',\n  year: 1997,\n  imdbRating: 7.9,\n  composer: {\n    name: 'James Horner'\n  }\n}, {\n  id: 3,\n  title: 'Star Wars: The Force Awakens',\n  gross: 2068223624,\n  budget: 306000000,\n  director: 'J. J. Abrams',\n  company: 'Disney Studios',\n  year: 2015,\n  imdbRating: 7.9,\n  cinematicUniverse: 'Star Wars',\n  composer: {\n    name: 'John Williams'\n  }\n}, {\n  id: 4,\n  title: 'Avengers: Infinity War',\n  gross: 2048359754,\n  budget: 321000000,\n  director: 'Anthony & Joe Russo',\n  company: 'Disney Studios',\n  year: 2018,\n  imdbRating: 8.5,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Alan Silvestri'\n  }\n}, {\n  id: 5,\n  title: 'Spider-Man: No Way Home',\n  gross: 1892768346,\n  budget: 200000000,\n  director: 'Jon Watts',\n  company: 'Disney Studios',\n  year: 2021,\n  imdbRating: 8.3,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Michael Giacchino'\n  }\n}, {\n  id: 6,\n  title: 'Jurassic World',\n  gross: 1671713208,\n  budget: 150000000,\n  director: 'Colin Trevorrow',\n  company: 'Universal Pictures',\n  year: 2015,\n  imdbRating: 7.0,\n  cinematicUniverse: 'Jurassic Park',\n  composer: {\n    name: 'Michael Giacchino'\n  }\n}, {\n  id: 7,\n  title: 'The Lion King',\n  gross: 1656943394,\n  budget: 260000000,\n  director: 'Jon Favreau',\n  company: 'Disney Studios',\n  year: 2019,\n  imdbRating: 6.9,\n  composer: {\n    name: 'Hans Zimmer'\n  }\n}, {\n  id: 8,\n  title: 'The Avengers',\n  gross: 1518812988,\n  budget: 220000000,\n  director: 'Joss Whedon',\n  company: 'Disney Studios',\n  year: 2012,\n  imdbRating: 8.1,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Alan Silvestri'\n  }\n}, {\n  id: 9,\n  title: 'Furious 7',\n  gross: 1516045911,\n  budget: 190000000,\n  director: 'James Wan',\n  company: 'Universal Pictures',\n  year: 2015,\n  imdbRating: 7.2,\n  cinematicUniverse: 'Fast & Furious',\n  composer: {\n    name: 'Brian Tyler'\n  }\n}, {\n  id: 10,\n  title: 'Frozen II',\n  gross: 1450026933,\n  budget: 150000000,\n  director: 'Chris Buck & Jennifer Lee',\n  company: 'Disney Studios',\n  year: 2019,\n  imdbRating: 6.8,\n  cinematicUniverse: 'Frozen',\n  composer: {\n    name: 'Christophe Beck'\n  }\n}, {\n  id: 11,\n  title: 'Avengers: Age of Ultron',\n  gross: 1402804868,\n  budget: 280000000,\n  director: 'Joss Whedon',\n  company: 'Disney Studios',\n  year: 2015,\n  imdbRating: 7.3,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Danny Elfman'\n  }\n}, {\n  id: 12,\n  title: 'Black Panther',\n  gross: 1347280838,\n  budget: 200000000,\n  director: 'Ryan Coogler',\n  company: 'Disney Studios',\n  year: 2018,\n  imdbRating: 7.3,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Ludwig Göransson'\n  }\n}, {\n  id: 13,\n  title: 'Harry Potter and the Deathly Hallows – Part 2',\n  gross: 1342025430,\n  budget: 125000000,\n  director: 'David Yates',\n  company: 'Warner Bros. Pictures',\n  year: 2011,\n  imdbRating: 8.2,\n  cinematicUniverse: 'Harry Potter',\n  composer: {\n    name: 'Alexandre Desplat'\n  }\n}, {\n  id: 14,\n  title: 'Star Wars: The Last Jedi',\n  gross: 1332539889,\n  budget: 317000000,\n  director: 'Rian Johnson',\n  company: 'Disney Studios',\n  year: 2017,\n  imdbRating: 6.9,\n  cinematicUniverse: 'Star Wars',\n  composer: {\n    name: 'John Williams'\n  }\n}, {\n  id: 15,\n  title: 'Jurassic World: Fallen Kingdom',\n  gross: 1309484461,\n  budget: 170000000,\n  director: 'J. A. Bayona',\n  company: 'Universal Pictures',\n  year: 2018,\n  cinematicUniverse: 'Jurassic Park',\n  imdbRating: 6.2,\n  composer: {\n    name: 'Michael Giacchino'\n  }\n}, {\n  id: 16,\n  title: 'Frozen',\n  gross: 1290000000,\n  budget: 150000000,\n  director: 'Chris Buck & Jennifer Lee',\n  company: 'Disney Studios',\n  year: 2013,\n  imdbRating: 7.5,\n  cinematicUniverse: 'Frozen',\n  composer: {\n    name: 'Christophe Beck'\n  }\n}, {\n  id: 17,\n  title: 'Beauty and the Beast',\n  gross: 1263521136,\n  budget: 160000000,\n  director: 'Bill Condon',\n  company: 'Disney Studios',\n  year: 2017,\n  imdbRating: 7.1,\n  composer: {\n    name: 'Alan Menken'\n  }\n}, {\n  id: 18,\n  title: 'Incredibles 2',\n  gross: 1242805359,\n  budget: 200000000,\n  director: 'Brad Bird',\n  company: 'Disney Studios',\n  year: 2018,\n  imdbRating: 7.6,\n  composer: {\n    name: 'Michael Giacchino'\n  }\n}, {\n  id: 19,\n  title: 'The Fate of the Furious',\n  gross: 1238764765,\n  budget: 250000000,\n  director: 'F. Gary Gray',\n  company: 'Universal Pictures',\n  year: 2017,\n  imdbRating: 6.6,\n  cinematicUniverse: 'Fast & Furious',\n  composer: {\n    name: 'Brian Tyler'\n  }\n}, {\n  id: 20,\n  title: 'Iron Man 3',\n  gross: 1214811252,\n  budget: 200000000,\n  director: 'Shane Black',\n  company: 'Disney Studios',\n  year: 2013,\n  imdbRating: 7.2,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Brian Tyler'\n  }\n}, {\n  id: 21,\n  title: 'Minions',\n  gross: 1159398397,\n  budget: 74000000,\n  director: 'Pierre Coffin & Kyle Balda',\n  company: 'Universal Pictures',\n  year: 2015,\n  imdbRating: 6.4,\n  composer: {\n    name: 'Heitor Pereira'\n  }\n}, {\n  id: 22,\n  title: 'Captain America: Civil War',\n  gross: 1153329473,\n  budget: 250000000,\n  director: 'Anthony & Joe Russo',\n  company: 'Disney Studios',\n  year: 2016,\n  imdbRating: 7.8,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Henry Jackman'\n  }\n}, {\n  id: 23,\n  title: 'Aquaman',\n  gross: 1148485886,\n  budget: 160000000,\n  director: 'James Wan',\n  company: 'Warner Bros. Pictures',\n  year: 2018,\n  imdbRating: 6.8,\n  cinematicUniverse: 'DC Cinematic Universe',\n  composer: {\n    name: 'Rupert Gregson-Williams'\n  }\n}, {\n  id: 24,\n  title: 'The Lord of the Rings: The Return of the King',\n  gross: 1146030912,\n  budget: 94000000,\n  director: 'Peter Jackson',\n  company: 'New Line Cinema',\n  year: 2003,\n  imdbRating: 9.0,\n  cinematicUniverse: 'The Lord of the Rings',\n  composer: {\n    name: 'Howard Shore'\n  }\n}, {\n  id: 25,\n  title: 'Spider-Man: Far From Home',\n  gross: 1131927996,\n  budget: 160000000,\n  director: 'Jon Watts',\n  company: 'Disney Studios',\n  year: 2019,\n  imdbRating: 7.4,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Michael Giacchino'\n  }\n}, {\n  id: 26,\n  title: 'Captain Marvel',\n  gross: 1128274794,\n  budget: 152000000,\n  director: 'Anna Boden & Ryan Fleck',\n  company: 'Disney Studios',\n  year: 2019,\n  imdbRating: 6.8,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Pinar Toprak'\n  }\n}, {\n  id: 27,\n  title: 'Transformers: Dark of the Moon',\n  gross: 1123794079,\n  budget: 195000000,\n  director: 'Michael Bay',\n  company: 'Paramount Pictures',\n  year: 2011,\n  imdbRating: 6.2,\n  cinematicUniverse: 'Transformers',\n  composer: {\n    name: 'Steve Jablonsky'\n  }\n}, {\n  id: 28,\n  title: 'Skyfall',\n  gross: 1108561013,\n  budget: 200000000,\n  director: 'Sam Mendes',\n  company: '20th Century Fox',\n  year: 2012,\n  imdbRating: 7.8,\n  cinematicUniverse: 'James Bond',\n  composer: {\n    name: 'Thomas Newman'\n  }\n}, {\n  id: 29,\n  title: 'Transformers: Age of Extinction',\n  gross: 1104054072,\n  budget: 210000000,\n  director: 'Michael Bay',\n  company: 'Paramount Pictures',\n  year: 2014,\n  imdbRating: 5.6,\n  cinematicUniverse: 'Transformers',\n  composer: {\n    name: 'Steve Jablonsky'\n  }\n}, {\n  id: 30,\n  title: 'The Dark Knight Rises',\n  gross: 1081142612,\n  budget: 250000000,\n  director: 'Christopher Nolan',\n  company: 'Warner Bros. Pictures',\n  year: 2012,\n  imdbRating: 8.4,\n  cinematicUniverse: 'Batman',\n  composer: {\n    name: 'Hans Zimmer'\n  }\n}, {\n  id: 31,\n  title: 'Joker',\n  gross: 1074251311,\n  budget: 55000000,\n  director: 'Todd Phillips',\n  company: 'Warner Bros. Pictures',\n  year: 2019,\n  imdbRating: 8.4,\n  cinematicUniverse: 'Batman',\n  composer: {\n    name: 'Hildur Guðnadóttir'\n  }\n}, {\n  id: 32,\n  title: 'Star Wars: The Rise of Skywalker',\n  gross: 1074144248,\n  budget: 275000000,\n  director: 'J. J. Abrams',\n  company: 'Disney Studios',\n  year: 2019,\n  imdbRating: 6.5,\n  cinematicUniverse: 'Star Wars',\n  composer: {\n    name: 'John Williams'\n  }\n}, {\n  id: 33,\n  title: 'Toy Story 4',\n  gross: 1073394593,\n  budget: 200000000,\n  director: 'Josh Cooley',\n  company: 'Disney Studios',\n  year: 2019,\n  imdbRating: 7.7,\n  cinematicUniverse: 'Toy Story',\n  composer: {\n    name: 'Randy Newman'\n  }\n}, {\n  id: 34,\n  title: 'Toy Story 3',\n  gross: 1066969703,\n  budget: 200000000,\n  director: 'Lee Unkrich',\n  company: 'Disney Studios',\n  year: 2010,\n  imdbRating: 8.3,\n  cinematicUniverse: 'Toy Story',\n  composer: {\n    name: 'Randy Newman'\n  }\n}];\nexport const useMovieData = () => {\n  return {\n    rows: ROWS,\n    columns: COLUMNS\n  };\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { getGridDefaultColumnTypes, GridLogicOperator } from '@mui/x-data-grid-pro';\nimport { isDeepEqual } from '@mui/x-data-grid/internals';\nimport { useDemoData, getColumnsFromOptions, getInitialState } from './useDemoData';\nimport { randomInt } from '../services/random-generator';\nconst apiRef = {};\nconst simplifiedValueGetter = (field, colDef) => row => {\n  return colDef.valueGetter?.(row[row.id], row, colDef, apiRef) || row[field];\n};\nconst getRowComparator = (sortModel, columnsWithDefaultColDef) => {\n  if (!sortModel) {\n    const comparator = () => 0;\n    return comparator;\n  }\n  const sortOperators = sortModel.map(sortItem => {\n    const columnField = sortItem.field;\n    const colDef = columnsWithDefaultColDef.find(({\n      field\n    }) => field === columnField);\n    return _extends({}, sortItem, {\n      valueGetter: simplifiedValueGetter(columnField, colDef),\n      sortComparator: colDef.sortComparator\n    });\n  });\n  const comparator = (row1, row2) => sortOperators.reduce((acc, {\n    valueGetter,\n    sort,\n    sortComparator\n  }) => {\n    if (acc !== 0) {\n      return acc;\n    }\n    const v1 = valueGetter(row1);\n    const v2 = valueGetter(row2);\n    return sort === 'desc' ? -1 * sortComparator(v1, v2) : sortComparator(v1, v2);\n  }, 0);\n  return comparator;\n};\nconst getFilteredRows = (rows, filterModel, columnsWithDefaultColDef) => {\n  if (filterModel === undefined || filterModel.items.length === 0) {\n    return rows;\n  }\n  const valueGetters = filterModel.items.map(({\n    field\n  }) => simplifiedValueGetter(field, columnsWithDefaultColDef.find(column => column.field === field)));\n  const filterFunctions = filterModel.items.map(filterItem => {\n    const {\n      field,\n      operator\n    } = filterItem;\n    const colDef = columnsWithDefaultColDef.find(column => column.field === field);\n    const filterOperator = colDef.filterOperators.find(({\n      value\n    }) => operator === value);\n    let parsedValue = filterItem.value;\n    if (colDef.valueParser) {\n      const parser = colDef.valueParser;\n      parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x)) : parser(filterItem.value);\n    }\n    return filterOperator?.getApplyFilterFn({\n      filterItem,\n      value: parsedValue\n    }, colDef);\n  });\n  if (filterModel.logicOperator === GridLogicOperator.Or) {\n    return rows.filter(row => filterModel.items.some((_, index) => {\n      const value = valueGetters[index](row);\n      return filterFunctions[index] === null ? true : filterFunctions[index]({\n        value\n      });\n    }));\n  }\n  return rows.filter(row => filterModel.items.every((_, index) => {\n    const value = valueGetters[index](row);\n    return filterFunctions[index] === null ? true : filterFunctions[index](value);\n  }));\n};\n\n/**\n * Simulates server data loading\n */\nexport const loadServerRows = (rows, queryOptions, serverOptions, columnsWithDefaultColDef) => {\n  const {\n    minDelay = 100,\n    maxDelay = 300,\n    useCursorPagination\n  } = serverOptions;\n  if (maxDelay < minDelay) {\n    throw new Error('serverOptions.minDelay is larger than serverOptions.maxDelay ');\n  }\n  const delay = randomInt(minDelay, maxDelay);\n  const {\n    cursor,\n    page = 0,\n    pageSize\n  } = queryOptions;\n  let nextCursor;\n  let firstRowIndex;\n  let lastRowIndex;\n  let filteredRows = getFilteredRows(rows, queryOptions.filterModel, columnsWithDefaultColDef);\n  const rowComparator = getRowComparator(queryOptions.sortModel, columnsWithDefaultColDef);\n  filteredRows = [...filteredRows].sort(rowComparator);\n  const totalRowCount = filteredRows.length;\n  if (!pageSize) {\n    firstRowIndex = 0;\n    lastRowIndex = filteredRows.length;\n  } else if (useCursorPagination) {\n    firstRowIndex = cursor ? filteredRows.findIndex(({\n      id\n    }) => id === cursor) : 0;\n    firstRowIndex = Math.max(firstRowIndex, 0); // if cursor not found return 0\n    lastRowIndex = firstRowIndex + pageSize;\n    nextCursor = lastRowIndex >= filteredRows.length ? undefined : filteredRows[lastRowIndex].id;\n  } else {\n    firstRowIndex = page * pageSize;\n    lastRowIndex = (page + 1) * pageSize;\n  }\n  const hasNextPage = lastRowIndex < filteredRows.length - 1;\n  const response = {\n    returnedRows: filteredRows.slice(firstRowIndex, lastRowIndex),\n    nextCursor,\n    hasNextPage,\n    totalRowCount\n  };\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(response);\n    }, delay); // simulate network latency\n  });\n};\nconst DEFAULT_DATASET_OPTIONS = {\n  dataSet: 'Commodity',\n  rowLength: 100,\n  maxColumns: 6\n};\nconst disableDelay = typeof DISABLE_CHANCE_RANDOM !== 'undefined' && DISABLE_CHANCE_RANDOM;\nconst DEFAULT_SERVER_OPTIONS = {\n  minDelay: disableDelay ? 0 : 100,\n  maxDelay: disableDelay ? 0 : 300,\n  useCursorPagination: true\n};\nexport const createFakeServer = (dataSetOptions, serverOptions) => {\n  const dataSetOptionsWithDefault = _extends({}, DEFAULT_DATASET_OPTIONS, dataSetOptions);\n  const serverOptionsWithDefault = _extends({}, DEFAULT_SERVER_OPTIONS, serverOptions);\n  const columns = getColumnsFromOptions(dataSetOptionsWithDefault);\n  const initialState = getInitialState(dataSetOptionsWithDefault, columns);\n  const defaultColDef = getGridDefaultColumnTypes();\n  const columnsWithDefaultColDef = columns.map(column => _extends({}, defaultColDef[column.type || 'string'], column));\n  const useQuery = queryOptions => {\n    const {\n      data: {\n        rows\n      },\n      loading: dataGenerationIsLoading\n    } = useDemoData(dataSetOptionsWithDefault);\n    const queryOptionsRef = React.useRef(queryOptions);\n    const [response, setResponse] = React.useState({\n      pageInfo: {},\n      rows: []\n    });\n    const [isLoading, setIsLoading] = React.useState(dataGenerationIsLoading);\n    React.useEffect(() => {\n      if (dataGenerationIsLoading) {\n        // dataset is not ready\n        return () => {};\n      }\n      queryOptionsRef.current = queryOptions;\n      let active = true;\n      setIsLoading(true);\n      setResponse(prev => Object.keys(prev.pageInfo).length === 0 ? prev : _extends({}, prev, {\n        pageInfo: {}\n      }));\n      (async function fetchData() {\n        const {\n          returnedRows,\n          nextCursor,\n          totalRowCount,\n          hasNextPage\n        } = await loadServerRows(rows, queryOptions, serverOptionsWithDefault, columnsWithDefaultColDef);\n        if (!active) {\n          return;\n        }\n        const newRep = {\n          rows: returnedRows,\n          pageInfo: {\n            totalRowCount,\n            nextCursor,\n            hasNextPage,\n            pageSize: returnedRows.length\n          }\n        };\n        setResponse(prev => isDeepEqual(prev, newRep) ? prev : newRep);\n        setIsLoading(false);\n      })();\n      return () => {\n        active = false;\n      };\n    }, [dataGenerationIsLoading, queryOptions, rows]);\n\n    // We use queryOptions pointer to be sure that isLoading===true as soon as the options change\n    const effectShouldStart = queryOptionsRef.current !== queryOptions;\n    return _extends({\n      isLoading: isLoading || effectShouldStart\n    }, response);\n  };\n  return {\n    columns,\n    columnsWithDefaultColDef,\n    initialState,\n    useQuery\n  };\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const headerFilteringStateInitializer = state => _extends({}, state, {\n  headerFiltering: {\n    editing: null,\n    menuOpen: null\n  }\n});\nexport const useGridHeaderFiltering = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridHeaderFiltering');\n  const setHeaderFilterState = React.useCallback(headerFilterState => {\n    apiRef.current.setState(state => {\n      var _headerFilterState$ed, _headerFilterState$me;\n      // Safety check to avoid MIT users from using it\n      // This hook should ultimately be moved to the Pro package\n      if (props.signature === 'DataGrid') {\n        return state;\n      }\n      return _extends({}, state, {\n        headerFiltering: {\n          editing: (_headerFilterState$ed = headerFilterState.editing) != null ? _headerFilterState$ed : null,\n          menuOpen: (_headerFilterState$me = headerFilterState.menuOpen) != null ? _headerFilterState$me : null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.signature]);\n  const startHeaderFilterEditMode = React.useCallback(field => {\n    logger.debug(`Starting edit mode on header filter for field: ${field}`);\n    apiRef.current.setHeaderFilterState({\n      editing: field\n    });\n  }, [apiRef, logger]);\n  const stopHeaderFilterEditMode = React.useCallback(() => {\n    logger.debug(`Stopping edit mode on header filter`);\n    apiRef.current.setHeaderFilterState({\n      editing: null\n    });\n  }, [apiRef, logger]);\n  const showHeaderFilterMenu = React.useCallback(field => {\n    logger.debug(`Opening header filter menu for field: ${field}`);\n    apiRef.current.setHeaderFilterState({\n      menuOpen: field\n    });\n  }, [apiRef, logger]);\n  const hideHeaderFilterMenu = React.useCallback(() => {\n    logger.debug(`Hiding header filter menu for active field`);\n    let fieldToFocus = apiRef.current.state.headerFiltering.menuOpen;\n    if (fieldToFocus) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setHeaderFilterState({\n        menuOpen: null\n      });\n      apiRef.current.setColumnHeaderFilterFocus(fieldToFocus);\n    }\n  }, [apiRef, logger]);\n  const headerFilterPrivateApi = {\n    setHeaderFilterState\n  };\n  const headerFilterApi = {\n    startHeaderFilterEditMode,\n    stopHeaderFilterEditMode,\n    showHeaderFilterMenu,\n    hideHeaderFilterMenu\n  };\n  useGridApiMethod(apiRef, headerFilterApi, 'public');\n  useGridApiMethod(apiRef, headerFilterPrivateApi, 'private');\n};"],
  "mappings": "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WAAW,UAAU,eAAe,UAAU,WAAW,UAAU,UAAU,WAAW,QAAQ,QAAQ,UAAU,UAAU,WAAW,UAAU,SAAS,UAAU,SAAS,UAAU,WAAW,SAAS,WAAW,SAAS,QAAQ,QAAQ,YAAY,QAAQ,WAAW,SAAS,SAAS,YAAY,SAAS,WAAW,UAAU,WAAW,WAAW,UAAU,YAAY,WAAW,QAAQ,SAAS,UAAU,UAAU,SAAS,aAAa,SAAS,SAAS,WAAW,UAAU,SAAS,QAAQ,QAAQ,UAAU,WAAW,QAAQ,UAAU,UAAU,QAAQ,YAAY,OAAO,UAAU,UAAU,SAAS,SAAS,UAAU,SAAS,SAAS,SAAS,QAAQ,SAAS,OAAO,SAAS,SAAS,UAAU,SAAS,UAAU,aAAa,SAAS,SAAS,WAAW,UAAU,QAAQ,SAAS,UAAU,UAAU,QAAQ,QAAQ,SAAS,WAAW,SAAS,SAAS,UAAU,WAAW,UAAU,YAAY,UAAU,UAAU,SAAS,WAAW,SAAS,UAAU,WAAW,WAAW,QAAQ,WAAW,SAAS,WAAW,QAAQ,QAAQ,SAAS,QAAQ,QAAQ,UAAU,SAAS,aAAa,SAAS,UAAU,QAAQ,QAAQ,QAAQ,UAAU,UAAU,SAAS,QAAQ,aAAa,UAAU,UAAU,UAAU,SAAS,WAAW,QAAQ,SAAS,SAAS,QAAQ,WAAW,OAAO,WAAW,WAAW,SAAS,SAAS,SAAS,UAAU,YAAY,UAAU,QAAQ,SAAS,SAAS,QAAQ,QAAQ,UAAU,OAAO,UAAU,WAAW,SAAS,SAAS,WAAW,UAAU,OAAO,SAAS,SAAS,UAAU,UAAU,SAAS,YAAY,OAAO,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,OAAO,SAAS,UAAU,WAAW,UAAU,UAAU,OAAO,QAAQ,OAAO,UAAU,UAAU,QAAQ,SAAS,WAAW,YAAY,QAAQ,UAAU,WAAW,YAAY,SAAS,SAAS,QAAQ,SAAS,OAAO,SAAS,WAAW,UAAU,UAAU,SAAS,QAAQ,SAAS,UAAU,SAAS,SAAS,UAAU,SAAS,SAAS,OAAO,WAAW,SAAS,SAAS,QAAQ,UAAU,SAAS,WAAW,WAAW,YAAY,WAAW,OAAO,SAAS,QAAQ,UAAU,WAAW,SAAS,QAAQ,aAAa,QAAQ,QAAQ,WAAW,WAAW,OAAO,SAAS,WAAW,aAAa,QAAQ,UAAU,UAAU,QAAQ,QAAQ,SAAS,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AU,YAAW,UAAS,WAAU,SAAQ,WAAU,eAAc,cAAa,aAAY,YAAW,aAAY,eAAc,cAAa,eAAc,YAAW,UAAS,YAAW,YAAW,WAAU,YAAW,QAAO,aAAY,YAAW,cAAa,YAAW,WAAU,YAAW,WAAU,SAAQ,UAAS,UAAS,SAAQ,WAAU,SAAQ,UAAS,UAAS,aAAY,WAAU,aAAY,UAAS,YAAW,UAAS,UAAS,WAAU,aAAY,QAAO,UAAS,UAAS,SAAQ,WAAU,YAAW,cAAa,YAAW,QAAO,UAAS,UAAS,WAAU,UAAS,SAAQ,UAAS,UAAS,UAAS,YAAW,YAAW,UAAS,UAAS,WAAU,SAAQ,YAAW,SAAQ,aAAY,UAAS,UAAS,UAAS,WAAU,YAAW,WAAU,aAAY,aAAY,WAAU,WAAU,YAAW,cAAa,YAAW,YAAW,cAAa,UAAS,YAAW,WAAU,WAAU,YAAW,SAAQ,WAAU,QAAO,WAAU,UAAS,WAAU,UAAS,QAAO,WAAU,UAAS,YAAW,WAAU,UAAS,UAAS,WAAU,WAAU,WAAU,YAAW,WAAU,UAAS,UAAS,aAAY,aAAY,YAAW,WAAU,YAAW,YAAW,UAAS,OAAM,aAAY,WAAU,OAAM,SAAQ,YAAW,UAAS,WAAU,UAAS,SAAQ,WAAU,WAAU,SAAQ,WAAU,aAAY,WAAU,aAAY,UAAS,UAAS,UAAS,YAAW,WAAU,WAAU,WAAU,UAAS,SAAQ,QAAO,WAAU,WAAU,WAAU,UAAS,WAAU,UAAS,OAAM,WAAU,QAAO,SAAQ,SAAQ,YAAW,UAAS,SAAQ,YAAW,YAAW,QAAO,YAAW,SAAQ,UAAS,SAAQ,UAAS,WAAU,UAAS,WAAU,UAAS,WAAU,QAAO,WAAU,WAAU,OAAM,QAAO,WAAU,UAAS,WAAU,UAAS,QAAO,UAAS,WAAU,YAAW,YAAW,SAAQ,QAAO,OAAM,SAAQ,UAAS,YAAW,WAAU,WAAU,QAAO,UAAS,WAAU,QAAO,WAAU,UAAS,YAAW,UAAS,aAAY,WAAU,UAAS,YAAW,YAAW,WAAU,YAAW,UAAS,WAAU,YAAW,WAAU,UAAS,cAAa,UAAS,WAAU,YAAW,SAAQ,UAAS,WAAU,WAAU,UAAS,SAAQ,UAAS,UAAS,aAAY,YAAW,WAAU,UAAS,UAAS,aAAY,WAAU,OAAM,QAAO,WAAU,WAAU,YAAW,UAAS,UAAS,QAAO,QAAO,WAAU,QAAO,UAAS,WAAU,WAAU,UAAS,WAAU,WAAU,QAAO,SAAQ,YAAW,YAAW,aAAY,YAAW,aAAY,OAAM,UAAS,YAAW,WAAU,WAAU,SAAQ,WAAU,WAAU,SAAQ,UAAS,QAAO,UAAS,QAAO,WAAU,WAAU,UAAS,QAAO,YAAW,YAAW,SAAQ,UAAS,UAAS,WAAU,SAAQ,QAAO,SAAQ,WAAU,WAAU,UAAS,SAAQ,YAAW,gBAAe,aAAY,YAAW,SAAQ,WAAU,WAAU,YAAW,aAAY,WAAU,SAAQ,UAAS,SAAQ,aAAY,YAAW,WAAU,WAAU,aAAY,YAAW,UAAS,UAAS,YAAW,YAAW,aAAY,eAAc,YAAW,WAAU,WAAU,UAAS,YAAW,YAAW,UAAS,UAAS,aAAY,UAAS,WAAU,UAAS,OAAM,UAAS,UAAS,YAAW,UAAS,UAAS,WAAU,UAAS,aAAY,WAAU,UAAS,aAAY,YAAW,UAAS,WAAU,SAAQ,YAAW,UAAS,WAAU,aAAY,UAAS,YAAW,QAAO,YAAW,SAAQ,UAAU;AAAA,UAC1gK;AAAA,UAEA,UAAU;AAAA,YACN,MAAM,CAAC,QAAQ,QAAQ,aAAa,UAAU,YAAY,OAAO,SAAS,UAAU,SAAS,SAAS,SAAS,QAAQ,YAAY,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,UAAU,UAAU,YAAY,SAAS,UAAU,SAAS,UAAU,QAAQ,aAAa,WAAW,OAAO,UAAU,SAAS,UAAU,UAAU,SAAS,QAAQ,UAAU,OAAO,WAAW,QAAQ,QAAQ,QAAQ,UAAU,SAAS,SAAS,UAAU,aAAa,QAAQ,QAAQ,aAAa,SAAS,SAAS,QAAQ,OAAO,SAAS,WAAW,UAAU,SAAS,SAAS,SAAS,UAAU,UAAU,SAAS,UAAU,SAAS,SAAS,QAAQ,OAAO,QAAQ,WAAW,SAAS,YAAY,SAAS,SAAS,SAAS,QAAQ,SAAS,UAAU,QAAQ,SAAS,WAAW,SAAS,QAAQ,UAAU,UAAU,UAAU,SAAS,aAAa,WAAW,QAAQ,SAAS,SAAS,UAAU,UAAU,QAAQ,YAAY,SAAS,WAAW,SAAS,WAAW,UAAU,UAAU,aAAa,SAAS,OAAO,UAAU,QAAQ,WAAW,WAAW,WAAW,OAAO,WAAW,SAAS,QAAQ,UAAU,SAAS,QAAQ,WAAW,OAAO,UAAU,UAAU,OAAO,SAAS,WAAW,WAAW,OAAO,UAAU,SAAS,SAAS,UAAU,WAAW,QAAQ,SAAS,UAAU,UAAU,WAAW,UAAU,QAAQ,QAAQ,SAAS,SAAS,UAAU,SAAS,YAAY,YAAY,QAAQ,YAAY,QAAQ,SAAS,aAAa,YAAY,UAAU,YAAY,SAAS,QAAQ,UAAU,UAAU,UAAU,UAAU,WAAW,YAAY,SAAS,SAAS,OAAO,SAAS,UAAU,QAAQ,WAAW,aAAa,QAAQ,QAAQ,QAAQ,SAAS,YAAY,SAAS,QAAQ,UAAU,UAAU,UAAU,SAAS,OAAO,UAAU,YAAY,aAAa,SAAS,SAAS,OAAO,WAAW,SAAS,WAAW,WAAW,UAAU,SAAS,WAAW,UAAU,SAAS,SAAS,WAAW,aAAa,QAAQ,YAAY,UAAU,WAAW,YAAY,WAAW,UAAU,QAAQ,QAAQ,QAAQ,UAAU,UAAU,YAAY,QAAQ,UAAU,UAAU,UAAU,QAAQ,QAAQ,UAAU,WAAW,cAAc,QAAQ,WAAW,QAAQ,UAAU,WAAW,SAAS,UAAU,WAAW,QAAQ,UAAU,WAAW,WAAW,UAAU,UAAU,SAAS,QAAQ,UAAU,WAAW,SAAS,SAAS,UAAU,WAAW,UAAU,WAAW,WAAW,SAAS;AAAA;AAAA,YAEx2E,MAAM,CAAC,OAAO,WAAW,cAAc,WAAW,SAAS,UAAU,QAAQ,cAAc,YAAY,UAAU,cAAc,aAAa,WAAW,QAAQ,WAAW,UAAU,WAAW,YAAY,aAAa,UAAU,SAAS,WAAW,SAAS,YAAY,WAAW,YAAY,YAAY,SAAS,WAAW,UAAU,UAAU,SAAS,WAAW,YAAY,YAAY,WAAW,UAAU,WAAW,QAAQ,aAAa,SAAS,YAAY,SAAS,cAAc,YAAY,QAAQ,OAAO,YAAY,YAAY,YAAY,YAAY,SAAS,UAAU,aAAa,aAAa,QAAQ,SAAS,SAAS,UAAU,QAAQ,WAAW,WAAW,YAAY,UAAU,YAAY,YAAY,cAAc,UAAU,aAAa,SAAS,OAAO,UAAU,QAAQ,WAAW,SAAS,QAAQ,YAAY,WAAW,SAAS,OAAO,WAAW,SAAS,SAAS,WAAW,QAAQ,SAAS,QAAQ,SAAS,WAAW,SAAS,SAAS,WAAW,YAAY,SAAS,WAAW,QAAQ,YAAY,cAAc,SAAS,kBAAkB,gBAAgB,eAAe,aAAa,gBAAgB,UAAU,UAAU,SAAS,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,UAAU,YAAY,SAAS,aAAa,SAAS,QAAQ,SAAS,YAAY,SAAS,WAAW,aAAa,WAAW,UAAU,QAAQ,QAAQ,WAAW,QAAQ,WAAW,WAAW,YAAY,WAAW,UAAU,QAAQ,UAAU,WAAW,UAAU,UAAU,aAAa,SAAS,SAAS,YAAY,WAAW,UAAU,QAAQ,WAAW,SAAS,aAAa,WAAW,SAAS,WAAW,SAAS,QAAQ,YAAY,SAAS,SAAS,YAAY,UAAU;AAAA;AAAA,YAExqD,MAAM,CAAC,OAAO,WAAW,QAAQ,UAAU,SAAS,OAAO,SAAS,SAAS,QAAQ,QAAQ,QAAQ,YAAY,aAAa,WAAW,SAAS,UAAU,SAAS,WAAW,UAAU,SAAS,WAAW,YAAY,WAAW,aAAa,WAAW,YAAY,UAAU,SAAS,QAAQ,SAAS,SAAS,QAAQ,SAAS,QAAQ,SAAS,WAAW,UAAU,SAAS,OAAO,SAAS,SAAS,SAAS,WAAW,OAAO,SAAS,SAAS,WAAW,UAAU,SAAS,SAAS,OAAO,QAAQ,UAAU,QAAQ,UAAU,YAAY,WAAW,WAAW,WAAW,YAAY,WAAW,WAAW,QAAQ,SAAS,SAAS,SAAS,SAAS,SAAS,OAAO,QAAQ,SAAS,QAAQ,UAAU,SAAS,UAAU,SAAS,QAAQ,WAAW,SAAS,UAAU,UAAU,SAAS,SAAS,SAAS,WAAW,SAAS,aAAa,WAAW,WAAW,WAAW,SAAS,WAAW,YAAY,UAAU,UAAU,SAAS,WAAW,UAAU,QAAQ,WAAW,UAAU,YAAY,SAAS,WAAW,UAAU,OAAO,UAAU,QAAQ,WAAW,QAAQ,WAAW,UAAU,SAAS,QAAQ,UAAU,UAAU,SAAS,UAAU,SAAS,WAAW,UAAU,QAAQ,SAAS,UAAU,WAAW,WAAW,UAAU,QAAQ,YAAY,SAAS,WAAW,UAAU,KAAK;AAAA;AAAA,YAEvwC,MAAM,CAAC,SAAQ,QAAO,aAAY,WAAU,WAAU,WAAU,YAAW,aAAY,YAAW,YAAW,SAAQ,UAAS,WAAU,aAAY,WAAU,UAAS,YAAW,aAAY,YAAW,UAAS,YAAW,SAAQ,UAAS,aAAY,SAAQ,aAAY,QAAO,UAAS,SAAQ,UAAS,YAAW,WAAU,UAAS,UAAS,WAAU,aAAY,SAAQ,eAAc,WAAU,SAAQ,WAAU,WAAU,SAAQ,QAAO,SAAQ,UAAS,UAAS,cAAa,UAAS,YAAW,YAAW,UAAS,YAAW,SAAQ,YAAW,aAAY,aAAY,SAAQ,aAAY,UAAS,aAAY,UAAS,SAAQ,SAAQ,aAAY,WAAU,WAAU,UAAS,WAAU,aAAY,UAAS,YAAW,aAAY,aAAY,UAAS,aAAY,QAAO,WAAU,UAAS,SAAQ,cAAa,WAAU,aAAY,YAAW,YAAW,cAAa,YAAW,WAAU,YAAW,aAAY,YAAW,YAAW,WAAU,YAAW,UAAS,UAAS,UAAS,SAAQ,WAAU,WAAU,WAAU,WAAU,aAAY,WAAU,UAAS,WAAU,SAAQ,UAAS,UAAS,WAAU,WAAU,UAAS,WAAU,aAAY,cAAa,WAAU,WAAU,UAAS,UAAS,WAAU,aAAY,UAAS,QAAO,UAAS,QAAO,UAAS,aAAY,QAAO,WAAU,YAAW,UAAS,UAAS,WAAU,WAAU,aAAY,SAAQ,UAAS,UAAS,UAAS,SAAQ,WAAU,SAAQ,aAAY,YAAW,YAAW,WAAU,aAAY,aAAY,cAAa,UAAS,YAAW,SAAQ,WAAU,SAAQ,YAAW,YAAW,SAAQ,cAAa,YAAW,WAAU,YAAW,UAAS,YAAW,aAAY,aAAY,UAAS,WAAU,aAAY,UAAS,WAAU,YAAW,YAAW,aAAY,SAAQ,cAAa,cAAa,aAAY,UAAS,SAAQ,UAAS,YAAW,YAAW,YAAW,cAAa,QAAO,QAAO,YAAW,UAAS,cAAa,aAAY,WAAU,YAAW,aAAY,WAAU,YAAW,UAAS,UAAS,UAAS,UAAS,YAAW,UAAS,SAAQ,aAAY,aAAY,WAAU,YAAW,SAAQ,SAAQ,SAAQ,YAAW,UAAS,QAAO,WAAU,aAAY,SAAQ,QAAO,UAAS,UAAS,QAAO,WAAU,YAAW,gBAAe,aAAY,UAAS,QAAO,cAAa,WAAU,aAAY,UAAS,WAAU,WAAU,WAAU,WAAU,aAAY,WAAU,cAAa,OAAM,OAAM,WAAU,SAAQ,WAAU,YAAW,WAAU,YAAW,UAAS,SAAQ,SAAQ,YAAW,UAAS,WAAU,UAAS,WAAU,aAAY,YAAW,aAAY,UAAS,WAAU,aAAY,aAAY,YAAW,YAAW,YAAW,UAAS,aAAY,cAAa,eAAc,WAAU,WAAU,UAAS,WAAU,aAAY,WAAU,YAAW,aAAY,YAAW,YAAW,YAAW,QAAO,SAAQ,SAAQ,QAAO,WAAU,YAAW,UAAS,UAAS,WAAU,YAAW,cAAa,QAAO,UAAS,UAAS,YAAW,UAAS,aAAY,UAAS,SAAQ,SAAQ,SAAQ,YAAW,WAAU,QAAO,SAAQ,SAAQ,SAAQ,SAAQ,aAAY,YAAW,WAAU,YAAW,aAAY,WAAU,OAAM,QAAO,UAAS,QAAO,YAAW,YAAW,SAAQ,YAAW,WAAU,YAAW,SAAQ,SAAQ,UAAS,aAAY,UAAS,aAAY,YAAW,SAAQ,aAAY,UAAS,cAAa,YAAW,SAAQ,UAAS,SAAQ,UAAS,UAAS,WAAU,UAAS,WAAU,YAAW,QAAO,WAAU,cAAa,UAAS,WAAU,WAAU,eAAc,aAAY,WAAU,UAAS,aAAY,YAAW,UAAS,SAAQ,WAAU,WAAU,UAAS,UAAS,UAAS,UAAS,YAAW,UAAS,aAAY,QAAO,QAAO,UAAS,UAAS,UAAS,SAAQ,SAAQ,UAAS,UAAS,WAAU,YAAW,WAAU,WAAU,UAAS,UAAS,WAAU,aAAY,SAAQ,YAAW,WAAU,aAAY,UAAS,WAAU,UAAS,WAAU,YAAW,WAAU,cAAa,cAAa,aAAY,aAAY,aAAY,YAAW,aAAY,YAAW,UAAS,WAAU,aAAY,UAAS,aAAY,YAAW,WAAU,UAAS,YAAW,QAAO,QAAO,QAAO,WAAU,UAAS,WAAU,QAAO,YAAW,UAAS,UAAS,UAAS,YAAW,SAAQ,YAAW,YAAW,WAAU,UAAS,QAAO,WAAU,UAAS,UAAS,UAAS,aAAY,WAAU,WAAU,UAAS,WAAU,SAAQ,YAAW,WAAU,YAAW,UAAS,aAAY,WAAU,aAAY,YAAW,aAAY,YAAW,YAAW,YAAW,WAAU,WAAU,WAAU,WAAU,UAAS,UAAS,SAAQ,QAAO,KAAK;AAAA,UACt9I;AAAA,QACJ;AAAA,QAEA,WAAW;AAAA,UACP,MAAM,CAAC,SAAS,WAAW,YAAY,SAAS,SAAS,SAAS,UAAU,UAAU,SAAS,UAAU,YAAY,UAAU,WAAW,SAAS,UAAU,UAAU,YAAY,UAAU,YAAY,YAAY,SAAS,aAAa,SAAS,OAAO,UAAU,QAAQ,SAAS,SAAS,aAAa,QAAQ,UAAU,SAAS,QAAQ,SAAS,SAAS,SAAS,SAAS,YAAY,UAAU,UAAU,YAAY,SAAS,WAAW,UAAU,YAAY,YAAY,UAAU,SAAS,WAAW,WAAW,WAAW,WAAW,UAAU,UAAU,QAAQ,QAAQ,UAAU,QAAQ,UAAU,UAAU,UAAU,UAAU,cAAc,OAAO,UAAU,QAAQ,UAAU,YAAY,QAAQ,WAAW,SAAS,UAAU,UAAU,SAAS,WAAW,SAAS,WAAW,QAAQ,UAAU,QAAQ,aAAa,WAAW,WAAW,SAAS,UAAU,QAAQ,aAAa,UAAU,UAAU,cAAc,UAAU,WAAW,UAAU,YAAY,UAAU,aAAa,WAAW,WAAW,QAAQ,SAAS,SAAS,QAAQ,YAAY,UAAU,YAAY,WAAW,SAAS,QAAQ,QAAQ,UAAU,SAAS,YAAY,UAAU,SAAS,YAAY,UAAU,YAAY,QAAQ,YAAY,SAAS,SAAS,UAAU,WAAW,SAAS,QAAQ,WAAW,WAAW,UAAU,UAAU,UAAU,SAAS,YAAY,SAAS,QAAQ,SAAS,WAAW,WAAW,UAAU,SAAS,SAAS,SAAS,SAAS,UAAU,QAAQ,UAAU,QAAQ,aAAa,QAAQ,SAAS,WAAW,UAAU,SAAS,WAAW,SAAS,UAAU,YAAY,QAAQ,SAAS,WAAW,QAAQ,WAAW,UAAU,WAAW,WAAW,YAAY,SAAS,UAAU,SAAS,YAAY,UAAU,UAAU,UAAU,OAAO,WAAW,SAAS,WAAW,UAAU,UAAU,QAAQ,cAAc,WAAW,QAAQ,WAAW,QAAQ,UAAU,OAAO,SAAS,aAAa,aAAa,UAAU,UAAU,YAAY,WAAW,UAAU,QAAQ,UAAU,UAAU,UAAU,YAAY,UAAU,UAAU,aAAa,QAAQ,WAAW,QAAQ,WAAW,YAAY,WAAW,WAAW,UAAU,cAAc,YAAY,cAAc,YAAY,SAAS,SAAS,UAAU,SAAS,UAAU,WAAW,YAAY,UAAU,aAAa,SAAS,UAAU,UAAU,UAAU,WAAW,UAAU,UAAU,UAAU,QAAQ,OAAO,UAAU,SAAS,QAAQ,WAAW,WAAW,UAAU,SAAS,UAAU,WAAW,SAAS,UAAU,OAAO,WAAW,UAAU,UAAU,UAAU,UAAU,UAAU,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,WAAW,UAAU,UAAU,QAAQ,YAAY,WAAW,OAAO,SAAS,WAAW,QAAQ,QAAQ,WAAW,UAAU,QAAQ,YAAY,QAAQ,YAAY,WAAW,UAAU,WAAW,UAAU,WAAW,WAAW,UAAU,UAAU,UAAU,WAAW,YAAY,SAAS,SAAS,SAAS,aAAa,YAAY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YAAY,WAAW,aAAa,YAAY,cAAc,QAAQ,UAAU,WAAW,WAAW,SAAS,YAAY,SAAS,WAAW,YAAY,WAAW,WAAW,aAAa,SAAS,UAAU,YAAY,YAAY,YAAY,UAAU,WAAW,YAAY,cAAc,eAAe,YAAY,cAAc,SAAS,WAAW,WAAW,YAAY,QAAQ,SAAS,SAAS,WAAW,YAAY,SAAS,UAAU,aAAa,WAAW,SAAS,YAAY,cAAc,QAAQ,aAAa,YAAY,SAAS,cAAc,WAAW,YAAY,WAAW,SAAS,WAAW,YAAY,QAAQ,YAAY,UAAU,UAAU,aAAa,SAAS,QAAQ,aAAa,aAAa,YAAY,WAAW,aAAa,UAAU,WAAW,SAAS,SAAS,WAAW,SAAS,aAAa,QAAQ,WAAW,WAAW,SAAS,WAAW,WAAW,YAAY,WAAW,SAAS,UAAU,YAAY,SAAS,aAAa,aAAa,UAAU,UAAU,SAAS,SAAS,UAAU,UAAU,YAAY,WAAW,UAAU,WAAW,QAAQ,YAAY,SAAS,WAAW,SAAS,WAAW,YAAY,SAAS,YAAY,YAAY,aAAa,UAAU,SAAS,WAAW,aAAa,WAAW,aAAa,eAAe,SAAS,WAAW,UAAU,QAAQ,SAAS,SAAS,WAAW,WAAW,WAAW,YAAY,SAAS,SAAS,SAAS,SAAS,UAAU,SAAS,aAAa,aAAa,aAAa,SAAS,SAAS,YAAY,UAAU,YAAY,UAAU,SAAS,WAAW,WAAW,SAAS,aAAa,aAAa,aAAa,aAAa,UAAU,SAAS,QAAQ,SAAS,WAAW,SAAS,WAAW,cAAc,WAAW,SAAS,YAAY,aAAa,aAAa,cAAc,WAAW,aAAa,UAAU,UAAU,UAAU,WAAW,UAAU,eAAe,aAAa,cAAc,QAAQ,UAAU,aAAa,UAAU,aAAa,YAAY,SAAS,WAAW,YAAY,WAAW,QAAQ,SAAS,SAAS,SAAS,SAAS,cAAc,cAAc,YAAY,UAAU,cAAc,WAAW,UAAU,WAAW,WAAW,QAAQ,QAAQ,SAAS,aAAa,WAAW,SAAS,UAAU,WAAW,SAAS,WAAW,WAAW,aAAa,cAAc,SAAS,WAAW,WAAW,YAAY,aAAa,YAAY,WAAW,WAAW,aAAa,UAAU,WAAW,SAAS,WAAW,SAAS,WAAW,WAAW,aAAa,YAAY,WAAW,SAAS,UAAU,UAAU,UAAU,QAAQ,WAAW,UAAU,SAAS,SAAS,QAAQ,MAAM,MAAM,QAAQ,MAAM,SAAS,QAAQ,WAAW,YAAY,UAAU,SAAS,SAAS,SAAS,QAAQ,OAAO,WAAW,QAAQ,OAAO;AAAA;AAAA,UAE9rV,MAAK,CAAC,UAAU,UAAU,YAAY,SAAS,QAAQ,UAAU,SAAS,WAAW,QAAQ,QAAQ,QAAQ,SAAS,aAAa,QAAQ,QAAQ,OAAO,SAAS,SAAS,UAAU,SAAS,UAAU,WAAW,UAAU,WAAW,UAAU,SAAS,cAAc,SAAS,SAAS,UAAU,WAAW,WAAW,YAAY,YAAY,SAAS,SAAS,SAAS,SAAS,UAAU,aAAa,YAAY,YAAY,SAAS,eAAe,SAAS,QAAQ,QAAQ,aAAa,YAAY,WAAW,YAAY,UAAU,UAAU,WAAW,UAAU,UAAU,WAAW,UAAU,WAAW,WAAW,YAAY,SAAS,QAAQ,YAAY,OAAO,QAAQ,WAAW,YAAY,UAAU,UAAU,UAAU,SAAS,YAAY,UAAU,WAAW,QAAQ,UAAU,WAAW,OAAO,WAAW,QAAQ,UAAU,WAAW,UAAU,OAAO,YAAY,UAAU,eAAe,WAAW,UAAU,UAAU,WAAW,QAAQ,QAAQ,UAAU,SAAS,SAAS,aAAa,YAAY,SAAS,QAAQ,WAAW,UAAU,YAAY,UAAU,YAAY,YAAY,WAAW,YAAY,YAAY,SAAS,WAAW,aAAa,UAAU,UAAU,QAAQ,SAAS,QAAQ,YAAY,OAAO,YAAY,cAAc,OAAO,SAAS,UAAU,QAAQ,YAAY,YAAY,WAAW,WAAW,aAAa,WAAW,aAAa,WAAW,QAAQ,UAAU,SAAS,OAAO,YAAY,YAAY,WAAW,aAAa,aAAa,SAAS,WAAW,YAAY,SAAS,WAAW,WAAW,aAAa,YAAY,YAAY,YAAY,WAAW,WAAW,YAAY,WAAW,YAAY,aAAa,YAAY,YAAY,aAAa,YAAY,aAAa,UAAU,YAAY,WAAW,UAAU,YAAY,YAAY,aAAa,WAAW,YAAY,cAAc,aAAa,cAAc,YAAY,UAAU,cAAc,gBAAgB,cAAc,aAAa,cAAc,gBAAgB,eAAe,YAAY,YAAY,aAAa,aAAa,eAAe,cAAc,gBAAgB,YAAY,cAAc,YAAY,aAAa,YAAY,mBAAmB,gBAAgB,cAAc,iBAAiB,cAAc,gBAAgB,iBAAiB,iBAAiB,iBAAiB,kBAAkB,mBAAmB,iBAAiB,iBAAiB,iBAAiB,gBAAgB,kBAAkB,gBAAgB,gBAAgB,kBAAkB,iBAAiB,iBAAiB,gBAAgB,gBAAgB,iBAAiB,kBAAkB,iBAAiB,aAAa;AAAA;AAAA,UAE/hF,MAAK,CAAC,SAAQ,SAAQ,YAAW,UAAS,SAAQ,UAAS,SAAQ,UAAS,UAAS,WAAU,WAAU,YAAW,YAAW,UAAS,UAAS,SAAQ,WAAU,UAAS,SAAQ,QAAO,SAAQ,UAAS,UAAS,SAAQ,WAAU,QAAO,UAAS,UAAS,UAAS,QAAO,QAAO,UAAS,SAAQ,SAAQ,OAAM,QAAO,SAAQ,YAAW,UAAS,SAAQ,SAAQ,SAAQ,YAAW,UAAS,SAAQ,UAAS,SAAQ,WAAU,SAAQ,aAAY,YAAW,SAAQ,QAAO,UAAS,cAAa,UAAS,WAAU,QAAO,QAAO,UAAS,UAAS,OAAM,YAAW,QAAO,YAAW,YAAW,WAAU,SAAQ,SAAQ,SAAQ,SAAQ,aAAY,UAAS,WAAU,UAAS,QAAO,UAAS,QAAO,SAAQ,OAAM,QAAO,WAAU,YAAW,YAAW,QAAO,UAAS,UAAS,SAAQ,UAAS,UAAS,SAAQ,UAAS,WAAU,UAAS,UAAS,WAAU,WAAU,UAAS,SAAQ,UAAS,UAAS,WAAU,SAAQ,YAAW,SAAQ,QAAO,UAAS,UAAS,WAAU,WAAU,WAAU,YAAW,YAAW,SAAQ,OAAM,QAAO,UAAS,OAAM,UAAS,QAAO,YAAW,QAAO,YAAW,WAAU,WAAU,QAAO,UAAS,QAAO,UAAS,WAAU,SAAQ,QAAO,SAAQ,SAAQ,QAAO,SAAQ,SAAQ,aAAY,WAAU,QAAO,SAAQ,QAAO,UAAS,UAAS,WAAU,WAAU,UAAS,WAAU,QAAO,QAAO,QAAO,SAAQ,SAAQ,QAAO,SAAQ,WAAU,SAAQ,SAAQ,QAAO,WAAU,WAAU,WAAU,UAAS,aAAY,UAAS,UAAS,QAAO,WAAU,cAAa,QAAO,WAAU,QAAO,QAAO,QAAO,SAAQ,SAAQ,aAAY,SAAQ,WAAU,UAAS,UAAS,SAAQ,aAAY,YAAW,QAAO,SAAQ,QAAO,WAAU,UAAS,YAAW,YAAW,SAAQ,UAAS,YAAW,SAAQ,WAAU,UAAS,UAAS,WAAU,YAAW,UAAS,WAAU,WAAU,QAAO,YAAW,YAAW,WAAU,WAAU,SAAQ,SAAQ,WAAU,UAAS,WAAU,YAAW,UAAS,SAAQ,WAAU,UAAS,UAAS,cAAa,QAAO,SAAQ,OAAM,aAAY,WAAU,UAAS,WAAU,QAAO,SAAQ,aAAY,cAAa,WAAU,UAAS,WAAU,WAAU,UAAS,UAAS,UAAS,UAAS,UAAS,YAAW,aAAY,QAAO,SAAQ,WAAU,YAAW,SAAQ,UAAS,SAAQ,WAAU,UAAS,YAAW,WAAU,cAAa,SAAQ,WAAU,UAAS,QAAO,WAAU,QAAO,aAAY,YAAW,QAAO,QAAO,SAAQ,aAAY,QAAO,UAAS,UAAS,YAAW,UAAS,SAAQ,UAAS,aAAY,UAAS,SAAQ,UAAS,WAAU,UAAS,SAAQ,YAAW,WAAU,WAAU,WAAU,aAAY,QAAO,UAAS,UAAS,SAAQ,WAAU,WAAU,QAAO,WAAU,UAAS,aAAY,SAAQ,YAAW,UAAS,YAAW,WAAU,WAAU,YAAW,WAAU,WAAU,UAAS,aAAY,UAAS,aAAY,QAAO,SAAQ,UAAS,WAAU,UAAS,UAAS,aAAY,WAAU,UAAS,UAAS,UAAS,QAAO,UAAS,WAAU,QAAO,SAAQ,UAAS,YAAW,aAAY,WAAU,QAAO,WAAU,SAAQ,UAAS,WAAU,UAAS,UAAS,cAAa,QAAO,aAAY,WAAU,WAAU,QAAO,SAAQ,SAAQ,UAAS,QAAO,QAAO,UAAS,SAAQ,WAAU,QAAO,UAAS,SAAQ,SAAQ,aAAY,YAAW,UAAS,UAAS,UAAS,UAAS,cAAa,WAAU,WAAU,UAAS,OAAM,QAAO,WAAU,SAAQ,QAAO,aAAY,SAAQ,UAAS,QAAO,WAAU,SAAQ,aAAY,YAAW,YAAW,UAAS,UAAS,SAAQ,SAAQ,YAAW,WAAU,SAAQ,WAAU,OAAM,UAAS,SAAQ,QAAO,UAAS,YAAW,SAAQ,SAAQ,QAAO,WAAU,YAAW,SAAQ,YAAW,SAAQ,SAAQ,WAAU,UAAS,QAAO,SAAQ,UAAS,SAAQ,UAAS,UAAS,WAAU,UAAS,SAAQ,cAAa,WAAU,aAAY,WAAU,UAAS,UAAS,aAAY,QAAO,UAAS,WAAU,YAAW,YAAW,UAAS,SAAQ,SAAQ,SAAQ,WAAU,WAAU,WAAU,YAAW,QAAO,WAAU,SAAQ,UAAS,SAAQ,YAAW,aAAY,SAAQ,UAAS,SAAQ,WAAU,QAAO,SAAQ,UAAS,YAAW,SAAQ,SAAQ,YAAW,UAAS,WAAU,QAAO,SAAQ,SAAQ,QAAO,SAAQ,eAAc,UA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A,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAA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EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,WAAW;AACbbb,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAA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",
  "names": ["Chance", "i", "k", "range", "random", "chance", "self", "arr", "alpha", "colorValue", "birthday", "gender", "cf", "range2", "data", "_jsx", "React", "import_jsx_runtime", "Country", "_jsxs", "_jsx", "React", "React", "import_jsx_runtime", "DemoLink", "_jsx", "import_jsx_runtime", "_jsx", "React", "import_jsx_runtime", "Incoterm", "_jsxs", "_jsx", "InfoIcon", "React", "import_jsx_runtime", "Pnl", "_jsx", "React", "import_jsx_runtime", "Value", "ProgressBar", "_jsxs", "_jsx", "React", "import_jsx_runtime", "RatingValue", "_jsxs", "_jsx", "React", "import_Info", "import_jsx_runtime", "_jsx", "ReportProblemIcon", "InfoIcon", "AutorenewIcon", "DoneIcon", "React", "import_jsx_runtime", "Value", "TotalPrice", "_jsx", "React", "i", "LICENSE_STATUS", "releaseInfo", "React", "React", "releaseInfo", "React", "import_jsx_runtime", "releaseInfo", "_jsx", "React", "import_jsx_runtime", "React", "React", "React", "React", "useGridRootProps", "GRID_DEFAULT_LOCALE_TEXT", "getDataGridUtilityClass", "gridClasses", "React", "React", "apiRef", "React", "GridSignature", "registryContainer", "useGridApiEventHandler", "apiRef", "useGridApiEventHandler", "apiRef", "React", "apiRef", "useGridSelector", "gridDimensionsSelector", "createSelector", "createSelector", "GridPinnedColumnPosition", "createSelector", "gridColumnLookupSelector", "filter", "i", "React", "import_jsx_runtime", "classes", "getDataGridUtilityClass", "useGridRootProps", "apiRef", "_jsx", "PropTypes", "_jsx", "apiRef", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "apiRef", "useGridRootProps", "_jsx", "PropTypes", "isNumber", "i", "isDeepEqual", "length", "random", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "apiRef", "useGridRootProps", "_jsx", "PropTypes", "GridEditModes", "GridCellModes", "GridRowModes", "GridLogicOperator", "GridCellEditStartReasons", "GridCellEditStopReasons", "GridRowEditStartReasons", "GridRowEditStopReasons", "GridLogicOperator", "apiRef", "apiRef", "gridColumnLookupSelector", "i", "cache", "passFilterLogic", "GridLogicOperator", "apiRef", "collator", "GRID_STRING_COL_DEF", "React", "import_prop_types", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "gridClasses", "apiRef", "useGridRootProps", "_a", "_jsx", "PropTypes", "import_jsx_runtime", "_excluded", "apiRef", "useGridRootProps", "_a", "_jsxs", "gridClasses", "_jsx", "PropTypes", "_jsx", "GRID_ACTIONS_COLUMN_TYPE", "GRID_STRING_COL_DEF", "React", "import_prop_types", "createSelector", "gridRowsDataRowIdToIdLookupSelector", "gridRowTreeSelector", "GRID_ROOT_GROUP_ID", "i", "apiRef", "cache", "gridDimensionsSelector", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "apiRef", "useGridRootProps", "_jsx", "PropTypes", "_jsx", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "apiRef", "useGridRootProps", "_jsx", "PropTypes", "_jsx", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "apiRef", "useGridRootProps", "_jsxs", "_jsx", "PropTypes", "apiRef", "GRID_STRING_COL_DEF", "React", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "apiRef", "useGridRootProps", "_a", "_jsx", "PropTypes", "GridCellCheckboxRenderer", "React", "import_prop_types", "gridFocusCellSelector", "createSelector", "createSelector", "gridSortedRowIdsSelector", "createSelector", "gridRowTreeSelector", "createSelector", "gridFilteredRowsLookupSelector", "gridFilteredDescendantCountLookupSelector", "gridRowTreeSelector", "gridColumnLookupSelector", "_a", "React", "useGridApiMethod", "React", "React", "apiRef", "React", "useFirstRender", "React", "React", "noop", "createSelector", "gridRowTreeSelector", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "GridHeaderCheckbox", "apiRef", "useGridRootProps", "useGridSelector", "_jsx", "PropTypes", "import_jsx_runtime", "GRID_CHECKBOX_SELECTION_FIELD", "GRID_CHECKBOX_SELECTION_COL_DEF", "apiRef", "_jsx", "GridCellCheckboxRenderer", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "apiRef", "useGridRootProps", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "apiRef", "useGridRootProps", "_jsx", "PropTypes", "_jsx", "apiRef", "GRID_DATE_COL_DEF", "GRID_STRING_COL_DEF", "GRID_DATETIME_COL_DEF", "GRID_STRING_COL_DEF", "isNumber", "React", "import_prop_types", "isNavigationKey", "isSingleSelectColDef", "import_jsx_runtime", "_excluded", "_excluded2", "isKeyboardEvent", "useGridRootProps", "apiRef", "_a", "isSingleSelectColDef", "_jsx", "_createElement", "PropTypes", "_jsx", "React", "import_prop_types", "import_react", "import_jsx_runtime", "_excluded", "_createElement", "apiRef", "useGridRootProps", "isSingleSelectColDef", "_jsxs", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "apiRef", "useGridRootProps", "isSingleSelectColDef", "_jsx", "PropTypes", "GRID_STRING_COL_DEF", "apiRef", "isSingleSelectColDef", "getGridDefaultColumnTypes", "GRID_STRING_COL_DEF", "GRID_DATE_COL_DEF", "GRID_DATETIME_COL_DEF", "GRID_ACTIONS_COLUMN_TYPE", "createSelector", "createSelector", "getGridDefaultColumnTypes", "i", "GRID_STRING_COL_DEF", "apiRef", "getTotalHeaderHeight", "React", "import_jsx_runtime", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "gridClasses", "apiRef", "useGridSelector", "gridDimensionsSelector", "useGridRootProps", "getTotalHeaderHeight", "useGridApiEventHandler", "_jsx", "React", "React", "React", "apiRef", "range", "useGridVisibleRows", "createSelector", "React", "virtualizationStateInitializer", "useGridVirtualization", "apiRef", "useGridApiMethod", "import_jsx_runtime", "ScrollDirection", "apiRef", "useGridRootProps", "useGridSelector", "gridDimensionsSelector", "gridFocusCellSelector", "useGridVisibleRows", "_a", "_jsx", "useGridApiEventHandler", "i", "React", "import_prop_types", "import_jsx_runtime", "styled_default", "useUtilityClasses", "classes", "getDataGridUtilityClass", "apiRef", "useGridRootProps", "useGridVisibleRows", "useGridSelector", "gridDimensionsSelector", "_jsx", "PropTypes", "React", "import_jsx_runtime", "apiRef", "useGridRootProps", "useGridSelector", "_jsx", "React", "apiRef", "useGridRootProps", "useGridSelector", "import_jsx_runtime", "Element", "styled_default", "useGridRootProps", "_jsx", "React", "import_jsx_runtime", "useUtilityClasses", "getDataGridUtilityClass", "Element", "styled_default", "classes", "_jsx", "gridClasses", "React", "import_jsx_runtime", "useUtilityClasses", "getDataGridUtilityClass", "Element", "styled_default", "classes", "_jsx", "gridClasses", "React", "import_jsx_runtime", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "GridVirtualScrollerContent", "useGridRootProps", "_jsx", "React", "import_jsx_runtime", "styled_default", "apiRef", "useGridSelector", "gridDimensionsSelector", "_jsxs", "gridClasses", "_jsx", "React", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "GridVirtualScrollerRenderZone", "apiRef", "useGridRootProps", "useGridSelector", "_jsx", "React", "createSelector", "GridPreferencePanelsValue", "import_jsx_runtime", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "GridVirtualScrollbar", "apiRef", "useGridRootProps", "useGridSelector", "gridDimensionsSelector", "_jsx", "import_jsx_runtime", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "GridVirtualScroller", "apiRef", "useGridRootProps", "useGridSelector", "gridDimensionsSelector", "_jsxs", "_jsx", "React", "import_jsx_runtime", "GridFooterPlaceholder", "useGridRootProps", "_jsx", "React", "import_prop_types", "React", "gridClasses", "useGridParamsApi", "apiRef", "gridFocusCellSelector", "useGridApiMethod", "import_jsx_runtime", "_excluded", "_excluded2", "PinnedPosition", "useUtilityClasses", "classes", "getDataGridUtilityClass", "_excluded", "apiRef", "useGridRootProps", "useGridSelector", "gridClasses", "classes", "useUtilityClasses", "gridFocusCellSelector", "_excluded2", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "_excluded2", "useGridRootProps", "label", "icon", "onClick", "other", "handleClick", "_jsx", "_jsxs", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "useGridRootProps", "_jsx", "PropTypes", "Memoized", "React", "import_prop_types", "gridClasses", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "GridRoot", "useGridRootProps", "apiRef", "useGridSelector", "_jsxs", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "GridFooterContainer", "useGridRootProps", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "GridOverlay", "useGridRootProps", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "GridToolbarContainer", "useGridRootProps", "_jsx", "PropTypes", "React", "import_prop_types", "React", "import_prop_types", "React", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "GridIconButtonContainer", "useGridRootProps", "_jsx", "import_jsx_runtime", "useUtilityClasses", "classes", "getDataGridUtilityClass", "_jsx", "apiRef", "useGridRootProps", "_jsxs", "PropTypes", "React", "import_jsx_runtime", "useUtilityClasses", "classes", "getDataGridUtilityClass", "apiRef", "useGridRootProps", "_jsx", "React", "import_prop_types", "import_jsx_runtime", "apiRef", "_jsx", "PropTypes", "React", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "ColumnHeaderInnerTitle", "useGridRootProps", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "GridColumnHeaderSeparatorSides", "useUtilityClasses", "classes", "getDataGridUtilityClass", "useGridRootProps", "_jsx", "PropTypes", "import_jsx_runtime", "_excluded", "GridGenericColumnHeaderItem", "classes", "apiRef", "useGridRootProps", "_jsxs", "_jsx", "import_jsx_runtime", "useUtilityClasses", "classes", "getDataGridUtilityClass", "apiRef", "useGridRootProps", "_jsx", "_jsxs", "_a", "gridClasses", "PropTypes", "Memoized", "React", "import_prop_types", "import_jsx_runtime", "useUtilityClasses", "classes", "getDataGridUtilityClass", "apiRef", "useGridRootProps", "useGridSelector", "open", "_jsx", "_jsxs", "PropTypes", "React", "init_utils", "import_jsx_runtime", "_jsx", "import_prop_types", "React", "import_jsx_runtime", "_excluded", "GridColumnMenuContainer", "_jsx", "gridClasses", "PropTypes", "React", "import_prop_types", "React", "_excluded", "apiRef", "defaultSlots", "React", "import_prop_types", "React", "import_prop_types", "import_jsx_runtime", "apiRef", "useGridRootProps", "_jsxs", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "apiRef", "useGridRootProps", "_jsxs", "_jsx", "PropTypes", "import_jsx_runtime", "_jsxs", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "apiRef", "useGridRootProps", "_jsxs", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "apiRef", "useGridSelector", "useGridRootProps", "_jsxs", "_jsx", "PropTypes", "import_jsx_runtime", "_excluded", "GridGenericColumnMenu", "defaultSlots", "_jsx", "GridColumnMenu", "PropTypes", "React", "import_prop_types", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "GridPanelWrapper", "useGridRootProps", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "useUtilityClasses", "classes", "getDataGridUtilityClass", "collator", "apiRef", "useGridSelector", "useGridRootProps", "_jsxs", "_jsx", "_a", "PropTypes", "import_jsx_runtime", "useGridRootProps", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "apiRef", "useGridRootProps", "classes", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "useGridRootProps", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "useGridRootProps", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "useGridRootProps", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "import_react", "_excluded", "_excluded2", "useUtilityClasses", "classes", "getDataGridUtilityClass", "GridLogicOperator", "collator", "GridFilterForm", "apiRef", "useGridSelector", "gridColumnLookupSelector", "useGridRootProps", "_a", "_jsxs", "_jsx", "_createElement", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "GridFilterPanel", "apiRef", "useGridRootProps", "useGridSelector", "GridLogicOperator", "_a", "_jsxs", "_jsx", "PropTypes", "React", "import_prop_types", "React", "import_prop_types", "init_utils", "import_jsx_runtime", "GridToolbarColumnsButton", "apiRef", "useGridRootProps", "useGridSelector", "_a", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "GridToolbarDensitySelector", "apiRef", "useGridRootProps", "useGridSelector", "_jsx", "_a", "_jsxs", "gridClasses", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "useUtilityClasses", "classes", "getDataGridUtilityClass", "GridToolbarFilterButton", "apiRef", "useGridRootProps", "useGridSelector", "gridColumnLookupSelector", "_jsxs", "_jsx", "_a", "PropTypes", "React", "import_prop_types", "React", "import_prop_types", "import_jsx_runtime", "GridToolbarExportContainer", "apiRef", "useGridRootProps", "_a", "_jsxs", "_jsx", "gridClasses", "PropTypes", "import_jsx_runtime", "_excluded", "_excluded2", "_excluded3", "apiRef", "_jsx", "GridToolbarExport", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "apiRef", "useGridRootProps", "useGridSelector", "isDeepEqual", "_jsx", "PropTypes", "import_jsx_runtime", "_excluded", "GridToolbar", "useGridRootProps", "_jsxs", "_jsx", "PropTypes", "React", "import_prop_types", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "GridSelectedRowCount", "apiRef", "useGridRootProps", "_jsx", "PropTypes", "import_jsx_runtime", "GridFooter", "apiRef", "useGridRootProps", "useGridSelector", "_jsx", "_jsxs", "PropTypes", "React", "React", "import_jsx_runtime", "GridPreferencesPanel", "apiRef", "useGridSelector", "useGridRootProps", "_jsx", "import_jsx_runtime", "GridHeader", "useGridRootProps", "_jsxs", "_jsx", "React", "import_prop_types", "import_jsx_runtime", "GridLoadingOverlay", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "GridNoRowsOverlay", "apiRef", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "GridPagination", "apiRef", "useGridRootProps", "useGridSelector", "i", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "GridRowCount", "apiRef", "useGridRootProps", "_jsxs", "PropTypes", "React", "import_prop_types", "GRID_DETAIL_PANEL_TOGGLE_FIELD", "React", "import_jsx_runtime", "gridClasses", "_jsx", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "_jsx", "gridClasses", "GridRow", "apiRef", "useGridRootProps", "useGridVisibleRows", "useGridSelector", "GRID_CHECKBOX_SELECTION_COL_DEF", "GRID_DETAIL_PANEL_TOGGLE_FIELD", "GRID_ACTIONS_COLUMN_TYPE", "_a", "i", "_jsxs", "PropTypes", "React", "import_jsx_runtime", "GridContextProvider", "apiRef", "_jsx", "React", "import_prop_types", "React", "createSelector", "React", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "styled_default", "GridColumnHeaders", "useGridRootProps", "_jsx", "React", "import_prop_types", "React", "React", "import_jsx_runtime", "useUtilityClasses", "classes", "getDataGridUtilityClass", "useGridRootProps", "apiRef", "useGridSelector", "_jsx", "import_jsx_runtime", "useGridColumnHeaders", "apiRef", "useGridRootProps", "useGridSelector", "gridDimensionsSelector", "useGridApiEventHandler", "_jsxs", "_jsx", "gridClasses", "i", "Memoized", "import_jsx_runtime", "_excluded", "GridColumnHeaders", "useGridColumnHeaders", "_jsxs", "PropTypes", "React", "import_jsx_runtime", "GridNoResultsOverlay", "apiRef", "_jsx", "React", "import_jsx_runtime", "_excluded", "GridColumnHeaderSortIcon", "useGridRootProps", "_jsx", "React", "import_jsx_runtime", "_excluded", "_jsx", "Memoized", "React", "apiRef", "cache", "i", "useGridApiMethod", "React", "useGridRegisterPipeProcessor", "apiRef", "useFirstRender", "React", "apiRef", "useFirstRender", "React", "useGridRegisterStrategyProcessor", "apiRef", "useFirstRender", "React", "apiRef", "setStrategyAvailability", "useGridApiMethod", "React", "apiRef", "React", "apiRef", "React", "noop", "apiRef", "useGridApiMethod", "React", "i", "useGridApiMethod", "React", "apiRef", "React", "apiRef", "useGridApiMethod", "useGridInitialization", "React", "serializeCellValue", "apiRef", "GRID_CHECKBOX_SELECTION_COL_DEF", "i", "range", "useGridClipboard", "apiRef", "gridFocusCellSelector", "serializeCellValue", "React", "columnMenuStateInitializer", "useGridColumnMenu", "apiRef", "gridColumnLookupSelector", "useGridApiMethod", "useGridApiEventHandler", "React", "import_jsx_runtime", "columnsStateInitializer", "apiRef", "useGridColumns", "_a", "_b", "gridColumnLookupSelector", "useGridApiMethod", "_jsx", "useGridRegisterPipeProcessor", "useGridApiEventHandler", "React", "useGridColumnSpanning", "apiRef", "i", "useGridApiMethod", "useGridApiEventHandler", "React", "isDeepEqual", "_excluded", "columnGroupsStateInitializer", "apiRef", "useGridColumnGrouping", "useGridApiMethod", "_a", "useGridApiEventHandler", "React", "densityStateInitializer", "useGridDensity", "apiRef", "useGridApiMethod", "_a", "useGridRegisterPipeProcessor", "React", "apiRef", "gridRowTreeSelector", "import_jsx_runtime", "useGridCsvExport", "apiRef", "useGridApiMethod", "_jsx", "useGridRegisterPipeProcessor", "React", "React", "apiRef", "useGridSelector", "useGridApiMethod", "_a", "_b", "useGridRegisterPipeProcessor", "useGridApiEventHandler", "import_jsx_runtime", "useGridPrintExport", "apiRef", "GRID_CHECKBOX_SELECTION_COL_DEF", "gridClasses", "getTotalHeaderHeight", "i", "useGridApiMethod", "_jsx", "useGridRegisterPipeProcessor", "React", "import_jsx_runtime", "filterStateInitializer", "apiRef", "getVisibleRowsLookup", "useGridFilter", "_a", "isDeepEqual", "useGridApiMethod", "_b", "_jsx", "i", "passFilterLogic", "useGridRegisterPipeProcessor", "useGridRegisterStrategyProcessor", "gridColumnLookupSelector", "useGridApiEventHandler", "useFirstRender", "React", "focusStateInitializer", "useGridFocus", "apiRef", "gridFocusCellSelector", "isNavigationKey", "gridClasses", "useGridApiMethod", "useGridApiEventHandler", "React", "apiRef", "useGridKeyboardNavigation", "useGridVisibleRows", "gridClasses", "GRID_CHECKBOX_SELECTION_COL_DEF", "isNavigationKey", "GRID_DETAIL_PANEL_TOGGLE_FIELD", "useGridRegisterPipeProcessor", "useGridApiEventHandler", "React", "apiRef", "useGridSelector", "useGridApiMethod", "_a", "_b", "useGridRegisterPipeProcessor", "useGridApiEventHandler", "React", "apiRef", "useGridSelector", "useGridApiMethod", "_a", "_b", "useGridRegisterPipeProcessor", "paginationStateInitializer", "useGridPagination", "apiRef", "React", "preferencePanelStateInitializer", "useGridPreferencesPanel", "apiRef", "useGridApiMethod", "_a", "useGridRegisterPipeProcessor", "React", "React", "_excluded", "_excluded2", "apiRef", "useGridApiEventHandler", "useGridApiMethod", "gridRowsDataRowIdToIdLookupSelector", "React", "_excluded", "_excluded2", "missingOnProcessRowUpdateErrorWarning", "apiRef", "GRID_ACTIONS_COLUMN_TYPE", "useGridApiEventHandler", "useGridApiMethod", "gridRowsDataRowIdToIdLookupSelector", "editingStateInitializer", "useGridEditing", "apiRef", "timeout", "useGridApiMethod", "React", "rowsStateInitializer", "apiRef", "useGridRows", "useGridVisibleRows", "cache", "throttle", "gridRowTreeSelector", "gridSortedRowIdsSelector", "gridFilteredRowsLookupSelector", "GRID_ROOT_GROUP_ID", "gridRowsDataRowIdToIdLookupSelector", "i", "useGridApiEventHandler", "useGridApiMethod", "GRID_ROOT_GROUP_ID", "i", "useGridRowsPreProcessors", "apiRef", "useGridRegisterStrategyProcessor", "React", "React", "computeSlots", "defaultSlots", "k", "React", "i", "useProps", "propValidatorsDataGrid", "isNumber", "validateProps", "useProps", "GRID_DEFAULT_LOCALE_TEXT", "computeSlots", "rowsMetaStateInitializer", "useGridRowsMeta", "apiRef", "useGridSelector", "useGridVisibleRows", "useGridApiMethod", "React", "React", "rowSelectionStateInitializer", "useGridRowSelection", "apiRef", "useGridVisibleRows", "useGridApiMethod", "gridClasses", "GRID_CHECKBOX_SELECTION_COL_DEF", "GRID_DETAIL_PANEL_TOGGLE_FIELD", "GRID_ACTIONS_COLUMN_TYPE", "isNavigationKey", "gridFocusCellSelector", "useGridApiEventHandler", "React", "useUtilityClasses", "classes", "getDataGridUtilityClass", "useGridRowSelectionPreProcessors", "apiRef", "GRID_CHECKBOX_SELECTION_COL_DEF", "GRID_CHECKBOX_SELECTION_FIELD", "useGridRegisterPipeProcessor", "React", "sortingStateInitializer", "useGridSorting", "apiRef", "gridRowTreeSelector", "GRID_ROOT_GROUP_ID", "gridSortedRowIdsSelector", "useGridApiMethod", "_a", "_b", "useGridRegisterPipeProcessor", "useGridRegisterStrategyProcessor", "gridColumnLookupSelector", "useGridApiEventHandler", "useFirstRender", "React", "useGridScroll", "apiRef", "useGridSelector", "gridDimensionsSelector", "useGridApiMethod", "useGridEvents", "apiRef", "React", "dimensionsStateInitializer", "useGridDimensions", "apiRef", "useGridSelector", "getTotalHeaderHeight", "dimensions", "gridDimensionsSelector", "useGridApiMethod", "k", "isJSDOM", "useGridApiEventHandler", "React", "useGridStatePersistence", "apiRef", "useGridApiMethod", "React", "i", "gridClasses", "apiRef", "useGridSelector", "columnResizeStateInitializer", "useGridColumnResize", "useGridApiMethod", "useGridApiEventHandler", "React", "useGridInitializeState", "apiRef", "apiRef", "i", "apiRef", "React", "React", "React", "React", "React", "import_prop_types", "apiRef", "useGridInitialization", "useGridRowSelectionPreProcessors", "useGridRowsPreProcessors", "useGridInitializeState", "dimensionsStateInitializer", "rowSelectionStateInitializer", "columnsStateInitializer", "rowsStateInitializer", "editingStateInitializer", "focusStateInitializer", "sortingStateInitializer", "preferencePanelStateInitializer", "filterStateInitializer", "densityStateInitializer", "columnResizeStateInitializer", "paginationStateInitializer", "rowsMetaStateInitializer", "columnMenuStateInitializer", "columnGroupsStateInitializer", "virtualizationStateInitializer", "useGridKeyboardNavigation", "useGridRowSelection", "useGridColumns", "useGridRows", "useGridParamsApi", "useGridColumnSpanning", "useGridColumnGrouping", "useGridEditing", "useGridFocus", "useGridPreferencesPanel", "useGridFilter", "useGridSorting", "useGridDensity", "useGridColumnResize", "useGridPagination", "useGridRowsMeta", "useGridScroll", "useGridColumnMenu", "useGridCsvExport", "useGridPrintExport", "useGridClipboard", "useGridDimensions", "useGridEvents", "useGridStatePersistence", "useGridVirtualization", "import_jsx_runtime", "propValidatorsDataGrid", "validateProps", "_jsx", "GridContextProvider", "_jsxs", "GridRoot", "GridHeader", "GridVirtualScroller", "GridFooterPlaceholder", "DataGrid", "PropTypes", "useGridRootProps", "import_jsx_runtime", "_excluded", "useUtilityClasses", "classes", "getDataGridUtilityClass", "useGridRootProps", "_jsx", "React", "useGridApiContext", "import_jsx_runtime", "_excluded", "gridClasses", "useUtilityClasses", "classes", "getDataGridUtilityClass", "apiRef", "useGridApiContext", "useGridRootProps", "_jsxs", "_jsx", "import_jsx_runtime", "_excluded", "apiRef", "_jsx", "_excluded", "apiRef", "React", "createSelector", "apiRef", "i", "apiRef", "_a", "_b", "React", "React", "React", "import_jsx_runtime", "useGridRootProps", "_jsx", "React", "import_jsx_runtime", "useUtilityClasses", "classes", "useGridRootProps", "apiRef", "useGridApiContext", "_jsx", "_jsxs", "React", "import_jsx_runtime", "useGridRootProps", "_jsx", "import_jsx_runtime", "_excluded", "_excluded2", "_jsx", "apiRef", "apiRef", "React", "serializeRow", "isSingleSelectColDef", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "apiRef", "useGridApiContext", "_jsx", "PropTypes", "React", "init_utils", "import_jsx_runtime", "_jsx", "React", "import_prop_types", "import_jsx_runtime", "apiRef", "useGridApiContext", "useGridRootProps", "_jsxs", "_jsx", "PropTypes", "React", "React", "import_jsx_runtime", "apiRef", "useGridApiContext", "useGridRootProps", "_jsxs", "_jsx", "React", "import_jsx_runtime", "apiRef", "useGridApiContext", "useGridRootProps", "_jsxs", "_jsx", "import_jsx_runtime", "_jsx", "import_jsx_runtime", "_excluded", "apiRef", "serializeRow", "useGridApiMethod", "_jsx", "useGridRegisterPipeProcessor", "React", "init_utils", "isKeyboardEvent", "apiRef", "useEventCallback_default", "document", "_a", "classes", "React", "missingOnProcessRowUpdateErrorWarning", "GRID_CHECKBOX_SELECTION_FIELD", "apiRef", "gridFocusCellSelector", "i", "useGridApiEventHandler", "useGridRegisterPipeProcessor", "apiRef", "React", "i", "materialSlots", "material_default", "material_default", "defaultSlots", "releaseInfo", "import_jsx_runtime", "_jsx", "_jsxs", "DataGridPremium", "PropTypes", "React", "import_jsx_runtime", "apiRef", "useGridApiContext", "_jsx", "_jsxs", "React", "import_jsx_runtime", "_jsx", "apiRef", "useGridApiContext", "React", "import_ReportProblem", "import_Info", "import_Autorenew", "import_Done", "import_jsx_runtime", "useGridRootProps", "apiRef", "useGridApiContext", "_jsx", "ReportProblemIcon", "InfoIcon", "AutorenewIcon", "DoneIcon", "_jsxs", "React", "import_jsx_runtime", "apiRef", "useGridApiContext", "_jsx", "_jsxs", "React", "import_jsx_runtime", "apiRef", "useGridApiContext", "_jsxs", "_jsx", "React", "import_jsx_runtime", "StyledAutocomplete", "apiRef", "useGridApiContext", "_jsx", "_jsxs", "chance", "range", "i", "React", "AbortController", "AbortSignal", "k", "i", "v", "i", "k", "_a", "_b", "_c", "React", "currencyFormatter", "React", "React", "comparator", "isDeepEqual"]
}
