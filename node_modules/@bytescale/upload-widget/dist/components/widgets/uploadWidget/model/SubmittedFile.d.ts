import { UploadedFile } from "../../../../modules/UploadedFile";
import { FileLike } from "@bytescale/upload-widget";
export interface PreprocessingFile {
    file: FileLike;
    fileIndex: number;
    type: "preprocessing";
}
export interface UploadingFile {
    cancel: () => void;
    file: FileLike;
    fileIndex: number;
    progress: number;
    type: "uploading";
}
export interface FailedFile {
    error: Error;
    file: FileLike;
    fileIndex: number;
    type: "failed";
}
export interface UploadedFileContainer {
    editedFile: UploadedFile | undefined;
    file: FileLike;
    fileIndex: number;
    isReady: boolean;
    type: "uploaded";
    uploadedFile: UploadedFile;
}
export declare type PendingFile = PreprocessingFile | UploadingFile;
export declare type SubmittedFile = PendingFile | UploadedFileContainer | FailedFile;
export declare function isUploadedFile(file: SubmittedFile): file is UploadedFileContainer;
export declare function isPendingFile(file: SubmittedFile): file is PendingFile;
export declare function isFailedFile(file: SubmittedFile): file is FailedFile;
export interface SubmittedFileMap {
    [sparseFileIndex: number]: SubmittedFile | undefined;
}
